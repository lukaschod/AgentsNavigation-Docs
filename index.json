{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome to the Scripting Reference!",
    "keywords": "Welcome to the Scripting Reference! Select the API to view the detail."
  },
  "api/ProjectDawn.LocalAvoidance.Circle.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Circle.html",
    "title": "Struct Circle",
    "keywords": "Struct Circle Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public struct Circle Constructors Circle(float2, Single) Declaration public Circle(float2 point, float radius) Parameters Type Name Description Unity.Mathematics.float2 point System.Single radius Fields Point Declaration public float2 Point Field Value Type Description Unity.Mathematics.float2 Radius Declaration public float Radius Field Value Type Description System.Single Methods Collide(Circle, Circle) Declaration public static bool Collide(Circle a, Circle b) Parameters Type Name Description Circle a Circle b Returns Type Description System.Boolean TangentLineToCircleAngle(Single, Single) Declaration public static float TangentLineToCircleAngle(float circleRadius, float distanceFromCircle) Parameters Type Name Description System.Single circleRadius System.Single distanceFromCircle Returns Type Description System.Single"
  },
  "api/ProjectDawn.LocalAvoidance.html": {
    "href": "api/ProjectDawn.LocalAvoidance.html",
    "title": "Namespace ProjectDawn.LocalAvoidance",
    "keywords": "Namespace ProjectDawn.LocalAvoidance Classes Intersection SonarAvoidanceUtility Sonar avoidance utility class with some helpful functions. Structs Circle Line One dimension line segment. Line.CutResult SonarAvoidance This structure can be used for constructing local objet avoidance structure and finding the closest direction for it. It is composed of three main methods: Constructor, InsertObstacle and FindClosestDirection. Interfaces SonarAvoidance.IDrawArc Interface used to implement draw arc method. SonarAvoidance.IDrawCircle Interface used to implement draw circle method."
  },
  "api/ProjectDawn.LocalAvoidance.Intersection.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Intersection.html",
    "title": "Class Intersection",
    "keywords": "Class Intersection Inheritance System.Object Intersection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public class Intersection Methods IntersectionOfCircleAndSegment(Circle, float2, float2, out float2, out float2) Declaration public static bool IntersectionOfCircleAndSegment(Circle circle, float2 segmentStart, float2 segmentEnd, out float2 intersectionStart, out float2 intersectionEnd) Parameters Type Name Description Circle circle Unity.Mathematics.float2 segmentStart Unity.Mathematics.float2 segmentEnd Unity.Mathematics.float2 intersectionStart Unity.Mathematics.float2 intersectionEnd Returns Type Description System.Boolean IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, Single, out Line, out Line) Finds intersection angle range of two movings circles with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float speedB, float maxDistance, out Line angles, out Line times) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single speedB System.Single maxDistance Line angles Line times Returns Type Description System.Boolean IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, Single, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB speed, angle. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float angleB, float speedB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single angleB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, out Single, out Single) Finds intersection times of two movings circles with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float speedB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean IntersectionOfTwoMovingCircles(Circle, float2, Circle, float2, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB velocity. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float2 velocityB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB Unity.Mathematics.float2 velocityB System.Single time0 System.Single time1 Returns Type Description System.Boolean IntersectionOfTwoMovingPoints(float2, float2, float2, Single, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingPoints(float2 pointA, float2 velocityA, float2 pointB, float speedB, out float time0, out float time1) Parameters Type Name Description Unity.Mathematics.float2 pointA Unity.Mathematics.float2 velocityA Unity.Mathematics.float2 pointB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.LocalAvoidance.Line.CutResult.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Line.CutResult.html",
    "title": "Struct Line.CutResult",
    "keywords": "Struct Line.CutResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public struct CutResult Fields Segment0 Declaration public Line Segment0 Field Value Type Description Line Segment1 Declaration public Line Segment1 Field Value Type Description Line SegmentCount Declaration public int SegmentCount Field Value Type Description System.Int32"
  },
  "api/ProjectDawn.LocalAvoidance.Line.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Line.html",
    "title": "Struct Line",
    "keywords": "Struct Line One dimension line segment. Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax [Serializable] public struct Line Constructors Line(Single, Single) Declaration public Line(float from, float to) Parameters Type Name Description System.Single from System.Single to Fields From Position where segment starts. Must be lower than To . Declaration public float From Field Value Type Description System.Single To Position where segment ends. Must be greated than From . Declaration public float To Field Value Type Description System.Single Properties Length Length of segment from start to end. Declaration public float Length { get; } Property Value Type Description System.Single Methods CutLine(Line, Line, out Line.CutResult) Declaration public static bool CutLine(Line lhs, Line rhs, out Line.CutResult result) Parameters Type Name Description Line lhs Line rhs Line.CutResult result Returns Type Description System.Boolean Equals(Line) Declaration public bool Equals(Line other) Parameters Type Name Description Line other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object compare) Parameters Type Name Description System.Object compare Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(Line, Line) Declaration public static bool operator ==(Line lhs, Line rhs) Parameters Type Name Description Line lhs Line rhs Returns Type Description System.Boolean Inequality(Line, Line) Declaration public static bool operator !=(Line lhs, Line rhs) Parameters Type Name Description Line lhs Line rhs Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.html",
    "title": "Struct SonarAvoidance",
    "keywords": "Struct SonarAvoidance This structure can be used for constructing local objet avoidance structure and finding the closest direction for it. It is composed of three main methods: Constructor, InsertObstacle and FindClosestDirection. Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax [BurstCompile] public struct SonarAvoidance : IDisposable Constructors SonarAvoidance(Allocator) Constructs sonar avoidance without properties. After this constructor you must call Set(float3, float3, float3, float3, Single, Single, Single) at least once to setup correct properties. Declaration public SonarAvoidance(Allocator allocator) Parameters Type Name Description Unity.Collections.Allocator allocator Allocator type Properties InnerRadius Inner radius of sonar. Declaration public float InnerRadius { get; } Property Value Type Description System.Single IsCreated True if structure is created. Declaration public bool IsCreated { get; } Property Value Type Description System.Boolean OuterRadius Outer radius of sonar. Declaration public float OuterRadius { get; } Property Value Type Description System.Single Position Position of sonar. Declaration public float3 Position { get; } Property Value Type Description Unity.Mathematics.float3 Rotation Rotation of sonar. Declaration public quaternion Rotation { get; } Property Value Type Description Unity.Mathematics.quaternion Speed Speed of sonar. Declaration public float Speed { get; } Property Value Type Description System.Single Methods Clear() Remove all inserted obstacles. Declaration public void Clear() CopyFrom(SonarAvoidance) Constructs copy of sonar avoidance. No memory is shared between copy and original. Declaration public void CopyFrom(in SonarAvoidance other) Parameters Type Name Description SonarAvoidance other Copies from DirectionToRotation(float3, float3) This is almost same as Quaternion.LookRotation just uses forward as x axis instead of z. Declaration public static quaternion DirectionToRotation(float3 forward, float3 up) Parameters Type Name Description Unity.Mathematics.float3 forward Forward direction on x axis Unity.Mathematics.float3 up Up direction Returns Type Description Unity.Mathematics.quaternion Dispose() Dispose implementation. Declaration public void Dispose() DrawObstacleCircle<T>(T, float3, float3, Single, Int32) Draw sonar obstacle collision points. Use provided action to draw it. Declaration public void DrawObstacleCircle<T>(T action, float3 position, float3 velocity, float radius, int numIterations = 5) where T : struct, SonarAvoidance.IDrawCircle Parameters Type Name Description T action Structure used for drawing Unity.Mathematics.float3 position Position of obstacle Unity.Mathematics.float3 velocity Velocity of obstacle System.Single radius Radius of obstacle System.Int32 numIterations Number of iterations of obstacle collisions Type Parameters Name Description T The type of draw structure DrawSonar<T>(T) Draws sonar that is not obstructed by obstacle. Use provided action to draw it. Declaration public void DrawSonar<T>(T action) where T : struct, SonarAvoidance.IDrawArc Parameters Type Name Description T action Structure used for drawing Type Parameters Name Description T The type of draw structure FindClosestDirection(out float3) Finds closest desired direction that is not obstructed by obstacle. Declaration public bool FindClosestDirection(out float3 direction) Parameters Type Name Description Unity.Mathematics.float3 direction Closest direction found Returns Type Description System.Boolean True if direction was found InsertObstacle(float3, Single) Inserts radius obstacle into sonar. Declaration public bool InsertObstacle(float3 direction, float radius) Parameters Type Name Description Unity.Mathematics.float3 direction Direction of obstacle from sonar System.Single radius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully InsertObstacle(float3, float3, Single) Declaration [Obsolete(\"This method is obsolete, please use InsertObstacleCircle\")] public bool InsertObstacle(float3 obstaclePosition, float3 obstacleVelocity, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Unity.Mathematics.float3 obstacleVelocity System.Single obstacleRadius Returns Type Description System.Boolean InsertObstacleCircle(float3, Single) Inserts sphere obstacle into sonar. Declaration public bool InsertObstacleCircle(float3 obstaclePosition, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Position of obstacle System.Single obstacleRadius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully InsertObstacleCircle(float3, float3, Single) Inserts sphere obstacle into sonar. Declaration public bool InsertObstacleCircle(float3 obstaclePosition, float3 obstacleVelocity, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Position of obstacle Unity.Mathematics.float3 obstacleVelocity Velocity of obstacle (Zero can be used for non moving obstacle) System.Single obstacleRadius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully InsertObstacleLine(float3, float3) Inserts line obstacle into sonar. Declaration public bool InsertObstacleLine(float3 obstacleStartPosition, float3 obstacleEndPosition) Parameters Type Name Description Unity.Mathematics.float3 obstacleStartPosition Start position of obstacle Unity.Mathematics.float3 obstacleEndPosition End position of obstacle Returns Type Description System.Boolean True if obstacle was added successfully InsertObstacleLineIgnoreRadius(float3, float3) Inserts line obstacle into sonar without using the radius. Counter clockwise wall will be ignored. Declaration public bool InsertObstacleLineIgnoreRadius(float3 obstacleStartPosition, float3 obstacleEndPosition) Parameters Type Name Description Unity.Mathematics.float3 obstacleStartPosition Start position of obstacle Unity.Mathematics.float3 obstacleEndPosition End position of obstacle Returns Type Description System.Boolean True if obstacle was added successfully Set(float3, float3, float3, float3, Single, Single, Single) Reconstructs sonar avoidance using position, direction and radius. Declaration public void Set(float3 position, float3 velocity, float3 direction, float3 up, float innerRadius, float outerRadius, float angle) Parameters Type Name Description Unity.Mathematics.float3 position Position of sonar Unity.Mathematics.float3 velocity Unity.Mathematics.float3 direction Direction of sonar. Note this is forward direction on x axis, not z like LookRotation uses Unity.Mathematics.float3 up Up direction System.Single innerRadius Minimum radius from which sonar will tracks obstacles and also used for path size System.Single outerRadius Maximum radius from which sonar will tracks obstacles System.Single angle The total angle in radians of sonar volume. One way to think it as range from -angle/2 to angle/2 the desired direction and avoidance direction will be. Set(float3, float3, quaternion, Single, Single, Single) Declaration public void Set(float3 position, float3 velocity, quaternion rotation, float innerRadius, float outerRadius, float angle) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 velocity Unity.Mathematics.quaternion rotation System.Single innerRadius System.Single outerRadius System.Single angle TryDirectionToRotation(float3, float3, out quaternion) This is almost same as Quaternion.LookRotation just uses forward as x axis instead of z. Declaration public static bool TryDirectionToRotation(float3 forward, float3 up, out quaternion rotation) Parameters Type Name Description Unity.Mathematics.float3 forward Forward direction on x axis Unity.Mathematics.float3 up Up direction Unity.Mathematics.quaternion rotation Returns Type Description System.Boolean Implements System.IDisposable Extension Methods SonarAvoidanceUtility.DrawSonar(SonarAvoidance) SonarAvoidanceUtility.DrawObstacleCircle(SonarAvoidance, float3, float3, Single, Int32) SonarAvoidanceUtility.DrawClosestDirection(SonarAvoidance)"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawArc.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawArc.html",
    "title": "Interface SonarAvoidance.IDrawArc",
    "keywords": "Interface SonarAvoidance.IDrawArc Interface used to implement draw arc method. Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public interface IDrawArc Methods DrawArc(float3, float3, float3, float3, Single, Color) Declaration void DrawArc(float3 center, float3 normal, float3 from, float3 to, float angle, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from Unity.Mathematics.float3 to System.Single angle UnityEngine.Color color"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawCircle.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawCircle.html",
    "title": "Interface SonarAvoidance.IDrawCircle",
    "keywords": "Interface SonarAvoidance.IDrawCircle Interface used to implement draw circle method. Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public interface IDrawCircle Methods DrawCircle(float3, float3, Single, Color) Declaration void DrawCircle(float3 center, float3 normal, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal System.Single radius UnityEngine.Color color"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidanceUtility.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidanceUtility.html",
    "title": "Class SonarAvoidanceUtility",
    "keywords": "Class SonarAvoidanceUtility Sonar avoidance utility class with some helpful functions. Inheritance System.Object SonarAvoidanceUtility Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public static class SonarAvoidanceUtility Methods DrawClosestDirection(SonarAvoidance) Draws closest desired direction that is not obstructed by obstacle. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawClosestDirection(this SonarAvoidance sonar) Parameters Type Name Description SonarAvoidance sonar DrawObstacleCircle(SonarAvoidance, float3, float3, Single, Int32) Draw sonar obstacle collision points. Use provided action to draw it. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawObstacleCircle(this SonarAvoidance sonar, float3 position, float3 velocity, float radius, int numIterations = 5) Parameters Type Name Description SonarAvoidance sonar Unity.Mathematics.float3 position Unity.Mathematics.float3 velocity System.Single radius System.Int32 numIterations DrawSonar(SonarAvoidance) Draws sonar that is not obstructed by obstacle. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawSonar(this SonarAvoidance sonar) Parameters Type Name Description SonarAvoidance sonar"
  },
  "api/ProjectDawn.Navigation.Agent.html": {
    "href": "api/ProjectDawn.Navigation.Agent.html",
    "title": "Struct Agent",
    "keywords": "Struct Agent Agent tag. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Agent : IComponentData, IQueryTypeParameter Fields Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers Properties Default Returns default configuration. Declaration public static Agent Default { get; } Property Value Type Description Agent Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentActionSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentActionSystemGroup.html",
    "title": "Class AgentActionSystemGroup",
    "keywords": "Class AgentActionSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentActionSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentSpatialSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentActionSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentBody.html": {
    "href": "api/ProjectDawn.Navigation.AgentBody.html",
    "title": "Struct AgentBody",
    "keywords": "Struct AgentBody Agent's body movement. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentBody : IComponentData, IQueryTypeParameter Fields Destination Final destination that agent will attempt to reach. Declaration public float3 Destination Field Value Type Description Unity.Mathematics.float3 Force Force that agent will use to move towards. Calculated from agent position and destination. Declaration public float3 Force Field Value Type Description Unity.Mathematics.float3 IsStopped This property holds the stop or resume condition of the agent. Declaration public bool IsStopped Field Value Type Description System.Boolean RemainingDistance The distance between the agent's position and the destination. With NavMesh this value will return partial remaining distance not full path. Declaration public float RemainingDistance Field Value Type Description System.Single Velocity The velocity agent is moving. Declaration public float3 Velocity Field Value Type Description Unity.Mathematics.float3 Properties Default Returns default configuration. Declaration public static AgentBody Default { get; } Property Value Type Description AgentBody Speed Returns the legnth of Velocity . Declaration public float Speed { get; } Property Value Type Description System.Single Methods SetDestination(float3) Sets properties for new agent destination. Declaration public void SetDestination(float3 value) Parameters Type Name Description Unity.Mathematics.float3 value Stop() Sets properties for agent to stop. Declaration public void Stop() Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentCollider.html": {
    "href": "api/ProjectDawn.Navigation.AgentCollider.html",
    "title": "Struct AgentCollider",
    "keywords": "Struct AgentCollider This component tags, if agent should collide with nearby agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentCollider : IComponentData, IQueryTypeParameter, IEnableableComponent Fields Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers Properties Default Returns default configuration. Declaration public static AgentCollider Default { get; } Property Value Type Description AgentCollider Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.AgentColliderSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentColliderSystem.html",
    "title": "Struct AgentColliderSystem",
    "keywords": "Struct AgentColliderSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentDisplacementSystemGroup))] public struct AgentColliderSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentCrowdPath.html": {
    "href": "api/ProjectDawn.Navigation.AgentCrowdPath.html",
    "title": "Struct AgentCrowdPath",
    "keywords": "Struct AgentCrowdPath Agent Crowd pathing. Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < AgentCrowdPath > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentCrowdPath : ISharedComponentData, IQueryTypeParameter, IEquatable<AgentCrowdPath> Fields Group Entity that contains CrowdGroup and CrowdGroupFlow . Declaration public Entity Group Field Value Type Description Unity.Entities.Entity Properties Default Returns default configuration. Declaration public static AgentCrowdPath Default { get; } Property Value Type Description AgentCrowdPath Methods Equals(AgentCrowdPath) Declaration public bool Equals(AgentCrowdPath other) Parameters Type Name Description AgentCrowdPath other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.AgentDisplacementSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentDisplacementSystemGroup.html",
    "title": "Class AgentDisplacementSystemGroup",
    "keywords": "Class AgentDisplacementSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentDisplacementSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentLocomotionSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentDisplacementSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentFlockSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentFlockSystem.html",
    "title": "Class AgentFlockSystem",
    "keywords": "Class AgentFlockSystem Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase AgentFlockSystem Inherited Members Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnCreate() Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.OnDestroy() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentForceSystemGroup))] [UpdateAfter(typeof(FlockGroupSystem))] public class AgentFlockSystem : SystemBase Methods OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.AgentForceSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentForceSystem.html",
    "title": "Struct AgentForceSystem",
    "keywords": "Struct AgentForceSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentLocomotionSystemGroup))] [Obsolete(\"AgentForceSystem is deprecated, please use AgentLocomotionSystem!\", false)] public struct AgentForceSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentForceSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentForceSystemGroup.html",
    "title": "Class AgentForceSystemGroup",
    "keywords": "Class AgentForceSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentForceSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentPathingSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentForceSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentLocomotion.html": {
    "href": "api/ProjectDawn.Navigation.AgentLocomotion.html",
    "title": "Struct AgentLocomotion",
    "keywords": "Struct AgentLocomotion Agent's locomotion that moves towards destination with arrival. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentLocomotion : IComponentData, IQueryTypeParameter Fields Acceleration The maximum acceleration of an agent as it follows a path, given in units / sec^2. Declaration public float Acceleration Field Value Type Description System.Single AngularSpeed Maximum turning speed in (rad/s) while following a path. Declaration public float AngularSpeed Field Value Type Description System.Single AutoBreaking Should the agent brake automatically to avoid overshooting the destination point? Declaration public bool AutoBreaking Field Value Type Description System.Boolean Speed Maximum movement speed when moving to destination. Declaration public float Speed Field Value Type Description System.Single StoppingDistance Stop within this distance from the target position. Declaration public float StoppingDistance Field Value Type Description System.Single Properties Default Returns default configuration. Declaration public static AgentLocomotion Default { get; } Property Value Type Description AgentLocomotion Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentLocomotionSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentLocomotionSystem.html",
    "title": "Struct AgentLocomotionSystem",
    "keywords": "Struct AgentLocomotionSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentLocomotionSystemGroup))] public struct AgentLocomotionSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentLocomotionSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentLocomotionSystemGroup.html",
    "title": "Class AgentLocomotionSystemGroup",
    "keywords": "Class AgentLocomotionSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentLocomotionSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentForceSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentLocomotionSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentPathingSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentPathingSystemGroup.html",
    "title": "Class AgentPathingSystemGroup",
    "keywords": "Class AgentPathingSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentPathingSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentSeekingSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentPathingSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentPositionSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentPositionSystemGroup.html",
    "title": "Class AgentPositionSystemGroup",
    "keywords": "Class AgentPositionSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentPositionSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"AgentPositionSystemGroup is deprecated, please use AgentDisplacementSystemGroup!\", false)] [UpdateInGroup(typeof(AgentDisplacementSystemGroup))] public class AgentPositionSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentReciprocalAvoid.html": {
    "href": "api/ProjectDawn.Navigation.AgentReciprocalAvoid.html",
    "title": "Struct AgentReciprocalAvoid",
    "keywords": "Struct AgentReciprocalAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentReciprocalAvoid : IComponentData, IQueryTypeParameter Fields Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers Radius Declaration public float Radius Field Value Type Description System.Single Properties Default Declaration public static AgentReciprocalAvoid Default { get; } Property Value Type Description AgentReciprocalAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentReciprocalAvoidSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentReciprocalAvoidSystem.html",
    "title": "Struct AgentReciprocalAvoidSystem",
    "keywords": "Struct AgentReciprocalAvoidSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentReciprocalAvoidSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSeekingSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeekingSystem.html",
    "title": "Struct AgentSeekingSystem",
    "keywords": "Struct AgentSeekingSystem System that steers agent towards destination. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentSeekingSystemGroup))] public struct AgentSeekingSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSeekingSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeekingSystemGroup.html",
    "title": "Class AgentSeekingSystemGroup",
    "keywords": "Class AgentSeekingSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSeekingSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentActionSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentSeekingSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentSeparation.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeparation.html",
    "title": "Struct AgentSeparation",
    "keywords": "Struct AgentSeparation Agent separation from nearby agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSeparation : IComponentData, IQueryTypeParameter Fields Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers Radius Radius at which agent will attempt separate from each other. Declaration public float Radius Field Value Type Description System.Single Weight The weight of the separation force. Declaration public float Weight Field Value Type Description System.Single Properties Default Returns default configuration. Declaration public static AgentSeparation Default { get; } Property Value Type Description AgentSeparation Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSeparationSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeparationSystem.html",
    "title": "Struct AgentSeparationSystem",
    "keywords": "Struct AgentSeparationSystem System that calculates separation direction from nearby agents. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentSeparationSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentShape.html": {
    "href": "api/ProjectDawn.Navigation.AgentShape.html",
    "title": "Struct AgentShape",
    "keywords": "Struct AgentShape Represents agent shape in space. In the future this component might be split into specific shape components instead of having one big generic. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentShape : IComponentData, IQueryTypeParameter Fields Height The height of the agent for purposes of passing under obstacles, etc. Declaration public float Height Field Value Type Description System.Single Radius The radius of the agent. Declaration public float Radius Field Value Type Description System.Single Type The type of shape. Declaration public ShapeType Type Field Value Type Description ShapeType Properties Default Returns default configuration. Declaration public static AgentShape Default { get; } Property Value Type Description AgentShape Orentation Declaration public quaternion Orentation { get; } Property Value Type Description Unity.Mathematics.quaternion Up Declaration public float3 Up { get; } Property Value Type Description Unity.Mathematics.float3 Methods GetUp() Returns up vector of shape. Declaration public float3 GetUp() Returns Type Description Unity.Mathematics.float3 Returns up vector of shape. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSmartStop.html": {
    "href": "api/ProjectDawn.Navigation.AgentSmartStop.html",
    "title": "Struct AgentSmartStop",
    "keywords": "Struct AgentSmartStop Agent smart stop to handle some common stuck scenarios. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSmartStop : IComponentData, IQueryTypeParameter, IEnableableComponent Fields GiveUpStop Declaration public GiveUpStop GiveUpStop Field Value Type Description GiveUpStop HiveMindStop Declaration public HiveMindStop HiveMindStop Field Value Type Description HiveMindStop Properties Default Returns default configuration. Declaration public static AgentSmartStop Default { get; } Property Value Type Description AgentSmartStop Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.AgentSmartStopSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSmartStopSystem.html",
    "title": "Struct AgentSmartStopSystem",
    "keywords": "Struct AgentSmartStopSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentActionSystemGroup))] public struct AgentSmartStopSystem : ISystem Methods OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentsNavigationSettings.html": {
    "href": "api/ProjectDawn.Navigation.AgentsNavigationSettings.html",
    "title": "Class AgentsNavigationSettings",
    "keywords": "Class AgentsNavigationSettings Settings asset of agents navigation package. Contains list of sub settings combined from classes that implement ISubSettings interface. Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject AgentsNavigationSettings Inherited Members UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [CreateAssetMenu(fileName = \"Agents Navigation Settings\", menuName = \"AI/Agents Navigation Settings\", order = 1000)] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/settings.html\")] public class AgentsNavigationSettings : ScriptableObject Constructors AgentsNavigationSettings() Declaration public AgentsNavigationSettings() Properties Instance Currently used agents navigation settings asset. Declaration public static AgentsNavigationSettings Instance { get; set; } Property Value Type Description AgentsNavigationSettings SubSettings Declaration public List<ISubSettings> SubSettings { get; } Property Value Type Description System.Collections.Generic.List < ISubSettings > Methods Contains(Type) Returns true, if contains settings of specified type. Declaration public bool Contains(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean FindTypesInAssemblies() Returns all types that implement ISubSettings interface. Declaration public static List<Type> FindTypesInAssemblies() Returns Type Description System.Collections.Generic.List < System.Type > Get<T>() Returns instance of sub setting. In case project does not have settings asset set, it will return instance with default values. Declaration public static T Get<T>() where T : ISubSettings Returns Type Description T Type Parameters Name Description T"
  },
  "api/ProjectDawn.Navigation.AgentSonarAvoid.html": {
    "href": "api/ProjectDawn.Navigation.AgentSonarAvoid.html",
    "title": "Struct AgentSonarAvoid",
    "keywords": "Struct AgentSonarAvoid Agent avoidance of nearby agents using Sonar Avoidance algorithm. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSonarAvoid : IComponentData, IQueryTypeParameter, IEnableableComponent Fields Angle The angle of obstacle inserted behind agent velocity. Declaration public float Angle Field Value Type Description System.Single BlockedStop Whenever agent should stop if all directions are blocked. Declaration public bool BlockedStop Field Value Type Description System.Boolean Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers MaxAngle The maximum angle at which agent will attempt to nearby agents. Declaration public float MaxAngle Field Value Type Description System.Single Mode Mode that modifies avoidance behaviour. Declaration public SonarAvoidMode Mode Field Value Type Description SonarAvoidMode Radius The maximum distance at which agent will attempt to avoid nearby agents. Declaration public float Radius Field Value Type Description System.Single Properties Default Returns default configuration. Declaration public static AgentSonarAvoid Default { get; } Property Value Type Description AgentSonarAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.AgentSonarAvoidSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSonarAvoidSystem.html",
    "title": "Struct AgentSonarAvoidSystem",
    "keywords": "Struct AgentSonarAvoidSystem System that calculates avoidance direction from nearby agents. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentSonarAvoidSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.html",
    "title": "Struct AgentSpatialPartitioningSystem",
    "keywords": "Struct AgentSpatialPartitioningSystem Partitions agents into arbitary size cells. This allows to query nearby agents more efficiently. Space is partitioned using multi hash map. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentSpatialSystemGroup))] public struct AgentSpatialPartitioningSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState systemState) Parameters Type Name Description Unity.Entities.SystemState systemState OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Settings.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Settings.html",
    "title": "Struct AgentSpatialPartitioningSystem.Settings",
    "keywords": "Struct AgentSpatialPartitioningSystem.Settings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"This class is obsolete, please use new settings workflow https://lukaschod.github.io/agents-navigation-docs/manual/settings.html.\")] public struct Settings : IComponentData, IQueryTypeParameter Fields CellSize Declaration public float3 CellSize Field Value Type Description Unity.Mathematics.float3 QueryCapacity Declaration public int QueryCapacity Field Value Type Description System.Int32 Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Singleton.html",
    "title": "Struct AgentSpatialPartitioningSystem.Singleton",
    "keywords": "Struct AgentSpatialPartitioningSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Properties QueryCapacity Declaration public int QueryCapacity { get; } Property Value Type Description System.Int32 Methods QueryCircle<T>(float3, Single, ref T, NavigationLayers) Query agents that intersect with the sphere. Declaration public int QueryCircle<T>(float3 center, float radius, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QueryCircle<T>(float3, Single, Int32, ref T, NavigationLayers) Query agents that intersect with the circle. Declaration public int QueryCircle<T>(float3 center, float radius, int maxCount, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Int32 maxCount T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QueryCylinder<T>(float3, Single, Single, ref T, NavigationLayers) Query agents that intersect with the cylinder. Declaration public int QueryCylinder<T>(float3 center, float radius, float height, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QueryCylinder<T>(float3, Single, Single, Int32, ref T, NavigationLayers) Query agents that intersect with the sphere. Declaration public int QueryCylinder<T>(float3 center, float radius, float height, int maxCount, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height System.Int32 maxCount T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QueryCylinderCells<T>(float3, Single, Single, T) Query partitions that intersect with the cylinder. Declaration public int QueryCylinderCells<T>(float3 center, float radius, float height, T action) where T : struct, ISpatialQueryVolume Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height T action Returns Type Description System.Int32 Type Parameters Name Description T QueryLine<T>(float3, float3, ref T, NavigationLayers) Query agents that intersect with the line. Declaration public int QueryLine<T>(float3 from, float3 to, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 from Unity.Mathematics.float3 to T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QuerySphere<T>(float3, Single, ref T, NavigationLayers) Query agents that intersect with the sphere. Declaration public int QuerySphere<T>(float3 center, float radius, ref T action, NavigationLayers layers = NavigationLayers.Default | NavigationLayers.Layer1 | NavigationLayers.Layer2 | NavigationLayers.Layer3 | NavigationLayers.Layer4 | NavigationLayers.Layer5 | NavigationLayers.Layer6 | NavigationLayers.Layer7 | NavigationLayers.Layer8 | NavigationLayers.Layer9 | NavigationLayers.Layer10 | NavigationLayers.Layer11 | NavigationLayers.Layer12 | NavigationLayers.Layer13 | NavigationLayers.Layer14 | NavigationLayers.Layer15 | NavigationLayers.Layer16 | NavigationLayers.Layer17 | NavigationLayers.Layer18 | NavigationLayers.Layer19 | NavigationLayers.Layer20 | NavigationLayers.Layer21 | NavigationLayers.Layer22 | NavigationLayers.Layer23 | NavigationLayers.Layer24 | NavigationLayers.Layer25 | NavigationLayers.Layer26 | NavigationLayers.Layer27 | NavigationLayers.Layer28 | NavigationLayers.Layer29 | NavigationLayers.Layer30 | NavigationLayers.Layer31 | NavigationLayers.Everything) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius T action NavigationLayers layers Returns Type Description System.Int32 Type Parameters Name Description T QuerySphereCells<T>(float3, Single, T) Query partitions that intersect with the sphere. Declaration public int QuerySphereCells<T>(float3 center, float radius, T action) where T : struct, ISpatialQueryVolume Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius T action Returns Type Description System.Int32 Type Parameters Name Description T Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSpatialSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialSystemGroup.html",
    "title": "Class AgentSpatialSystemGroup",
    "keywords": "Class AgentSpatialSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSpatialSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentSpatialSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentSteering.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteering.html",
    "title": "Struct AgentSteering",
    "keywords": "Struct AgentSteering Agent's steering towards destination with arrival. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"AgentSteering is deprecated, please use AgentLocomotion!\", false)] public struct AgentSteering : IComponentData, IQueryTypeParameter Fields Acceleration The maximum acceleration of an agent as it follows a path, given in units / sec^2. Declaration public float Acceleration Field Value Type Description System.Single AngularSpeed Maximum turning speed in (rad/s) while following a path. Declaration public float AngularSpeed Field Value Type Description System.Single AutoBreaking Should the agent brake automatically to avoid overshooting the destination point? Declaration public bool AutoBreaking Field Value Type Description System.Boolean Speed Maximum movement speed when moving to destination. Declaration public float Speed Field Value Type Description System.Single StoppingDistance Stop within this distance from the target position. Declaration public float StoppingDistance Field Value Type Description System.Single Properties Default Returns default configuration. Declaration public static AgentSteering Default { get; } Property Value Type Description AgentSteering Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSteeringSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteeringSystem.html",
    "title": "Struct AgentSteeringSystem",
    "keywords": "Struct AgentSteeringSystem System that steers agent towards destination. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentSteeringSystemGroup))] [Obsolete(\"AgentSteeringSystem is deprecated, please use AgentSeekingSystem!\", false)] public struct AgentSteeringSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSteeringSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteeringSystemGroup.html",
    "title": "Class AgentSteeringSystemGroup",
    "keywords": "Class AgentSteeringSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSteeringSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"AgentSteeringSystemGroup is deprecated, please use AgentSeekingSystemGroup!\", false)] [UpdateInGroup(typeof(AgentSeekingSystemGroup))] public class AgentSteeringSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSystemGroup.html",
    "title": "Class AgentSystemGroup",
    "keywords": "Class AgentSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(FixedStepSimulationSystemGroup))] public class AgentSystemGroup : ComponentSystemGroup Methods OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.ComponentSystemGroup.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.AgentTransformSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentTransformSystemGroup.html",
    "title": "Class AgentTransformSystemGroup",
    "keywords": "Class AgentTransformSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentTransformSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"AgentTransformSystemGroup is deprecated, please use AgentLocomotionSystemGroup!\", false)] [UpdateInGroup(typeof(AgentLocomotionSystemGroup))] public class AgentTransformSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.Astar.AgentAstarPathingAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Astar.AgentAstarPathingAuthoring.html",
    "title": "Class AgentAstarPathingAuthoring",
    "keywords": "Class AgentAstarPathingAuthoring Agent uses NavMesh for pathfinding. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentAstarPathingAuthoring Implements INavMeshWallProvider Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Astar Assembly : ProjectDawn.Navigation.Astar.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Astar Pathing\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/pathing/astar.html\")] public class AgentAstarPathingAuthoring : MonoBehaviour, INavMeshWallProvider Implements INavMeshWallProvider"
  },
  "api/ProjectDawn.Navigation.Astar.html": {
    "href": "api/ProjectDawn.Navigation.Astar.html",
    "title": "Namespace ProjectDawn.Navigation.Astar",
    "keywords": "Namespace ProjectDawn.Navigation.Astar Classes AgentAstarPathingAuthoring Agent uses NavMesh for pathfinding."
  },
  "api/ProjectDawn.Navigation.ColliderSubSettings.html": {
    "href": "api/ProjectDawn.Navigation.ColliderSubSettings.html",
    "title": "Class ColliderSubSettings",
    "keywords": "Class ColliderSubSettings Inheritance System.Object ColliderSubSettings Implements ISubSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public class ColliderSubSettings : ISubSettings Properties Iterations The number of iterations per frame for resolving collisions will be determined. A higher number will result in more accurate collision resolution, but it will also incur a greater performance cost. Declaration public int Iterations { get; } Property Value Type Description System.Int32 Implements ISubSettings"
  },
  "api/ProjectDawn.Navigation.CrowdData.Baked.html": {
    "href": "api/ProjectDawn.Navigation.CrowdData.Baked.html",
    "title": "Struct CrowdData.Baked",
    "keywords": "Struct CrowdData.Baked Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public struct Baked Fields Height Baked data height. Declaration [Tooltip(\"Baked data height.\")] [SerializeField] public int Height Field Value Type Description System.Int32 HeightFieldData Baked height field. Declaration [Tooltip(\"Baked height field.\")] [SerializeField] public float[] HeightFieldData Field Value Type Description System.Single [] ObstacleFieldData Baked obstacle field: Zero represents a non-occluded cell, a positive number indicates multiple occlusions on a single cell, and a negative number is invalid. Declaration [Tooltip(\"Baked obstacle field: Zero represents a non-occluded cell, a positive number indicates multiple occlusions on a single cell, and a negative number is invalid.\")] [SerializeField] public int[] ObstacleFieldData Field Value Type Description System.Int32 [] Width Baked data width. Declaration [Tooltip(\"Baked data width.\")] [SerializeField] public int Width Field Value Type Description System.Int32 Methods Validate() Returns error Declaration public void Validate()"
  },
  "api/ProjectDawn.Navigation.CrowdData.html": {
    "href": "api/ProjectDawn.Navigation.CrowdData.html",
    "title": "Class CrowdData",
    "keywords": "Class CrowdData Crowd data used for initializing topographical surface data. Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject CrowdData Inherited Members UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [CreateAssetMenu(fileName = \"New Crowd Data\", menuName = \"AI/Crowd Data\", order = 1000)] public class CrowdData : ScriptableObject Properties BakedData Baked data. Declaration public CrowdData.Baked BakedData { get; } Property Value Type Description CrowdData.Baked GizmosColor Cell color then drawing gizmos. Declaration public Color GizmosColor { get; } Property Value Type Description UnityEngine.Color Height Baked data height. Declaration public int Height { get; } Property Value Type Description System.Int32 HeightField Baked height field. Declaration public ReadOnlySpan<float> HeightField { get; } Property Value Type Description System.ReadOnlySpan < System.Single > Length Multiplication of width and height. Declaration public int Length { get; } Property Value Type Description System.Int32 MaxHeight Maximum height of cell. Declaration public float MaxHeight { get; } Property Value Type Description System.Single MaxSlope Maximum slope in degress. Declaration public float MaxSlope { get; } Property Value Type Description System.Single ObstacleField Baked obstacle field: Zero represents a non-occluded cell, a positive number indicates multiple occlusions on a single cell, and a negative number is invalid. Declaration public ReadOnlySpan<int> ObstacleField { get; } Property Value Type Description System.ReadOnlySpan < System.Int32 > Radius Radius of agent. Declaration public float Radius { get; } Property Value Type Description System.Single Width Baked data width. Declaration public int Width { get; } Property Value Type Description System.Int32 Methods BuildHeightFieldFromColliders(Int32, Int32, NonUniformTransform) Builds height field out of physics UnityEngine.Collider in the scene. Declaration public void BuildHeightFieldFromColliders(int width, int height, NonUniformTransform transform) Parameters Type Name Description System.Int32 width System.Int32 height ProjectDawn.ContinuumCrowds.NonUniformTransform transform BuildHeightFieldFromCollidersWithRadius(Int32, Int32, NonUniformTransform) Builds height field out of physics UnityEngine.Collider in the scene with respect of agent radius. Declaration public void BuildHeightFieldFromCollidersWithRadius(int width, int height, NonUniformTransform transform) Parameters Type Name Description System.Int32 width System.Int32 height ProjectDawn.ContinuumCrowds.NonUniformTransform transform GetCell(Int32) Converts index to cell. Declaration public int2 GetCell(int index) Parameters Type Name Description System.Int32 index Returns Type Description Unity.Mathematics.int2 GetCellIndex(int2) Converts cell to index. Declaration public int GetCellIndex(int2 point) Parameters Type Name Description Unity.Mathematics.int2 point Returns Type Description System.Int32 IsValidCell(int2) Returns true, if cell is within world bounds and has no obstacle. Declaration public bool IsValidCell(int2 cell) Parameters Type Name Description Unity.Mathematics.int2 cell Returns Type Description System.Boolean RecalculateObstacleField() Updates obstacle field from HeightFieldData . Make sure height field is updated before calling this method. Declaration public void RecalculateObstacleField() SampleHeight(float2) Returns interpolated height at world space position. Declaration public float SampleHeight(float2 point) Parameters Type Name Description Unity.Mathematics.float2 point Returns Type Description System.Single SetBakedData(CrowdData.Baked) Sets new baked data. This can be used to bake it outside this class. Declaration public void SetBakedData(in CrowdData.Baked baked) Parameters Type Name Description CrowdData.Baked baked"
  },
  "api/ProjectDawn.Navigation.CrowdData.ObjectCollection.html": {
    "href": "api/ProjectDawn.Navigation.CrowdData.ObjectCollection.html",
    "title": "Struct CrowdData.ObjectCollection",
    "keywords": "Struct CrowdData.ObjectCollection Settings that define objects that will be collected for crowd surface data baking. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public struct ObjectCollection Fields Geometry Defines the collected objects geometry. Declaration [Tooltip(\"Defines the collected objects geometry.\")] public CrowdData.ObjectCollectionGeometry Geometry Field Value Type Description CrowdData.ObjectCollectionGeometry Layers Objects with specified layer will be included. Declaration [Tooltip(\"Objects with specified layer will be included.\")] public LayerMask Layers Field Value Type Description UnityEngine.LayerMask Properties Default Declaration public static CrowdData.ObjectCollection Default { get; } Property Value Type Description CrowdData.ObjectCollection"
  },
  "api/ProjectDawn.Navigation.CrowdData.ObjectCollectionGeometry.html": {
    "href": "api/ProjectDawn.Navigation.CrowdData.ObjectCollectionGeometry.html",
    "title": "Enum CrowdData.ObjectCollectionGeometry",
    "keywords": "Enum CrowdData.ObjectCollectionGeometry Defines the collected objects geometry. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum ObjectCollectionGeometry Fields Name Description PhysicsColliders"
  },
  "api/ProjectDawn.Navigation.CrowdDiscomfort.html": {
    "href": "api/ProjectDawn.Navigation.CrowdDiscomfort.html",
    "title": "Struct CrowdDiscomfort",
    "keywords": "Struct CrowdDiscomfort Discomfort volume of crowd agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdDiscomfort : IComponentData, IQueryTypeParameter, IEnableableComponent Fields Gradient The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge Declaration public float2 Gradient Field Value Type Description Unity.Mathematics.float2 Size The size of the discomfort. Declaration public float3 Size Field Value Type Description Unity.Mathematics.float3 Type The shape of the discomfort. Declaration public CrowdDiscomfortType Type Field Value Type Description CrowdDiscomfortType Properties Default Returns default configuration. Declaration public static CrowdDiscomfort Default { get; } Property Value Type Description CrowdDiscomfort Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.CrowdDiscomfortSplat.html": {
    "href": "api/ProjectDawn.Navigation.CrowdDiscomfortSplat.html",
    "title": "Struct CrowdDiscomfortSplat",
    "keywords": "Struct CrowdDiscomfortSplat Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < CrowdDiscomfortSplat > Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdDiscomfortSplat : ICleanupComponentData, IComponentData, IQueryTypeParameter, IEquatable<CrowdDiscomfortSplat> Fields Gradient Declaration public float2 Gradient Field Value Type Description Unity.Mathematics.float2 Position Declaration public float3 Position Field Value Type Description Unity.Mathematics.float3 Size Declaration public float3 Size Field Value Type Description Unity.Mathematics.float3 Type Declaration public CrowdDiscomfortType Type Field Value Type Description CrowdDiscomfortType Methods Equals(CrowdDiscomfortSplat) Declaration public bool Equals(CrowdDiscomfortSplat other) Parameters Type Name Description CrowdDiscomfortSplat other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(CrowdDiscomfortSplat, CrowdDiscomfortSplat) Declaration public static bool operator ==(in CrowdDiscomfortSplat lhs, in CrowdDiscomfortSplat rhs) Parameters Type Name Description CrowdDiscomfortSplat lhs CrowdDiscomfortSplat rhs Returns Type Description System.Boolean Inequality(CrowdDiscomfortSplat, CrowdDiscomfortSplat) Declaration public static bool operator !=(in CrowdDiscomfortSplat lhs, in CrowdDiscomfortSplat rhs) Parameters Type Name Description CrowdDiscomfortSplat lhs CrowdDiscomfortSplat rhs Returns Type Description System.Boolean Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.CrowdDiscomfortType.html": {
    "href": "api/ProjectDawn.Navigation.CrowdDiscomfortType.html",
    "title": "Enum CrowdDiscomfortType",
    "keywords": "Enum CrowdDiscomfortType Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum CrowdDiscomfortType Fields Name Description Circle Quad"
  },
  "api/ProjectDawn.Navigation.CrowdDisplacementSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdDisplacementSystem.html",
    "title": "Struct CrowdDisplacementSystem",
    "keywords": "Struct CrowdDisplacementSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentDisplacementSystemGroup))] [UpdateAfter(typeof(AgentColliderSystem))] public struct CrowdDisplacementSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.CrowdFlowSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdFlowSystem.html",
    "title": "Struct CrowdFlowSystem",
    "keywords": "Struct CrowdFlowSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(CrowdWorldSystem))] [UpdateAfter(typeof(CrowdGoalSystem))] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct CrowdFlowSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.CrowdGoalSource.html": {
    "href": "api/ProjectDawn.Navigation.CrowdGoalSource.html",
    "title": "Enum CrowdGoalSource",
    "keywords": "Enum CrowdGoalSource Source from which crowd will get goal. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum CrowdGoalSource Fields Name Description AgentDestination Automatically gathered from crowd agents Destination . Script Manually set via scripting."
  },
  "api/ProjectDawn.Navigation.CrowdGoalSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdGoalSystem.html",
    "title": "Struct CrowdGoalSystem",
    "keywords": "Struct CrowdGoalSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct CrowdGoalSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.CrowdGroup.html": {
    "href": "api/ProjectDawn.Navigation.CrowdGroup.html",
    "title": "Struct CrowdGroup",
    "keywords": "Struct CrowdGroup Crowd group settings. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdGroup : IComponentData, IQueryTypeParameter Fields CostWeights Controls the cost weights of constructing crowd flow fields. Declaration public CostWeights CostWeights Field Value Type Description ProjectDawn.ContinuumCrowds.CostWeights GoalSource Source from which crowd will get goal. Declaration public CrowdGoalSource GoalSource Field Value Type Description CrowdGoalSource Grounded Maximum distance that will be used when attempting to map the agent's position or destination onto surface. The higher the value, the bigger the performance cost. Declaration public bool Grounded Field Value Type Description System.Boolean MappingRadius Maximum distance that will be used when attempting to map the agent's position or destination onto surface. The higher the value, the bigger the performance cost. Declaration public float MappingRadius Field Value Type Description System.Single Speed Crowd group speed settings. Declaration public Speed Speed Field Value Type Description ProjectDawn.ContinuumCrowds.Speed Surface Entity that contains CrowdSurface and CrowdSurfaceWorld . Declaration public Entity Surface Field Value Type Description Unity.Entities.Entity Properties Default Returns default configuration. Declaration public static CrowdGroup Default { get; } Property Value Type Description CrowdGroup Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.CrowdGroupFlow.html": {
    "href": "api/ProjectDawn.Navigation.CrowdGroupFlow.html",
    "title": "Struct CrowdGroupFlow",
    "keywords": "Struct CrowdGroupFlow Crowd group runtime created ProjectDawn.ContinuumCrowds.CrowdFlow . Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdGroupFlow : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields Flow Declaration public CrowdFlow Flow Field Value Type Description ProjectDawn.ContinuumCrowds.CrowdFlow Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.CrowdObstacle.html": {
    "href": "api/ProjectDawn.Navigation.CrowdObstacle.html",
    "title": "Struct CrowdObstacle",
    "keywords": "Struct CrowdObstacle Obstacle volume of crowd agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdObstacle : IComponentData, IQueryTypeParameter Fields Size The size of the obstacle. Declaration public float3 Size Field Value Type Description Unity.Mathematics.float3 Type The shape of the obstacle. Declaration public CrowdObstacleType Type Field Value Type Description CrowdObstacleType Properties Default Returns default configuration. Declaration public static CrowdObstacle Default { get; } Property Value Type Description CrowdObstacle Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.CrowdObstacleSplat.html": {
    "href": "api/ProjectDawn.Navigation.CrowdObstacleSplat.html",
    "title": "Struct CrowdObstacleSplat",
    "keywords": "Struct CrowdObstacleSplat Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < CrowdObstacleSplat > Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdObstacleSplat : ICleanupComponentData, IComponentData, IQueryTypeParameter, IEquatable<CrowdObstacleSplat> Fields Position Declaration public float3 Position Field Value Type Description Unity.Mathematics.float3 Size Declaration public float3 Size Field Value Type Description Unity.Mathematics.float3 Type Declaration public CrowdObstacleType Type Field Value Type Description CrowdObstacleType Methods Equals(CrowdObstacleSplat) Declaration public bool Equals(CrowdObstacleSplat other) Parameters Type Name Description CrowdObstacleSplat other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(CrowdObstacleSplat, CrowdObstacleSplat) Declaration public static bool operator ==(in CrowdObstacleSplat lhs, in CrowdObstacleSplat rhs) Parameters Type Name Description CrowdObstacleSplat lhs CrowdObstacleSplat rhs Returns Type Description System.Boolean Inequality(CrowdObstacleSplat, CrowdObstacleSplat) Declaration public static bool operator !=(in CrowdObstacleSplat lhs, in CrowdObstacleSplat rhs) Parameters Type Name Description CrowdObstacleSplat lhs CrowdObstacleSplat rhs Returns Type Description System.Boolean Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.CrowdObstacleType.html": {
    "href": "api/ProjectDawn.Navigation.CrowdObstacleType.html",
    "title": "Enum CrowdObstacleType",
    "keywords": "Enum CrowdObstacleType Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum CrowdObstacleType Fields Name Description Circle Quad"
  },
  "api/ProjectDawn.Navigation.CrowdSteeringSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdSteeringSystem.html",
    "title": "Struct CrowdSteeringSystem",
    "keywords": "Struct CrowdSteeringSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(CrowdFlowSystem))] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct CrowdSteeringSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.CrowdSurface.html": {
    "href": "api/ProjectDawn.Navigation.CrowdSurface.html",
    "title": "Struct CrowdSurface",
    "keywords": "Struct CrowdSurface Crowd surface settings. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdSurface : IComponentData, IQueryTypeParameter Fields Density Crowd group density settings. Declaration public Density Density Field Value Type Description ProjectDawn.ContinuumCrowds.Density Height Cell count vertically. Declaration public int Height Field Value Type Description System.Int32 Layers Declaration public NavigationLayers Layers Field Value Type Description NavigationLayers Size World space size. Declaration public float2 Size Field Value Type Description Unity.Mathematics.float2 Slope Crowd group slope settings. Declaration public Slope Slope Field Value Type Description ProjectDawn.ContinuumCrowds.Slope Width Cell count horizontally. Declaration public int Width Field Value Type Description System.Int32 Properties Default Returns default configuration. Declaration public static CrowdSurface Default { get; } Property Value Type Description CrowdSurface Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.CrowdSurfaceData.html": {
    "href": "api/ProjectDawn.Navigation.CrowdSurfaceData.html",
    "title": "Struct CrowdSurfaceData",
    "keywords": "Struct CrowdSurfaceData Crowd surface CrowdData . Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < CrowdSurfaceData > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdSurfaceData : ISharedComponentData, IQueryTypeParameter, IEquatable<CrowdSurfaceData> Fields Data Declaration public CrowdData Data Field Value Type Description CrowdData Methods Equals(CrowdSurfaceData) Declaration public bool Equals(CrowdSurfaceData other) Parameters Type Name Description CrowdSurfaceData other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.CrowdSurfaceSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdSurfaceSystem.html",
    "title": "Class CrowdSurfaceSystem",
    "keywords": "Class CrowdSurfaceSystem Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase CrowdSurfaceSystem Inherited Members Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnCreate() Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup))] [UpdateAfter(typeof(SceneSystemGroup))] public class CrowdSurfaceSystem : SystemBase Methods OnDestroy() Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.CrowdSurfaceWorld.html": {
    "href": "api/ProjectDawn.Navigation.CrowdSurfaceWorld.html",
    "title": "Struct CrowdSurfaceWorld",
    "keywords": "Struct CrowdSurfaceWorld Crowd surface runtime created ProjectDawn.ContinuumCrowds.CrowdWorld . Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct CrowdSurfaceWorld : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields World Declaration public CrowdWorld World Field Value Type Description ProjectDawn.ContinuumCrowds.CrowdWorld Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.CrowdWorldSystem.html": {
    "href": "api/ProjectDawn.Navigation.CrowdWorldSystem.html",
    "title": "Struct CrowdWorldSystem",
    "keywords": "Struct CrowdWorldSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct CrowdWorldSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnDestroy(ref SystemState) Declaration void ISystem.OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.DrawGizmos.html": {
    "href": "api/ProjectDawn.Navigation.DrawGizmos.html",
    "title": "Struct DrawGizmos",
    "keywords": "Struct DrawGizmos Tag for drawing gizmos. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct DrawGizmos : IComponentData, IQueryTypeParameter Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Editor.AgentAvoidGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentAvoidGizmosSystem.html",
    "title": "Struct AgentAvoidGizmosSystem",
    "keywords": "Struct AgentAvoidGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentForceSystemGroup))] [UpdateBefore(typeof(AgentSonarAvoidSystem))] public struct AgentAvoidGizmosSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.AgentColliderGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentColliderGizmosSystem.html",
    "title": "Struct AgentColliderGizmosSystem",
    "keywords": "Struct AgentColliderGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentDisplacementSystemGroup))] [UpdateBefore(typeof(AgentColliderSystem))] public struct AgentColliderGizmosSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.AgentSmartStopGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentSmartStopGizmosSystem.html",
    "title": "Struct AgentSmartStopGizmosSystem",
    "keywords": "Struct AgentSmartStopGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentActionSystemGroup))] [UpdateAfter(typeof(AgentSmartStopSystem))] public struct AgentSmartStopGizmosSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.AgentsNavigationSettingsEditor.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentsNavigationSettingsEditor.html",
    "title": "Class AgentsNavigationSettingsEditor",
    "keywords": "Class AgentsNavigationSettingsEditor Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.Editor AgentsNavigationSettingsEditor Inherited Members UnityEditor.Editor.SaveChanges() UnityEditor.Editor.DiscardChanges() UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[], UnityEngine.Object) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object, UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[], UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object, System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[], System.Type, UnityEditor.Editor) UnityEditor.Editor.CreateEditor(UnityEngine.Object) UnityEditor.Editor.CreateEditor(UnityEngine.Object, System.Type) UnityEditor.Editor.CreateEditor(UnityEngine.Object[]) UnityEditor.Editor.CreateEditor(UnityEngine.Object[], System.Type) UnityEditor.Editor.DrawPropertiesExcluding(UnityEditor.SerializedObject, System.String[]) UnityEditor.Editor.DrawDefaultInspector() UnityEditor.Editor.Repaint() UnityEditor.Editor.CreateInspectorGUI() UnityEditor.Editor.RequiresConstantRepaint() UnityEditor.Editor.DrawHeader() UnityEditor.Editor.OnHeaderGUI() UnityEditor.Editor.ShouldHideOpenButton() UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object, UnityEditor.Editor) UnityEditor.Editor.HasPreviewGUI() UnityEditor.Editor.GetPreviewTitle() UnityEditor.Editor.RenderStaticPreview(System.String, UnityEngine.Object[], System.Int32, System.Int32) UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) UnityEditor.Editor.OnPreviewSettings() UnityEditor.Editor.GetInfoString() UnityEditor.Editor.DrawPreview(UnityEngine.Rect) UnityEditor.Editor.ReloadPreviewInstances() UnityEditor.Editor.UseDefaultMargins() UnityEditor.Editor.MoveNextTarget() UnityEditor.Editor.ResetTarget() UnityEditor.Editor.hasUnsavedChanges UnityEditor.Editor.saveChangesMessage UnityEditor.Editor.target UnityEditor.Editor.targets UnityEditor.Editor.serializedObject UnityEditor.Editor.finishedDefaultHeaderGUI UnityEngine.ScriptableObject.SetDirty() UnityEngine.ScriptableObject.CreateInstance(System.String) UnityEngine.ScriptableObject.CreateInstance(System.Type) UnityEngine.ScriptableObject.CreateInstance<T>() UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [CustomEditor(typeof(AgentsNavigationSettings))] public class AgentsNavigationSettingsEditor : Editor, IPreviewable, IToolModeOwner Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/ProjectDawn.Navigation.Editor.CostWeightDrawer.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CostWeightDrawer.html",
    "title": "Class CostWeightDrawer",
    "keywords": "Class CostWeightDrawer Inheritance System.Object UnityEditor.GUIDrawer UnityEditor.PropertyDrawer CostWeightDrawer Inherited Members UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty) UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty) UnityEditor.PropertyDrawer.attribute UnityEditor.PropertyDrawer.fieldInfo UnityEditor.PropertyDrawer.preferredLabel System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [CustomPropertyDrawer(typeof(CostWeights))] public class CostWeightDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEditor.SerializedProperty property UnityEngine.GUIContent label Returns Type Description System.Single Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description UnityEngine.Rect position UnityEditor.SerializedProperty property UnityEngine.GUIContent label Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/ProjectDawn.Navigation.Editor.CrowdGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CrowdGizmosSystem.html",
    "title": "Struct CrowdGizmosSystem",
    "keywords": "Struct CrowdGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] [UpdateAfter(typeof(CrowdFlowSystem))] public struct CrowdGizmosSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.CrowdGroupDrawGizmos.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CrowdGroupDrawGizmos.html",
    "title": "Struct CrowdGroupDrawGizmos",
    "keywords": "Struct CrowdGroupDrawGizmos Tag for drawing gizmos. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct CrowdGroupDrawGizmos : IComponentData, IQueryTypeParameter Fields Value Declaration public CrowdGroupDrawGizmos.Mode Value Field Value Type Description CrowdGroupDrawGizmos.Mode Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Editor.CrowdGroupDrawGizmos.Mode.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CrowdGroupDrawGizmos.Mode.html",
    "title": "Enum CrowdGroupDrawGizmos.Mode",
    "keywords": "Enum CrowdGroupDrawGizmos.Mode Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public enum Mode Fields Name Description Goal Potential Speed Velocity"
  },
  "api/ProjectDawn.Navigation.Editor.CrowdSurfaceDrawGizmos.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CrowdSurfaceDrawGizmos.html",
    "title": "Struct CrowdSurfaceDrawGizmos",
    "keywords": "Struct CrowdSurfaceDrawGizmos Tag for drawing gizmos. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct CrowdSurfaceDrawGizmos : IComponentData, IQueryTypeParameter Fields Value Declaration public CrowdSurfaceDrawGizmos.Mode Value Field Value Type Description CrowdSurfaceDrawGizmos.Mode Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Editor.CrowdSurfaceDrawGizmos.Mode.html": {
    "href": "api/ProjectDawn.Navigation.Editor.CrowdSurfaceDrawGizmos.Mode.html",
    "title": "Enum CrowdSurfaceDrawGizmos.Mode",
    "keywords": "Enum CrowdSurfaceDrawGizmos.Mode Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public enum Mode Fields Name Description AverageVelocity Density Discomfort Height HeightGradient"
  },
  "api/ProjectDawn.Navigation.Editor.html": {
    "href": "api/ProjectDawn.Navigation.Editor.html",
    "title": "Namespace ProjectDawn.Navigation.Editor",
    "keywords": "Namespace ProjectDawn.Navigation.Editor Classes AgentsNavigationSettingsEditor CostWeightDrawer ScriptingDefineToggleField Structs AgentAvoidGizmosSystem AgentColliderGizmosSystem AgentSmartStopGizmosSystem CrowdGizmosSystem CrowdGroupDrawGizmos Tag for drawing gizmos. CrowdSurfaceDrawGizmos Tag for drawing gizmos. NavMeshBoundaryGizmosSystem NavMeshNodesGizmosSystem Enums CrowdGroupDrawGizmos.Mode CrowdSurfaceDrawGizmos.Mode"
  },
  "api/ProjectDawn.Navigation.Editor.NavMeshBoundaryGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.NavMeshBoundaryGizmosSystem.html",
    "title": "Struct NavMeshBoundaryGizmosSystem",
    "keywords": "Struct NavMeshBoundaryGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] [UpdateAfter(typeof(NavMeshBoundarySystem))] public struct NavMeshBoundaryGizmosSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.NavMeshNodesGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.NavMeshNodesGizmosSystem.html",
    "title": "Struct NavMeshNodesGizmosSystem",
    "keywords": "Struct NavMeshNodesGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] [UpdateAfter(typeof(NavMeshPathSystem))] public struct NavMeshNodesGizmosSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.ScriptingDefineToggleField.html": {
    "href": "api/ProjectDawn.Navigation.Editor.ScriptingDefineToggleField.html",
    "title": "Class ScriptingDefineToggleField",
    "keywords": "Class ScriptingDefineToggleField Inheritance System.Object ScriptingDefineToggleField Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public static class ScriptingDefineToggleField Methods Draw(GUIContent, String) Declaration public static bool Draw(GUIContent label, string defineSymbol) Parameters Type Name Description UnityEngine.GUIContent label System.String defineSymbol Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.FlockEntity.html": {
    "href": "api/ProjectDawn.Navigation.FlockEntity.html",
    "title": "Struct FlockEntity",
    "keywords": "Struct FlockEntity Single entity of the FlockGroup . Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct FlockEntity : IBufferElementData Fields Value Declaration public Entity Value Field Value Type Description Unity.Entities.Entity Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.FlockGroup.html": {
    "href": "api/ProjectDawn.Navigation.FlockGroup.html",
    "title": "Struct FlockGroup",
    "keywords": "Struct FlockGroup Agent group for flocking. Modifies desired direction to match flock direction. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct FlockGroup : IComponentData, IQueryTypeParameter Fields Alignment Scaler of alignment. Declaration public float Alignment Field Value Type Description System.Single AverageDirection Average direction of the flock. Declaration public float3 AverageDirection Field Value Type Description Unity.Mathematics.float3 AveragePositions Average position of the flock. Declaration public float3 AveragePositions Field Value Type Description Unity.Mathematics.float3 Cohesion Scaler of cohesion. Declaration public float Cohesion Field Value Type Description System.Single LeaderEntity Leader of the flock. Declaration public Entity LeaderEntity Field Value Type Description Unity.Entities.Entity Radius Maximum radius of the flock from leader. Declaration public float Radius Field Value Type Description System.Single Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.FlockGroupSystem.html": {
    "href": "api/ProjectDawn.Navigation.FlockGroupSystem.html",
    "title": "Struct FlockGroupSystem",
    "keywords": "Struct FlockGroupSystem System that calculates flock grouo average position and direction of flock entities. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct FlockGroupSystem : ISystem Methods OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.GeometryUtils.html": {
    "href": "api/ProjectDawn.Navigation.GeometryUtils.html",
    "title": "Class GeometryUtils",
    "keywords": "Class GeometryUtils Inheritance System.Object GeometryUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public class GeometryUtils Methods ClosestPointOnSegment(float3, float3, float3) Declaration public static float3 ClosestPointOnSegment(float3 from, float3 to, float3 point) Parameters Type Name Description Unity.Mathematics.float3 from Unity.Mathematics.float3 to Unity.Mathematics.float3 point Returns Type Description Unity.Mathematics.float3 SegmentSegmentCPA(out float3, out float3, float3, float3, float3, float3) Declaration public static bool SegmentSegmentCPA(out float3 c0, out float3 c1, float3 p0, float3 p1, float3 q0, float3 q1) Parameters Type Name Description Unity.Mathematics.float3 c0 Unity.Mathematics.float3 c1 Unity.Mathematics.float3 p0 Unity.Mathematics.float3 p1 Unity.Mathematics.float3 q0 Unity.Mathematics.float3 q1 Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.GiveUpStop.html": {
    "href": "api/ProjectDawn.Navigation.GiveUpStop.html",
    "title": "Struct GiveUpStop",
    "keywords": "Struct GiveUpStop This option allows the agent to make smarter stop decisions than simply deciding if it is stuck. Every time the agent bumps into a standing agent, it will progress towards stopping. Additionally, by not bumping into one, it will recover from stopping. Once the progress value is met, the agent will stop. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public struct GiveUpStop Fields Enabled Declaration public bool Enabled Field Value Type Description System.Boolean FatigueSpeed The speed at which the agent progresses towards stopping. The higher the value, the faster it will stop. Declaration [Tooltip(\"The speed at which the agent progresses towards stopping. The higher the value, the faster it will stop.\")] [Range(0F, 1F)] public float FatigueSpeed Field Value Type Description System.Single RecoverySpeed The speed at which the agent recovers from stopping. The lower the value, the less tolerant it will be towards getting stuck. Declaration [Tooltip(\"The speed at which the agent recovers from stopping. The lower the value, the less tolerant it will be towards getting stuck.\")] [Range(0F, 1F)] public float RecoverySpeed Field Value Type Description System.Single Properties Default Returns the default configuration. Declaration public static GiveUpStop Default { get; } Property Value Type Description GiveUpStop"
  },
  "api/ProjectDawn.Navigation.GiveUpStopTimer.html": {
    "href": "api/ProjectDawn.Navigation.GiveUpStopTimer.html",
    "title": "Struct GiveUpStopTimer",
    "keywords": "Struct GiveUpStopTimer For tracking give up progress. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct GiveUpStopTimer : IComponentData, IQueryTypeParameter Fields Destination Destination towards which it will track give up progress. Declaration public float3 Destination Field Value Type Description Unity.Mathematics.float3 Progress Current progress towards stopping. Once it is reached, it will stop. Declaration public float Progress Field Value Type Description System.Single Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.GizmosCommandBuffer.html": {
    "href": "api/ProjectDawn.Navigation.GizmosCommandBuffer.html",
    "title": "Struct GizmosCommandBuffer",
    "keywords": "Struct GizmosCommandBuffer Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct GizmosCommandBuffer : IDisposable Constructors GizmosCommandBuffer(Allocator) Declaration public GizmosCommandBuffer(Allocator allocator) Parameters Type Name Description Unity.Collections.Allocator allocator Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() DrawAAConvexPolygon(NativeArray<float3>, Color, Boolean) Declaration public void DrawAAConvexPolygon(NativeArray<float3> vertices, Color color, bool zTest = false) Parameters Type Name Description Unity.Collections.NativeArray < Unity.Mathematics.float3 > vertices UnityEngine.Color color System.Boolean zTest DrawArrow(float3, float3, Single, Color) Declaration public void DrawArrow(float3 origin, float3 direction, float size, Color color) Parameters Type Name Description Unity.Mathematics.float3 origin Unity.Mathematics.float3 direction System.Single size UnityEngine.Color color DrawLine(float3, float3, Color) Declaration public void DrawLine(float3 from, float3 to, Color color) Parameters Type Name Description Unity.Mathematics.float3 from Unity.Mathematics.float3 to UnityEngine.Color color DrawQuad(float3, float3, float3, float3, Color, Boolean) Declaration public void DrawQuad(float3 a, float3 b, float3 c, float3 d, Color color, bool zTest = false) Parameters Type Name Description Unity.Mathematics.float3 a Unity.Mathematics.float3 b Unity.Mathematics.float3 c Unity.Mathematics.float3 d UnityEngine.Color color System.Boolean zTest DrawSolidArc(float3, float3, float3, Single, Single, Color) Declaration public void DrawSolidArc(float3 center, float3 normal, float3 from, float angle, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from System.Single angle System.Single radius UnityEngine.Color color DrawSolidDisc(float3, float3, Single, Color) Declaration public void DrawSolidDisc(float3 center, float3 normal, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal System.Single radius UnityEngine.Color color DrawWireArc(float3, float3, float3, Single, Single, Color) Declaration public void DrawWireArc(float3 center, float3 normal, float3 from, float angle, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from System.Single angle System.Single radius UnityEngine.Color color DrawWireBox(float3, float3, Color) Declaration public void DrawWireBox(float3 position, float3 size, Color color) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 size UnityEngine.Color color Execute() Declaration public void Execute() Implements System.IDisposable"
  },
  "api/ProjectDawn.Navigation.GizmosField.html": {
    "href": "api/ProjectDawn.Navigation.GizmosField.html",
    "title": "Class GizmosField",
    "keywords": "Class GizmosField Inheritance System.Object GizmosField Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax [InitializeOnLoad] public static class GizmosField Methods DrawDepth(ReadOnlySpan<Single>, ReadOnlySpan<Int32>, Int32, Int32, float4x4) Declaration public static void DrawDepth(ReadOnlySpan<float> heightField, ReadOnlySpan<int> obstacleField, int width, int height, float4x4 transform) Parameters Type Name Description System.ReadOnlySpan < System.Single > heightField System.ReadOnlySpan < System.Int32 > obstacleField System.Int32 width System.Int32 height Unity.Mathematics.float4x4 transform DrawSolid(ReadOnlySpan<Single>, ReadOnlySpan<Int32>, Int32, Int32, float4x4, Color) Declaration public static void DrawSolid(ReadOnlySpan<float> heightField, ReadOnlySpan<int> obstacleField, int width, int height, float4x4 transform, Color color) Parameters Type Name Description System.ReadOnlySpan < System.Single > heightField System.ReadOnlySpan < System.Int32 > obstacleField System.Int32 width System.Int32 height Unity.Mathematics.float4x4 transform UnityEngine.Color color DrawSolid(ReadOnlySpan<Single>, ReadOnlySpan<Int32>, ReadOnlySpan<Color>, Int32, Int32, float4x4) Declaration public static void DrawSolid(ReadOnlySpan<float> heightField, ReadOnlySpan<int> obstacleField, ReadOnlySpan<Color> colorField, int width, int height, float4x4 transform) Parameters Type Name Description System.ReadOnlySpan < System.Single > heightField System.ReadOnlySpan < System.Int32 > obstacleField System.ReadOnlySpan < UnityEngine.Color > colorField System.Int32 width System.Int32 height Unity.Mathematics.float4x4 transform DrawWire(ReadOnlySpan<Single>, ReadOnlySpan<Int32>, Int32, Int32, float4x4, Color) Declaration public static void DrawWire(ReadOnlySpan<float> heightField, ReadOnlySpan<int> obstacleField, int width, int height, float4x4 transform, Color color) Parameters Type Name Description System.ReadOnlySpan < System.Single > heightField System.ReadOnlySpan < System.Int32 > obstacleField System.Int32 width System.Int32 height Unity.Mathematics.float4x4 transform UnityEngine.Color color"
  },
  "api/ProjectDawn.Navigation.GizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.GizmosSystem.html",
    "title": "Struct GizmosSystem",
    "keywords": "Struct GizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateBefore(typeof(AgentSeekingSystemGroup))] public struct GizmosSystem : ISystem Methods OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.GizmosSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.GizmosSystem.Singleton.html",
    "title": "Struct GizmosSystem.Singleton",
    "keywords": "Struct GizmosSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Methods Clear() Declaration public void Clear() CreateCommandBuffer() Declaration public GizmosCommandBuffer CreateCommandBuffer() Returns Type Description GizmosCommandBuffer ExecuteCommandBuffers() Declaration public void ExecuteCommandBuffers() Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.HiveMindStop.html": {
    "href": "api/ProjectDawn.Navigation.HiveMindStop.html",
    "title": "Struct HiveMindStop",
    "keywords": "Struct HiveMindStop This option allows agent to do smarter stop decision then moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public struct HiveMindStop Fields Enabled Declaration public bool Enabled Field Value Type Description System.Boolean Radius Radius at which agent will assume similarity of the distance. Declaration [Tooltip(\"Radius at which agent will assume similarity of the distance.\")] public float Radius Field Value Type Description System.Single Properties Default Returns default configuration. Declaration public static HiveMindStop Default { get; } Property Value Type Description HiveMindStop"
  },
  "api/ProjectDawn.Navigation.html": {
    "href": "api/ProjectDawn.Navigation.html",
    "title": "Namespace ProjectDawn.Navigation",
    "keywords": "Namespace ProjectDawn.Navigation Classes AgentActionSystemGroup AgentDisplacementSystemGroup AgentFlockSystem AgentForceSystemGroup AgentLocomotionSystemGroup AgentPathingSystemGroup AgentPositionSystemGroup AgentSeekingSystemGroup AgentsNavigationSettings Settings asset of agents navigation package. Contains list of sub settings combined from classes that implement ISubSettings interface. AgentSpatialSystemGroup AgentSteeringSystemGroup AgentSystemGroup AgentTransformSystemGroup ColliderSubSettings CrowdData Crowd data used for initializing topographical surface data. CrowdSurfaceSystem GeometryUtils GizmosField NavigationLayerNames NavigationLayerUtility NavMeshDataSystem PathUtils SpatialPartitioningSubSettings Structs Agent Agent tag. AgentBody Agent's body movement. AgentCollider This component tags, if agent should collide with nearby agents. AgentColliderSystem AgentCrowdPath Agent Crowd pathing. AgentForceSystem AgentLocomotion Agent's locomotion that moves towards destination with arrival. AgentLocomotionSystem AgentReciprocalAvoid AgentReciprocalAvoidSystem AgentSeekingSystem System that steers agent towards destination. AgentSeparation Agent separation from nearby agents. AgentSeparationSystem System that calculates separation direction from nearby agents. AgentShape Represents agent shape in space. In the future this component might be split into specific shape components instead of having one big generic. AgentSmartStop Agent smart stop to handle some common stuck scenarios. AgentSmartStopSystem AgentSonarAvoid Agent avoidance of nearby agents using Sonar Avoidance algorithm. AgentSonarAvoidSystem System that calculates avoidance direction from nearby agents. AgentSpatialPartitioningSystem Partitions agents into arbitary size cells. This allows to query nearby agents more efficiently. Space is partitioned using multi hash map. AgentSpatialPartitioningSystem.Settings AgentSpatialPartitioningSystem.Singleton AgentSteering Agent's steering towards destination with arrival. AgentSteeringSystem System that steers agent towards destination. CrowdData.Baked CrowdData.ObjectCollection Settings that define objects that will be collected for crowd surface data baking. CrowdDiscomfort Discomfort volume of crowd agents. CrowdDiscomfortSplat CrowdDisplacementSystem CrowdFlowSystem CrowdGoalSystem CrowdGroup Crowd group settings. CrowdGroupFlow Crowd group runtime created ProjectDawn.ContinuumCrowds.CrowdFlow . CrowdObstacle Obstacle volume of crowd agents. CrowdObstacleSplat CrowdSteeringSystem CrowdSurface Crowd surface settings. CrowdSurfaceData Crowd surface CrowdData . CrowdSurfaceWorld Crowd surface runtime created ProjectDawn.ContinuumCrowds.CrowdWorld . CrowdWorldSystem DrawGizmos Tag for drawing gizmos. FlockEntity Single entity of the FlockGroup . FlockGroup Agent group for flocking. Modifies desired direction to match flock direction. FlockGroupSystem System that calculates flock grouo average position and direction of flock entities. GiveUpStop This option allows the agent to make smarter stop decisions than simply deciding if it is stuck. Every time the agent bumps into a standing agent, it will progress towards stopping. Additionally, by not bumping into one, it will recover from stopping. Once the progress value is met, the agent will stop. GiveUpStopTimer For tracking give up progress. GizmosCommandBuffer GizmosSystem GizmosSystem.Singleton HiveMindStop This option allows agent to do smarter stop decision then moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. LinkTraversal LinkTraversalSeek LinkTraversalSeekSystem NavMeshBoundary Represents a boundary on the navigation mesh. NavMeshBoundarySystem System that for each agent that has sonar with wall collects nearby navmesh edges as walls. Later on these walls are used for avoidance. NavMeshData NavMeshDataInstance NavMeshDisplacementSystem System that forces agents to stay within NavMesh surface. NavMeshFunnel Used for creating optimal path from navmesh polygons. NavMeshLinkTraversal Agent off mesh link data that is currently traversing. NavMeshNode Agent NavMesh single node of path. NavMeshPath Agent NavMesh path. NavMeshPathSystem System that controls agent NavMesh path. NavMeshQueryHandle Represents handle of NavMeshQuery used by NavMeshQuerySystem . NavMeshQuerySystem System for requesting NavMesh path. NavMeshQuerySystem.Settings NavMeshQuerySystem.Singleton NavMeshSteeringSystem System that steers agents within the NavMesh path. NavMeshWall Represents a wall on the navigation mesh. Portal Interfaces ISpatialQueryEntity ISpatialQueryVolume ISubSettings Classes with this interface will be included into AgentsNavigationSettings as sub settings. Enums CrowdData.ObjectCollectionGeometry Defines the collected objects geometry. CrowdDiscomfortType CrowdGoalSource Source from which crowd will get goal. CrowdObstacleType NavigationLayers NavMeshLinkTraversalMode NavMeshPathState State of the path. NavMeshQueryStatus The status of navmesh query. ShapeType SonarAvoidMode Modifications of sonar avoidance funcionality. SpatialPartitioningSubSettings.QueryCheckMode StraightPathFlags"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentAuthoring.html",
    "title": "Class AgentAuthoring",
    "keywords": "Class AgentAuthoring Main component of agent that enables motion. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour AgentAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Agent\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/agent.html\")] public class AgentAuthoring : EntityBehaviour Fields Acceleration Declaration [SerializeField] protected float Acceleration Field Value Type Description System.Single AngularSpeed Declaration [SerializeField] protected float AngularSpeed Field Value Type Description System.Single AutoBreaking Declaration [SerializeField] protected bool AutoBreaking Field Value Type Description System.Boolean m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers Speed Declaration [SerializeField] protected float Speed Field Value Type Description System.Single StoppingDistance Declaration [SerializeField] protected float StoppingDistance Field Value Type Description System.Single Properties DefaultAgent Returns default component of Agent . Declaration public Agent DefaultAgent { get; } Property Value Type Description Agent DefaultBody Returns default component of AgentBody . Declaration public AgentBody DefaultBody { get; } Property Value Type Description AgentBody DefaultLocomotion Returns default component of AgentLocomotion . Declaration public AgentLocomotion DefaultLocomotion { get; } Property Value Type Description AgentLocomotion DefaultSteering Returns default component of AgentSteering . Declaration [Obsolete(\"DefaultSteering is deprecated, please use DefaultLocomotion!\", false)] public AgentSteering DefaultSteering { get; } Property Value Type Description AgentSteering EntityAgent Agent component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public Agent EntityAgent { get; set; } Property Value Type Description Agent EntityBody AgentBody component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentBody EntityBody { get; set; } Property Value Type Description AgentBody EntityLocomotion AgentLocomotion component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentLocomotion EntityLocomotion { get; set; } Property Value Type Description AgentLocomotion EntitySteering AgentSteering component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration [Obsolete(\"EntitySteering is deprecated, please use EntityLocomotion!\", false)] public AgentSteering EntitySteering { get; set; } Property Value Type Description AgentSteering HasEntityBody Returns true if AgentAuthoring entity has AgentBody . Declaration public bool HasEntityBody { get; } Property Value Type Description System.Boolean HasEntityLocomotion Returns true if AgentAuthoring entity has AgentLocomotion . Declaration public bool HasEntityLocomotion { get; } Property Value Type Description System.Boolean HasEntitySteering Returns true if AgentAuthoring entity has AgentSteering . Declaration [Obsolete(\"HasEntitySteering is deprecated, please use HasEntityLocomotion!\", false)] public bool HasEntitySteering { get; } Property Value Type Description System.Boolean Methods SetDestination(float3) Sets or updates the destination thus triggering the calculation for a new path. Calling this method is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public void SetDestination(float3 target) Parameters Type Name Description Unity.Mathematics.float3 target SetDestinationDeferred(float3) Sets or updates the destination thus triggering the calculation for a new path. This call is deferred and destination will only changed later in the frame. Declaration public void SetDestinationDeferred(float3 destination) Parameters Type Name Description Unity.Mathematics.float3 destination Stop() Stop agent movement. Calling this method is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public void Stop()"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentAvoidAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentAvoidAuthoring.html",
    "title": "Class AgentAvoidAuthoring",
    "keywords": "Class AgentAvoidAuthoring Agent avoidance of nearby agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentAvoidAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Sonar Avoid\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/avoidance/sonar-avoidance.html\")] public class AgentAvoidAuthoring : MonoBehaviour Fields Angle Declaration [SerializeField] [Range(0F, 360F)] protected float Angle Field Value Type Description System.Single BlockedStop Declaration [SerializeField] protected bool BlockedStop Field Value Type Description System.Boolean m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers MaxAngle Declaration [SerializeField] [Range(0F, 360F)] protected float MaxAngle Field Value Type Description System.Single Mode Declaration [SerializeField] protected SonarAvoidMode Mode Field Value Type Description SonarAvoidMode Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single UseWalls Declaration [SerializeField] protected bool UseWalls Field Value Type Description System.Boolean Properties DefaultAvoid Returns default component of AgentSonarAvoid . Declaration public AgentSonarAvoid DefaultAvoid { get; } Property Value Type Description AgentSonarAvoid EntityAvoid AgentSonarAvoid component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSonarAvoid EntityAvoid { get; set; } Property Value Type Description AgentSonarAvoid HasEntityAvoid Returns true if AgentAuthoring entity has AgentSonarAvoid . Declaration public bool HasEntityAvoid { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentCircleShapeAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentCircleShapeAuthoring.html",
    "title": "Class AgentCircleShapeAuthoring",
    "keywords": "Class AgentCircleShapeAuthoring Agent circle shape. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentCircleShapeAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Circle Shape\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/shape.html\")] public class AgentCircleShapeAuthoring : MonoBehaviour Fields Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties DefaultShape Returns default component of AgentShape . Declaration public AgentShape DefaultShape { get; } Property Value Type Description AgentShape EntityShape AgentShape component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentShape EntityShape { get; set; } Property Value Type Description AgentShape HasEntityShape Returns true if AgentAuthoring entity has AgentShape . Declaration public bool HasEntityShape { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentColliderAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentColliderAuthoring.html",
    "title": "Class AgentColliderAuthoring",
    "keywords": "Class AgentColliderAuthoring Enables collisio with other agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentColliderAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Collider\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/collider.html\")] public class AgentColliderAuthoring : MonoBehaviour Fields m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers Properties DefaultCollider Returns default component of AgentCollider . Declaration public AgentCollider DefaultCollider { get; } Property Value Type Description AgentCollider EntityCollider AgentCollider component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentCollider EntityCollider { get; set; } Property Value Type Description AgentCollider"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentCrowdPathingAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentCrowdPathingAuthoring.html",
    "title": "Class AgentCrowdPathingAuthoring",
    "keywords": "Class AgentCrowdPathingAuthoring Agent uses Continuum Crowd for pathfinding in specific CrowdGroupAuthoring . Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentCrowdPathingAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Crowd/Agent Crowd Pathing\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/pathing/crowds.html\")] public class AgentCrowdPathingAuthoring : MonoBehaviour Properties DefaultPath Returns default component of AgentSonarAvoid . Declaration public AgentCrowdPath DefaultPath { get; } Property Value Type Description AgentCrowdPath EntityPath AgentCrowdPath component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentCrowdPath EntityPath { get; set; } Property Value Type Description AgentCrowdPath Group Current crowds group this agent belongs too. Groups always share same destination. Agents in null crowds group will skip pathing. Declaration public CrowdGroupAuthoring Group { get; set; } Property Value Type Description CrowdGroupAuthoring HasEntityPath Returns true if AgentAuthoring entity has AgentCrowdPath . Declaration public bool HasEntityPath { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentCylinderShapeAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentCylinderShapeAuthoring.html",
    "title": "Class AgentCylinderShapeAuthoring",
    "keywords": "Class AgentCylinderShapeAuthoring Agent cylindre shape. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentCylinderShapeAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Cylinder Shape\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/shape.html\")] public class AgentCylinderShapeAuthoring : MonoBehaviour Fields Height Declaration [SerializeField] protected float Height Field Value Type Description System.Single Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties DefaultShape Returns default component of AgentShape . Declaration public AgentShape DefaultShape { get; } Property Value Type Description AgentShape EntityShape AgentShape component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentShape EntityShape { get; set; } Property Value Type Description AgentShape HasEntityShape Returns true if AgentAuthoring entity has AgentShape . Declaration public bool HasEntityShape { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentMotionType.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentMotionType.html",
    "title": "Enum AgentMotionType",
    "keywords": "Enum AgentMotionType Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public enum AgentMotionType Fields Name Description DefaultLocomotion Agent is dynamic. It's entity will have have AgentBody and AgentLocomotion components. Dynamic Agent is dynamic. It's entity will not have AgentSteering component. Static Agent is static. It's entity will not have AgentBody and AgentSteering components. Steering Agent is dynamic. It's entity will have have AgentBody and AgentSteering components."
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentNavMeshAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentNavMeshAuthoring.html",
    "title": "Class AgentNavMeshAuthoring",
    "keywords": "Class AgentNavMeshAuthoring Agent uses NavMesh for pathfinding. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentNavMeshAuthoring Implements INavMeshWallProvider Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent NavMesh Pathing\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/pathing/nav-mesh.html\")] public class AgentNavMeshAuthoring : MonoBehaviour, INavMeshWallProvider Fields AgentTypeId Declaration [SerializeField] protected int AgentTypeId Field Value Type Description System.Int32 AreaMask Declaration [SerializeField] protected int AreaMask Field Value Type Description System.Int32 AutoRepath Declaration [SerializeField] protected bool AutoRepath Field Value Type Description System.Boolean m_Grounded Declaration [FormerlySerializedAs(\"m_Constrained\")] [SerializeField] protected bool m_Grounded Field Value Type Description System.Boolean MappingExtent Declaration [SerializeField] protected float3 MappingExtent Field Value Type Description Unity.Mathematics.float3 Properties DefaulPath Returns default component of NavMeshPath . Declaration [Obsolete(\"This property has been renamed. Please use DefaultPath!\")] public NavMeshPath DefaulPath { get; } Property Value Type Description NavMeshPath DefaultPath Returns default component of NavMeshPath . Declaration public NavMeshPath DefaultPath { get; } Property Value Type Description NavMeshPath EntityNodes NavMeshNode component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public DynamicBuffer<NavMeshNode> EntityNodes { get; } Property Value Type Description Unity.Entities.DynamicBuffer < NavMeshNode > EntityPath NavMeshPath component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public NavMeshPath EntityPath { get; set; } Property Value Type Description NavMeshPath HasEntityPath Returns true if AgentAuthoring entity has NavMeshPath . Declaration public bool HasEntityPath { get; } Property Value Type Description System.Boolean NavMeshLinkTraversal Declaration public NavMeshLinkTraversal NavMeshLinkTraversal { get; } Property Value Type Description NavMeshLinkTraversal OnLinkTraversal NavMeshLinkTraversal component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public bool OnLinkTraversal { get; set; } Property Value Type Description System.Boolean SeekLinkTraversal Declaration public LinkTraversalSeek SeekLinkTraversal { get; } Property Value Type Description LinkTraversalSeek Implements INavMeshWallProvider"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentReciprocalAvoidAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentReciprocalAvoidAuthoring.html",
    "title": "Class AgentReciprocalAvoidAuthoring",
    "keywords": "Class AgentReciprocalAvoidAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentReciprocalAvoidAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Reciprocal Avoid (Experimental)\")] [DisallowMultipleComponent] public class AgentReciprocalAvoidAuthoring : MonoBehaviour Fields m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties DefaultAvoid Returns default component of AgentReciprocalAvoid . Declaration public AgentReciprocalAvoid DefaultAvoid { get; } Property Value Type Description AgentReciprocalAvoid EntityAvoid AgentReciprocalAvoid component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentReciprocalAvoid EntityAvoid { get; set; } Property Value Type Description AgentReciprocalAvoid HasEntityAvoid Returns true if AgentAuthoring entity has AgentReciprocalAvoid . Declaration public bool HasEntityAvoid { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSeparationAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSeparationAuthoring.html",
    "title": "Class AgentSeparationAuthoring",
    "keywords": "Class AgentSeparationAuthoring Agent separation from nearby agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentSeparationAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Separation\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/avoidance/separation.html\")] public class AgentSeparationAuthoring : MonoBehaviour Fields m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Weight Declaration [SerializeField] [Range(0F, 1F)] protected float Weight Field Value Type Description System.Single Properties DefaulSeparation Returns default component of AgentSeparation . Declaration public AgentSeparation DefaulSeparation { get; } Property Value Type Description AgentSeparation EntitySeparation AgentSeparation component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSeparation EntitySeparation { get; set; } Property Value Type Description AgentSeparation HasEntitySeparation Returns true if AgentAuthoring entity has AgentSeparation . Declaration public bool HasEntitySeparation { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.html",
    "title": "Struct AgentSetDestinationDeferredSystem",
    "keywords": "Struct AgentSetDestinationDeferredSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(InitializationSystemGroup))] public struct AgentSetDestinationDeferredSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.Singleton.html",
    "title": "Struct AgentSetDestinationDeferredSystem.Singleton",
    "keywords": "Struct AgentSetDestinationDeferredSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Methods SetDestinationDeferred(Entity, float3) Declaration public void SetDestinationDeferred(Entity entity, float3 destination) Parameters Type Name Description Unity.Entities.Entity entity Unity.Mathematics.float3 destination Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSmartStopAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSmartStopAuthoring.html",
    "title": "Class AgentSmartStopAuthoring",
    "keywords": "Class AgentSmartStopAuthoring Enables collisio with other agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentSmartStopAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Smart Stop\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/game-objects/smart-stop.html\")] public class AgentSmartStopAuthoring : MonoBehaviour Fields m_GiveUpStop Declaration [SerializeField] protected GiveUpStop m_GiveUpStop Field Value Type Description GiveUpStop m_HiveMindStop Declaration [SerializeField] protected HiveMindStop m_HiveMindStop Field Value Type Description HiveMindStop Properties DefaulSmartStop Returns default component of AgentSeparation . Declaration public AgentSmartStop DefaulSmartStop { get; } Property Value Type Description AgentSmartStop EntitySmartStop AgentSmartStop component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSmartStop EntitySmartStop { get; set; } Property Value Type Description AgentSmartStop HasEntitySmartStop Returns true if AgentAuthoring entity has AgentSmartStop . Declaration public bool HasEntitySmartStop { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.CrowdDiscomfortAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.CrowdDiscomfortAuthoring.html",
    "title": "Class CrowdDiscomfortAuthoring",
    "keywords": "Class CrowdDiscomfortAuthoring Discomfort volume of crowd agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour CrowdDiscomfortAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Crowd/Crowd Discomfort\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/crowds/crowd-discomfort.html\")] public class CrowdDiscomfortAuthoring : EntityBehaviour Fields CrowdDiscomfortAuthoring Declaration [Tooltip(\"The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge.\")] [SerializeField] protected float2 Field Value Type Description Unity.Mathematics.float2 CrowdDiscomfortAuthoring Declaration [Tooltip(\"The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge.\")] [SerializeField] protected float2 Field Value Type Description Unity.Mathematics.float2 CrowdDiscomfortAuthoring Declaration [Tooltip(\"The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge.\")] [SerializeField] protected float2 Field Value Type Description Unity.Mathematics.float2 m_Gradient Declaration [Tooltip(\"The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge.\")] [SerializeField] protected float2 m_Gradient Field Value Type Description Unity.Mathematics.float2 m_Size Declaration [Tooltip(\"The size of the discomfort.\")] [SerializeField] protected float3 m_Size Field Value Type Description Unity.Mathematics.float3 m_Type Declaration [Tooltip(\"The shape of the discomfort.\")] [SerializeField] protected CrowdDiscomfortType m_Type Field Value Type Description CrowdDiscomfortType Properties DefaultDiscomfort Returns default component of CrowdDiscomfort . Declaration public CrowdDiscomfort DefaultDiscomfort { get; } Property Value Type Description CrowdDiscomfort EntityDiscomfort Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public CrowdDiscomfort EntityDiscomfort { get; set; } Property Value Type Description CrowdDiscomfort Gradient The gradient of discomfort. The x-component represents the discomfort value at the center of the shape, and the y-component represents it at the edge. Declaration public float2 Gradient { get; set; } Property Value Type Description Unity.Mathematics.float2 HasEntityDiscomfort Returns true if EntityBehaviour entity has CrowdDiscomfort . Declaration public bool HasEntityDiscomfort { get; } Property Value Type Description System.Boolean Size The size of the discomfort. Declaration public float3 Size { get; set; } Property Value Type Description Unity.Mathematics.float3 Type The shape of the discomfort. Declaration public CrowdDiscomfortType Type { get; set; } Property Value Type Description CrowdDiscomfortType"
  },
  "api/ProjectDawn.Navigation.Hybrid.CrowdGroupAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.CrowdGroupAuthoring.html",
    "title": "Class CrowdGroupAuthoring",
    "keywords": "Class CrowdGroupAuthoring A single group that will navigate on the CrowdSurfaceAuthoring . Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour CrowdGroupAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Crowd/Crowd Group\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/crowds/crowd-group.html\")] public class CrowdGroupAuthoring : EntityBehaviour Fields m_CostWeights Declaration [Tooltip(\"Controls the cost weights of constructing crowd flow fields.\")] [SerializeField] protected CostWeights m_CostWeights Field Value Type Description ProjectDawn.ContinuumCrowds.CostWeights m_GoalSource Declaration [Tooltip(\"Source from which crowd will get goal.\")] [SerializeField] protected CrowdGoalSource m_GoalSource Field Value Type Description CrowdGoalSource m_Grounded Declaration [Tooltip(\"Anchors the agent to the surface. It is useful to disable then used with physics, to allow more freedom motion and precision.\")] [SerializeField] protected bool m_Grounded Field Value Type Description System.Boolean m_MappingRadius Declaration [Tooltip(\"Maximum distance that will be used when attempting to map the agent's position or destination onto surface. The higher the value, the bigger the performance cost.\")] [SerializeField] protected float m_MappingRadius Field Value Type Description System.Single m_Speed Declaration [Tooltip(\"Crowd group speed settings.\")] [SerializeField] protected Speed m_Speed Field Value Type Description ProjectDawn.ContinuumCrowds.Speed m_Surface Declaration [SerializeField] protected CrowdSurfaceAuthoring m_Surface Field Value Type Description CrowdSurfaceAuthoring Properties CostWeight Controls the cost weights of constructing crowd flow fields. Declaration public CostWeights CostWeight { get; set; } Property Value Type Description ProjectDawn.ContinuumCrowds.CostWeights DefaultGroup Returns default component of CrowdGroup . Declaration public CrowdGroup DefaultGroup { get; } Property Value Type Description CrowdGroup EntityGroup Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public CrowdGroup EntityGroup { get; set; } Property Value Type Description CrowdGroup GoalSource Source from which crowd will get goal. Declaration public CrowdGoalSource GoalSource { get; set; } Property Value Type Description CrowdGoalSource Grounded Anchors the agent to the surface. It is useful to disable then used with physics, to allow more freedom motion and precision. Declaration public bool Grounded { get; set; } Property Value Type Description System.Boolean HasEntityGroup Returns true if EntityBehaviour entity has CrowdGroup . Declaration public bool HasEntityGroup { get; } Property Value Type Description System.Boolean MappingRadius Maximum distance that will be used when attempting to map the agent's position or destination onto surface. The higher the value, the bigger the performance cost. Declaration public float MappingRadius { get; set; } Property Value Type Description System.Single Speed Crowd group speed settings. Declaration public Speed Speed { get; set; } Property Value Type Description ProjectDawn.ContinuumCrowds.Speed Surface A surface which will be used by this group. Declaration public CrowdSurfaceAuthoring Surface { get; } Property Value Type Description CrowdSurfaceAuthoring Methods SetGoals(ReadOnlySpan<float3>) Set goals of crowds group. This method requires goal source to be set to Script. Declaration public void SetGoals(ReadOnlySpan<float3> goals) Parameters Type Name Description System.ReadOnlySpan < Unity.Mathematics.float3 > goals"
  },
  "api/ProjectDawn.Navigation.Hybrid.CrowdObstacleAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.CrowdObstacleAuthoring.html",
    "title": "Class CrowdObstacleAuthoring",
    "keywords": "Class CrowdObstacleAuthoring Obstacle volume of crowd agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour CrowdObstacleAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Crowd/Crowd Obstacle\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/crowds/crowd-obstacle.html\")] public class CrowdObstacleAuthoring : EntityBehaviour Fields CrowdObstacleAuthoring Declaration [Tooltip(\"The size of the obstacle.\")] [SerializeField] protected float3 Field Value Type Description Unity.Mathematics.float3 CrowdObstacleAuthoring Declaration [Tooltip(\"The size of the obstacle.\")] [SerializeField] protected float3 Field Value Type Description Unity.Mathematics.float3 m_Size Declaration [Tooltip(\"The size of the obstacle.\")] [SerializeField] protected float3 m_Size Field Value Type Description Unity.Mathematics.float3 m_Type Declaration [Tooltip(\"The shape of the obstacle.\")] [SerializeField] protected CrowdObstacleType m_Type Field Value Type Description CrowdObstacleType Properties DefaultObstacle Returns default component of CrowdObstacle . Declaration public CrowdObstacle DefaultObstacle { get; } Property Value Type Description CrowdObstacle EntityObstacle Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public CrowdObstacle EntityObstacle { get; set; } Property Value Type Description CrowdObstacle HasEntityObstacle Returns true if EntityBehaviour entity has CrowdObstacle . Declaration public bool HasEntityObstacle { get; } Property Value Type Description System.Boolean Size The size of the obstacle. Declaration public float3 Size { get; set; } Property Value Type Description Unity.Mathematics.float3 Type The shape of the obstacle. Declaration public CrowdObstacleType Type { get; set; } Property Value Type Description CrowdObstacleType"
  },
  "api/ProjectDawn.Navigation.Hybrid.CrowdSurfaceAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.CrowdSurfaceAuthoring.html",
    "title": "Class CrowdSurfaceAuthoring",
    "keywords": "Class CrowdSurfaceAuthoring A surface on which a crowd can move. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour CrowdSurfaceAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Crowd/Crowd Surface\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/crowds/crowd-surface.html\")] public class CrowdSurfaceAuthoring : EntityBehaviour Fields CrowdSurfaceAuthoring Declaration [Tooltip(\"World space size.\")] [SerializeField] protected float2 Field Value Type Description Unity.Mathematics.float2 m_Data Declaration [SerializeField] protected CrowdData m_Data Field Value Type Description CrowdData m_Density Declaration [Tooltip(\"Crowd group density settings.\")] [SerializeField] protected Density m_Density Field Value Type Description ProjectDawn.ContinuumCrowds.Density m_Height Declaration [Tooltip(\"Cell count vertically.\")] [SerializeField] protected int m_Height Field Value Type Description System.Int32 m_Layers Declaration [SerializeField] protected NavigationLayers m_Layers Field Value Type Description NavigationLayers m_Size Declaration [Tooltip(\"World space size.\")] [SerializeField] protected float2 m_Size Field Value Type Description Unity.Mathematics.float2 m_Slope Declaration [Tooltip(\"Crowd group slope settings.\")] [SerializeField] protected Slope m_Slope Field Value Type Description ProjectDawn.ContinuumCrowds.Slope m_Width Declaration [Tooltip(\"Cell count horizontally.\")] [SerializeField] protected int m_Width Field Value Type Description System.Int32 Properties CellSize Local space size of single cell. Declaration public float2 CellSize { get; } Property Value Type Description Unity.Mathematics.float2 Data Declaration public CrowdData Data { get; set; } Property Value Type Description CrowdData DefaultSurface Returns default component of CrowdSurface . Declaration public CrowdSurface DefaultSurface { get; } Property Value Type Description CrowdSurface Height Cell count vertically. Declaration public int Height { get; } Property Value Type Description System.Int32 Normal Up vector of surface. Declaration public float3 Normal { get; } Property Value Type Description Unity.Mathematics.float3 Size World space size. Declaration public float2 Size { get; } Property Value Type Description Unity.Mathematics.float2 Transform Transform from local to world space. Declaration public NonUniformTransform Transform { get; } Property Value Type Description ProjectDawn.ContinuumCrowds.NonUniformTransform Width Cell count horizontally. Declaration public int Width { get; } Property Value Type Description System.Int32 Methods IsDataValid() Returns true, if crowds data is valid for this surface. Declaration public bool IsDataValid() Returns Type Description System.Boolean UpdateData() Declaration public void UpdateData()"
  },
  "api/ProjectDawn.Navigation.Hybrid.EntityBehaviour.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.EntityBehaviour.html",
    "title": "Class EntityBehaviour",
    "keywords": "Class EntityBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour AgentAuthoring CrowdDiscomfortAuthoring CrowdGroupAuthoring CrowdObstacleAuthoring CrowdSurfaceAuthoring FlockGroupAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public class EntityBehaviour : MonoBehaviour Fields m_Entity Declaration protected Entity m_Entity Field Value Type Description Unity.Entities.Entity Methods GetOrCreateEntity() Declaration public Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity"
  },
  "api/ProjectDawn.Navigation.Hybrid.FlockGroupAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.FlockGroupAuthoring.html",
    "title": "Class FlockGroupAuthoring",
    "keywords": "Class FlockGroupAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour FlockGroupAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Flock Group (Experimental)\")] public class FlockGroupAuthoring : EntityBehaviour Fields Alignment Declaration [SerializeField] [Range(0F, 0.3F)] protected float Alignment Field Value Type Description System.Single Cohesion Declaration [SerializeField] [Range(0F, 0.3F)] protected float Cohesion Field Value Type Description System.Single Leader Declaration [SerializeField] protected AgentAuthoring Leader Field Value Type Description AgentAuthoring Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties DefaulFlockGroup Returns default component of FlockGroup . Declaration public FlockGroup DefaulFlockGroup { get; } Property Value Type Description FlockGroup EntityFlockEntities FlockEntity buffer of this Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public DynamicBuffer<FlockEntity> EntityFlockEntities { get; } Property Value Type Description Unity.Entities.DynamicBuffer < FlockEntity > EntityFlockGroup FlockGroup component of this Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public FlockGroup EntityFlockGroup { get; set; } Property Value Type Description FlockGroup HasEntityFlockGroup Returns true if entity has FlockGroup . Declaration public bool HasEntityFlockGroup { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.html",
    "title": "Namespace ProjectDawn.Navigation.Hybrid",
    "keywords": "Namespace ProjectDawn.Navigation.Hybrid Classes AgentAuthoring Main component of agent that enables motion. AgentAvoidAuthoring Agent avoidance of nearby agents. AgentCircleShapeAuthoring Agent circle shape. AgentColliderAuthoring Enables collisio with other agents. AgentCrowdPathingAuthoring Agent uses Continuum Crowd for pathfinding in specific CrowdGroupAuthoring . AgentCylinderShapeAuthoring Agent cylindre shape. AgentNavMeshAuthoring Agent uses NavMesh for pathfinding. AgentReciprocalAvoidAuthoring AgentSeparationAuthoring Agent separation from nearby agents. AgentSmartStopAuthoring Enables collisio with other agents. CrowdDiscomfortAuthoring Discomfort volume of crowd agents. CrowdGroupAuthoring A single group that will navigate on the CrowdSurfaceAuthoring . CrowdObstacleAuthoring Obstacle volume of crowd agents. CrowdSurfaceAuthoring A surface on which a crowd can move. EntityBehaviour FlockGroupAuthoring NavMeshSettingsAuthoring NavMeshSurfaceBaker SettingsBehaviour SpatialPartitioningSettingsAuthoring Structs AgentSetDestinationDeferredSystem AgentSetDestinationDeferredSystem.Singleton ReadAgentRectTransformSystem ReadAgentTransformSystem WriteAgentRectTransformSystem WriteAgentTransformSystem Interfaces INavMeshWallProvider Enums AgentMotionType"
  },
  "api/ProjectDawn.Navigation.Hybrid.INavMeshWallProvider.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.INavMeshWallProvider.html",
    "title": "Interface INavMeshWallProvider",
    "keywords": "Interface INavMeshWallProvider Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public interface INavMeshWallProvider"
  },
  "api/ProjectDawn.Navigation.Hybrid.NavMeshSettingsAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.NavMeshSettingsAuthoring.html",
    "title": "Class NavMeshSettingsAuthoring",
    "keywords": "Class NavMeshSettingsAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour NavMeshSettingsAuthoring Inherited Members SettingsBehaviour.Types SettingsBehaviour.FindTypesInAssemblies() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [Obsolete(\"This class is obsolete, please use new settings workflow https://lukaschod.github.io/agents-navigation-docs/manual/settings.html.\")] [AddComponentMenu(\"Agents Navigation/Settings/Nav Mesh Settings\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class NavMeshSettingsAuthoring : SettingsBehaviour Fields m_MaxIterations Declaration [Tooltip(\"TODO\")] [SerializeField] protected int m_MaxIterations Field Value Type Description System.Int32 m_MaxPath Declaration [Tooltip(\"TODO\")] [SerializeField] protected int m_MaxPath Field Value Type Description System.Int32 Properties DefaultSettings Returns default component of AgentSpatialPartitioningSystem.Settings . Declaration public NavMeshQuerySystem.Settings DefaultSettings { get; } Property Value Type Description NavMeshQuerySystem.Settings Methods GetOrCreateEntity() Declaration public override Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity Overrides SettingsBehaviour.GetOrCreateEntity()"
  },
  "api/ProjectDawn.Navigation.Hybrid.NavMeshSurfaceBaker.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.NavMeshSurfaceBaker.html",
    "title": "Class NavMeshSurfaceBaker",
    "keywords": "Class NavMeshSurfaceBaker Inheritance System.Object Unity.Entities.IBaker Unity.Entities.Baker < Unity.AI.Navigation.NavMeshSurface > NavMeshSurfaceBaker Inherited Members Unity.Entities.IBaker.GetSceneGUID() Unity.Entities.IBaker.GetComponent<T>() Unity.Entities.IBaker.GetComponent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponents<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>() Unity.Entities.IBaker.GetComponents<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentInParent<T>() Unity.Entities.IBaker.GetComponentInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentsInParent<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>() Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentInChildren<T>() Unity.Entities.IBaker.GetComponentInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>() Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetParent() Unity.Entities.IBaker.GetParent(UnityEngine.Component) Unity.Entities.IBaker.GetParent(UnityEngine.GameObject) Unity.Entities.IBaker.GetParents() Unity.Entities.IBaker.GetParents(UnityEngine.Component) Unity.Entities.IBaker.GetParents(UnityEngine.GameObject) Unity.Entities.IBaker.GetParents(System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetParents(UnityEngine.Component, System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetParents(UnityEngine.GameObject, System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetChild(System.Int32) Unity.Entities.IBaker.GetChild(UnityEngine.Component, System.Int32) Unity.Entities.IBaker.GetChild(UnityEngine.GameObject, System.Int32) Unity.Entities.IBaker.GetChildren(System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.Component, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.GameObject, System.Boolean) Unity.Entities.IBaker.GetChildren(System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.Component, System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.GameObject, System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildCount() Unity.Entities.IBaker.GetChildCount(UnityEngine.Component) Unity.Entities.IBaker.GetChildCount(UnityEngine.GameObject) Unity.Entities.IBaker.GetName() Unity.Entities.IBaker.GetName(UnityEngine.Component) Unity.Entities.IBaker.GetName(UnityEngine.GameObject) Unity.Entities.IBaker.GetLayer() Unity.Entities.IBaker.GetLayer(UnityEngine.Component) Unity.Entities.IBaker.GetLayer(UnityEngine.GameObject) Unity.Entities.IBaker.GetTag() Unity.Entities.IBaker.GetTag(UnityEngine.Component) Unity.Entities.IBaker.GetTag(UnityEngine.GameObject) Unity.Entities.IBaker.GetEntity() Unity.Entities.IBaker.GetEntity(UnityEngine.GameObject) Unity.Entities.IBaker.GetEntity(UnityEngine.Component) Unity.Entities.IBaker.GetEntity(Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntity(UnityEngine.GameObject, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntity(UnityEngine.Component, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntityWithoutDependency() Unity.Entities.IBaker.IsActive() Unity.Entities.IBaker.IsActive(UnityEngine.Component) Unity.Entities.IBaker.IsActive(UnityEngine.GameObject) Unity.Entities.IBaker.IsActiveAndEnabled() Unity.Entities.IBaker.IsActiveAndEnabled(UnityEngine.Component) Unity.Entities.IBaker.IsStatic() Unity.Entities.IBaker.IsStatic(UnityEngine.Component) Unity.Entities.IBaker.IsStatic(UnityEngine.GameObject) Unity.Entities.IBaker.IsClient() Unity.Entities.IBaker.IsServer() Unity.Entities.IBaker.DependsOn<T>(T) Unity.Entities.IBaker.DependsOnComponentInParent<T>() Unity.Entities.IBaker.DependsOnComponentInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInParent<T>() Unity.Entities.IBaker.DependsOnComponentsInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentsInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentInChildren<T>() Unity.Entities.IBaker.DependsOnComponentInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInChildren<T>() Unity.Entities.IBaker.DependsOnComponentsInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnLightBaking() Unity.Entities.IBaker.AddBlobAsset<T>(Unity.Entities.BlobAssetReference<T>, Unity.Entities.Hash128) Unity.Entities.IBaker.AddBlobAssetWithCustomHash<T>(Unity.Entities.BlobAssetReference<T>, Unity.Entities.Hash128) Unity.Entities.IBaker.TryGetBlobAssetReference<T>(Unity.Entities.Hash128, Unity.Entities.BlobAssetReference<T>) Unity.Entities.IBaker.AddComponent<T>() Unity.Entities.IBaker.AddComponent<T>(T) Unity.Entities.IBaker.AddComponent<T>(Unity.Entities.Entity) Unity.Entities.IBaker.AddComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddComponent(Unity.Entities.ComponentType) Unity.Entities.IBaker.AddComponent(Unity.Entities.Entity, Unity.Entities.ComponentType) Unity.Entities.IBaker.AddComponent(Unity.Entities.ComponentTypeSet) Unity.Entities.IBaker.AddComponent(Unity.Entities.Entity, Unity.Entities.ComponentTypeSet) Unity.Entities.IBaker.AddComponentObject<T>(T) Unity.Entities.IBaker.AddComponentObject<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddSharedComponentManaged<T>(T) Unity.Entities.IBaker.AddSharedComponentManaged<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddSharedComponent<T>(T) Unity.Entities.IBaker.AddSharedComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddBuffer<T>() Unity.Entities.IBaker.AddBuffer<T>(Unity.Entities.Entity) Unity.Entities.IBaker.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetComponentEnabled<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.IBaker.SetComponentEnabled<T>(System.Boolean) Unity.Entities.IBaker.SetSharedComponentManaged<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetSharedComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetBuffer<T>() Unity.Entities.IBaker.SetBuffer<T>(Unity.Entities.Entity) Unity.Entities.IBaker.AppendToBuffer<T>(T) Unity.Entities.IBaker.AppendToBuffer<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.CreateAdditionalEntity() Unity.Entities.IBaker.CreateAdditionalEntity(Unity.Entities.TransformUsageFlags, System.Boolean, System.String) Unity.Entities.IBaker.RegisterPrefabForBaking(UnityEngine.GameObject) Unity.Entities.IBaker.AddTransformUsageFlags(Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.AddTransformUsageFlags(Unity.Entities.Entity, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.IsBakingForEditor() Unity.Entities.IBaker.GetDotsSettings() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public class NavMeshSurfaceBaker : Baker<NavMeshSurface> Methods Bake(NavMeshSurface) Declaration public override void Bake(NavMeshSurface authoring) Parameters Type Name Description Unity.AI.Navigation.NavMeshSurface authoring Overrides Unity.Entities.Baker<Unity.AI.Navigation.NavMeshSurface>.Bake(Unity.AI.Navigation.NavMeshSurface)"
  },
  "api/ProjectDawn.Navigation.Hybrid.ReadAgentRectTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.ReadAgentRectTransformSystem.html",
    "title": "Struct ReadAgentRectTransformSystem",
    "keywords": "Struct ReadAgentRectTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(SimulationSystemGroup))] [UpdateAfter(typeof(FixedStepSimulationSystemGroup))] public struct ReadAgentRectTransformSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.ReadAgentTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.ReadAgentTransformSystem.html",
    "title": "Struct ReadAgentTransformSystem",
    "keywords": "Struct ReadAgentTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(SimulationSystemGroup))] [UpdateAfter(typeof(FixedStepSimulationSystemGroup))] public struct ReadAgentTransformSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.SettingsBehaviour.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.SettingsBehaviour.html",
    "title": "Class SettingsBehaviour",
    "keywords": "Class SettingsBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour NavMeshSettingsAuthoring SpatialPartitioningSettingsAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [Obsolete(\"This class is obsolete, please use new settings workflow https://lukaschod.github.io/agents-navigation-docs/manual/settings.html.\")] public abstract class SettingsBehaviour : MonoBehaviour Fields Types Declaration public static readonly List<Type> Types Field Value Type Description System.Collections.Generic.List < System.Type > Methods FindTypesInAssemblies() Declaration public static List<Type> FindTypesInAssemblies() Returns Type Description System.Collections.Generic.List < System.Type > GetOrCreateEntity() Declaration public abstract Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity"
  },
  "api/ProjectDawn.Navigation.Hybrid.SpatialPartitioningSettingsAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.SpatialPartitioningSettingsAuthoring.html",
    "title": "Class SpatialPartitioningSettingsAuthoring",
    "keywords": "Class SpatialPartitioningSettingsAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour SpatialPartitioningSettingsAuthoring Inherited Members SettingsBehaviour.Types SettingsBehaviour.FindTypesInAssemblies() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [Obsolete(\"This class is obsolete, please use new settings workflow https://lukaschod.github.io/agents-navigation-docs/manual/settings.html.\")] [AddComponentMenu(\"Agents Navigation/Settings/Spatial Partitioning Settings\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/settings.html\")] public class SpatialPartitioningSettingsAuthoring : SettingsBehaviour Fields CellSize Declaration [Tooltip(\"The size of single partition.\")] [SerializeField] protected float3 CellSize Field Value Type Description Unity.Mathematics.float3 Properties DefaultSettings Returns default component of AgentSpatialPartitioningSystem.Settings . Declaration public AgentSpatialPartitioningSystem.Settings DefaultSettings { get; } Property Value Type Description AgentSpatialPartitioningSystem.Settings Methods GetOrCreateEntity() Declaration public override Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity Overrides SettingsBehaviour.GetOrCreateEntity()"
  },
  "api/ProjectDawn.Navigation.Hybrid.WriteAgentRectTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.WriteAgentRectTransformSystem.html",
    "title": "Struct WriteAgentRectTransformSystem",
    "keywords": "Struct WriteAgentRectTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(SimulationSystemGroup), OrderFirst = true)] [UpdateBefore(typeof(FixedStepSimulationSystemGroup))] public struct WriteAgentRectTransformSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.WriteAgentTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.WriteAgentTransformSystem.html",
    "title": "Struct WriteAgentTransformSystem",
    "keywords": "Struct WriteAgentTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(SimulationSystemGroup), OrderFirst = true)] [UpdateBefore(typeof(FixedStepSimulationSystemGroup))] public struct WriteAgentTransformSystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.ISpatialQueryEntity.html": {
    "href": "api/ProjectDawn.Navigation.ISpatialQueryEntity.html",
    "title": "Interface ISpatialQueryEntity",
    "keywords": "Interface ISpatialQueryEntity Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public interface ISpatialQueryEntity Methods Execute(Entity, AgentBody, AgentShape, LocalTransform) Declaration void Execute(Entity entity, AgentBody body, AgentShape shape, LocalTransform transform) Parameters Type Name Description Unity.Entities.Entity entity AgentBody body AgentShape shape Unity.Transforms.LocalTransform transform"
  },
  "api/ProjectDawn.Navigation.ISpatialQueryVolume.html": {
    "href": "api/ProjectDawn.Navigation.ISpatialQueryVolume.html",
    "title": "Interface ISpatialQueryVolume",
    "keywords": "Interface ISpatialQueryVolume Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public interface ISpatialQueryVolume Methods Execute(float3, float3) Declaration void Execute(float3 position, float3 size) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 size"
  },
  "api/ProjectDawn.Navigation.ISubSettings.html": {
    "href": "api/ProjectDawn.Navigation.ISubSettings.html",
    "title": "Interface ISubSettings",
    "keywords": "Interface ISubSettings Classes with this interface will be included into AgentsNavigationSettings as sub settings. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public interface ISubSettings"
  },
  "api/ProjectDawn.Navigation.LinkTraversal.html": {
    "href": "api/ProjectDawn.Navigation.LinkTraversal.html",
    "title": "Struct LinkTraversal",
    "keywords": "Struct LinkTraversal Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct LinkTraversal : IComponentData, IQueryTypeParameter, IEnableableComponent Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.LinkTraversalSeek.html": {
    "href": "api/ProjectDawn.Navigation.LinkTraversalSeek.html",
    "title": "Struct LinkTraversalSeek",
    "keywords": "Struct LinkTraversalSeek Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct LinkTraversalSeek : IComponentData, IQueryTypeParameter Fields End Declaration public Portal End Field Value Type Description Portal Start Declaration public Portal Start Field Value Type Description Portal Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.LinkTraversalSeekSystem.html": {
    "href": "api/ProjectDawn.Navigation.LinkTraversalSeekSystem.html",
    "title": "Struct LinkTraversalSeekSystem",
    "keywords": "Struct LinkTraversalSeekSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct LinkTraversalSeekSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavigationLayerNames.html": {
    "href": "api/ProjectDawn.Navigation.NavigationLayerNames.html",
    "title": "Class NavigationLayerNames",
    "keywords": "Class NavigationLayerNames Inheritance System.Object NavigationLayerNames Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public class NavigationLayerNames Properties Names Declaration public string[] Names { get; } Property Value Type Description System.String []"
  },
  "api/ProjectDawn.Navigation.NavigationLayers.html": {
    "href": "api/ProjectDawn.Navigation.NavigationLayers.html",
    "title": "Enum NavigationLayers",
    "keywords": "Enum NavigationLayers Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Flags] public enum NavigationLayers Fields Name Description Default Everything Layer1 Layer10 Layer11 Layer12 Layer13 Layer14 Layer15 Layer16 Layer17 Layer18 Layer19 Layer2 Layer20 Layer21 Layer22 Layer23 Layer24 Layer25 Layer26 Layer27 Layer28 Layer29 Layer3 Layer30 Layer31 Layer4 Layer5 Layer6 Layer7 Layer8 Layer9 None Extension Methods NavigationLayerUtility.All(NavigationLayers) NavigationLayerUtility.Any(NavigationLayers) NavigationLayerUtility.Add(NavigationLayers)"
  },
  "api/ProjectDawn.Navigation.NavigationLayerUtility.html": {
    "href": "api/ProjectDawn.Navigation.NavigationLayerUtility.html",
    "title": "Class NavigationLayerUtility",
    "keywords": "Class NavigationLayerUtility Inheritance System.Object NavigationLayerUtility Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public static class NavigationLayerUtility Methods Add(ref NavigationLayers, NavigationLayers) Declaration public static void Add(this ref NavigationLayers lhs, NavigationLayers rhs) Parameters Type Name Description NavigationLayers lhs NavigationLayers rhs All(NavigationLayers, NavigationLayers) Declaration public static bool All(this NavigationLayers lhs, NavigationLayers rhs) Parameters Type Name Description NavigationLayers lhs NavigationLayers rhs Returns Type Description System.Boolean Any(NavigationLayers, NavigationLayers) Declaration public static bool Any(this NavigationLayers lhs, NavigationLayers rhs) Parameters Type Name Description NavigationLayers lhs NavigationLayers rhs Returns Type Description System.Boolean TryGetLayerMask(String, out NavigationLayers) Declaration public static bool TryGetLayerMask(string name, out NavigationLayers mask) Parameters Type Name Description System.String name NavigationLayers mask Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.NavMeshBoundary.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshBoundary.html",
    "title": "Struct NavMeshBoundary",
    "keywords": "Struct NavMeshBoundary Represents a boundary on the navigation mesh. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshBoundary : IComponentData, IQueryTypeParameter Fields Location The location of the boundary. Declaration public NavMeshLocation Location Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation Radius The radius of the boundary. Declaration public float Radius Field Value Type Description System.Single Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshBoundarySystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshBoundarySystem.html",
    "title": "Struct NavMeshBoundarySystem",
    "keywords": "Struct NavMeshBoundarySystem System that for each agent that has sonar with wall collects nearby navmesh edges as walls. Later on these walls are used for avoidance. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct NavMeshBoundarySystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshData.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshData.html",
    "title": "Struct NavMeshData",
    "keywords": "Struct NavMeshData Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < NavMeshData > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshData : ISharedComponentData, IQueryTypeParameter, IEquatable<NavMeshData> Fields Value Declaration public NavMeshData Value Field Value Type Description UnityEngine.AI.NavMeshData Methods Equals(NavMeshData) Declaration public bool Equals(NavMeshData other) Parameters Type Name Description NavMeshData other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.NavMeshDataInstance.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshDataInstance.html",
    "title": "Struct NavMeshDataInstance",
    "keywords": "Struct NavMeshDataInstance Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshDataInstance : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields Value Declaration public NavMeshDataInstance Value Field Value Type Description UnityEngine.AI.NavMeshDataInstance Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshDataSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshDataSystem.html",
    "title": "Class NavMeshDataSystem",
    "keywords": "Class NavMeshDataSystem Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase NavMeshDataSystem Inherited Members Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator Unity.Entities.ComponentSystemBase.OnCreate() Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup))] public class NavMeshDataSystem : SystemBase Methods OnDestroy() Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.NavMeshDisplacementSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshDisplacementSystem.html",
    "title": "Struct NavMeshDisplacementSystem",
    "keywords": "Struct NavMeshDisplacementSystem System that forces agents to stay within NavMesh surface. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentDisplacementSystemGroup))] [UpdateAfter(typeof(AgentColliderSystem))] public struct NavMeshDisplacementSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshFunnel.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshFunnel.html",
    "title": "Struct NavMeshFunnel",
    "keywords": "Struct NavMeshFunnel Used for creating optimal path from navmesh polygons. Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshFunnel : IDisposable Constructors NavMeshFunnel(Int32, Allocator) Declaration public NavMeshFunnel(int capacity, Allocator allocator) Parameters Type Name Description System.Int32 capacity Unity.Collections.Allocator allocator Properties IsEndReachable Declaration public bool IsEndReachable { get; } Property Value Type Description System.Boolean Methods AsFlags() Returns flags array of the path. Declaration public NativeSlice<StraightPathFlags> AsFlags() Returns Type Description Unity.Collections.NativeSlice < StraightPathFlags > Returns array of flags. AsLocations() Returns locations array of the path. Declaration public NativeSlice<NavMeshLocation> AsLocations() Returns Type Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.NavMeshLocation > Returns array of locations. Dispose() Declaration public void Dispose() GetCornersDistance() Returns distance of the path. Declaration public float GetCornersDistance() Returns Type Description System.Single TryCreateStraightPath(NavMeshQuery, NativeSlice<PolygonId>, float3, float3) Recreates corridor with straight path. This method will attempt to build optimal path using NavMesh polygons. Declaration public bool TryCreateStraightPath(NavMeshQuery query, NativeSlice<PolygonId> path, float3 from, float3 to) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query The NavMesh query. Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Polygons array. Unity.Mathematics.float3 from Starting position. Unity.Mathematics.float3 to Destination position. Returns Type Description System.Boolean Returns true if path is valid. Implements System.IDisposable"
  },
  "api/ProjectDawn.Navigation.NavMeshLinkTraversal.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshLinkTraversal.html",
    "title": "Struct NavMeshLinkTraversal",
    "keywords": "Struct NavMeshLinkTraversal Agent off mesh link data that is currently traversing. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshLinkTraversal : IComponentData, IQueryTypeParameter Fields EndPolygon Declaration public PolygonId EndPolygon Field Value Type Description UnityEngine.Experimental.AI.PolygonId Seek Declaration public LinkTraversalSeek Seek Field Value Type Description LinkTraversalSeek StartPolygon Declaration public PolygonId StartPolygon Field Value Type Description UnityEngine.Experimental.AI.PolygonId Properties Default Returns default configuration. Declaration public static NavMeshLinkTraversal Default { get; } Property Value Type Description NavMeshLinkTraversal Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshLinkTraversalMode.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshLinkTraversalMode.html",
    "title": "Enum NavMeshLinkTraversalMode",
    "keywords": "Enum NavMeshLinkTraversalMode Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum NavMeshLinkTraversalMode Fields Name Description Custom None Seeking"
  },
  "api/ProjectDawn.Navigation.NavMeshNode.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshNode.html",
    "title": "Struct NavMeshNode",
    "keywords": "Struct NavMeshNode Agent NavMesh single node of path. Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshNode : IBufferElementData Fields Value Polygon id of NavMesh node. Declaration public PolygonId Value Field Value Type Description UnityEngine.Experimental.AI.PolygonId Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.NavMeshPath.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPath.html",
    "title": "Struct NavMeshPath",
    "keywords": "Struct NavMeshPath Agent NavMesh path. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshPath : IComponentData, IQueryTypeParameter, IEnableableComponent Fields AgentTypeId The type ID for the agent in NavMesh. Declaration public int AgentTypeId Field Value Type Description System.Int32 AreaMask Specifies which NavMesh areas are passable. Changing areaMask will make the path stale (see isPathStale). Declaration public int AreaMask Field Value Type Description System.Int32 AutoRepath Should the agent attempt to acquire a new path if the existing path becomes invalid? Declaration public bool AutoRepath Field Value Type Description System.Boolean EndLocation End location of the agent on NavMesh. Declaration public NavMeshLocation EndLocation Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation Grounded Constraint agent to be on the surface. It is useful to disable then used with physics, to allow more freedom motion and precision. Declaration public bool Grounded Field Value Type Description System.Boolean Location Current location of the agent on NavMesh. Declaration public NavMeshLocation Location Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation MappingExtent Maximum distance on each axis will be used when attempting to map the agent's position or destination onto navmesh. The higher the value, the bigger the performance cost. Declaration public float3 MappingExtent Field Value Type Description Unity.Mathematics.float3 QueryHandle Query handle of current requested path. Declaration public NavMeshQueryHandle QueryHandle Field Value Type Description NavMeshQueryHandle State State of the path. Declaration public NavMeshPathState State Field Value Type Description NavMeshPathState Properties Constrained Declaration [Obsolete(\"Constrained is deprecated, please use Grounded.\")] public bool Constrained { get; set; } Property Value Type Description System.Boolean Default Returns default configuration. Declaration public static NavMeshPath Default { get; } Property Value Type Description NavMeshPath Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.NavMeshPathState.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPathState.html",
    "title": "Enum NavMeshPathState",
    "keywords": "Enum NavMeshPathState State of the path. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum NavMeshPathState Fields Name Description Failed NavMesg path building failed. See editor console for more information. Finished NavMesh path building is finished. Check NavMeshNode buffer for result. InProgress NavMesh path building is in progress. InValid NavMesh path is no longer valid. WaitingNewPath Waiting for new NavMesh path requested to be handled."
  },
  "api/ProjectDawn.Navigation.NavMeshPathSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPathSystem.html",
    "title": "Struct NavMeshPathSystem",
    "keywords": "Struct NavMeshPathSystem System that controls agent NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct NavMeshPathSystem : ISystem Methods OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshQueryHandle.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQueryHandle.html",
    "title": "Struct NavMeshQueryHandle",
    "keywords": "Struct NavMeshQueryHandle Represents handle of NavMeshQuery used by NavMeshQuerySystem . Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshQueryHandle Fields Index Unique index of NavMesh query. Declaration public int Index Field Value Type Description System.Int32 Properties Null Invalid NavMesh query. Declaration public static NavMeshQueryHandle Null { get; } Property Value Type Description NavMeshQueryHandle Methods Equals(NavMeshQueryHandle) Declaration public bool Equals(NavMeshQueryHandle other) Parameters Type Name Description NavMeshQueryHandle other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object compare) Parameters Type Name Description System.Object compare Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(NavMeshQueryHandle, NavMeshQueryHandle) Declaration public static bool operator ==(NavMeshQueryHandle lhs, NavMeshQueryHandle rhs) Parameters Type Name Description NavMeshQueryHandle lhs NavMeshQueryHandle rhs Returns Type Description System.Boolean Implicit(NavMeshQueryHandle to Int32) Declaration public static implicit operator int (NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description System.Int32 Inequality(NavMeshQueryHandle, NavMeshQueryHandle) Declaration public static bool operator !=(NavMeshQueryHandle lhs, NavMeshQueryHandle rhs) Parameters Type Name Description NavMeshQueryHandle lhs NavMeshQueryHandle rhs Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.NavMeshQueryStatus.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQueryStatus.html",
    "title": "Enum NavMeshQueryStatus",
    "keywords": "Enum NavMeshQueryStatus The status of navmesh query. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum NavMeshQueryStatus Fields Name Description Allocated Path is allocated. Failed Failed to construct path. Finished Path is finished. FinishedFullPath Full path is finished, where destination is reachable. FinishedPartialPath Partial path is finished, where it leads close enough to destination. Free Path is already released. InProgress Path is in progress. None"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.html",
    "title": "Struct NavMeshQuerySystem",
    "keywords": "Struct NavMeshQuerySystem System for requesting NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(InitializationSystemGroup))] public struct NavMeshQuerySystem : ISystem Methods OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.Settings.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.Settings.html",
    "title": "Struct NavMeshQuerySystem.Settings",
    "keywords": "Struct NavMeshQuerySystem.Settings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Obsolete(\"This class is obsolete, please use new settings workflow https://lukaschod.github.io/agents-navigation-docs/manual/settings.html.\")] public struct Settings : IComponentData, IQueryTypeParameter Fields MaxIterations Declaration public int MaxIterations Field Value Type Description System.Int32 MaxPathSize Declaration public int MaxPathSize Field Value Type Description System.Int32 Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.Singleton.html",
    "title": "Struct NavMeshQuerySystem.Singleton",
    "keywords": "Struct NavMeshQuerySystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Properties World Declaration public NavMeshWorld World { get; } Property Value Type Description UnityEngine.Experimental.AI.NavMeshWorld Methods CreateQuery(NavMeshLocation, NavMeshLocation, Int32, Int32) Creates new navmesh query to construct optimal path. Declaration public NavMeshQueryHandle CreateQuery(NavMeshLocation from, NavMeshLocation to, int agentTypeId = 0, int areaMask = -1) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshLocation from UnityEngine.Experimental.AI.NavMeshLocation to System.Int32 agentTypeId System.Int32 areaMask Returns Type Description NavMeshQueryHandle DestroyQuery(NavMeshQueryHandle) Release navmesh query for reuse. Declaration public void DestroyQuery(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Exist(NavMeshQueryHandle) Returns true if navmesh query exists. Declaration public bool Exist(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description System.Boolean GetEdgesAndNeighbors(PolygonId, NativeSlice<Vector3>, NativeSlice<PolygonId>, NativeSlice<Byte>, out Int32, out Int32) Returns surface information of navmesh node. Declaration public bool GetEdgesAndNeighbors(PolygonId node, NativeSlice<Vector3> vertices, NativeSlice<PolygonId> nodes, NativeSlice<byte> indices, out int numVertices, out int numNodes) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId node Unity.Collections.NativeSlice < UnityEngine.Vector3 > vertices Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > nodes Unity.Collections.NativeSlice < System.Byte > indices System.Int32 numVertices System.Int32 numNodes Returns Type Description System.Boolean GetPolygons(NavMeshQueryHandle) Returns path that is represented as array of nodes. Can be used for construcing NavMeshFunnel . Declaration public NativeSlice<PolygonId> GetPolygons(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > GetPolygonType(PolygonId) Declaration public NavMeshPolyTypes GetPolygonType(PolygonId path) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId path Returns Type Description UnityEngine.Experimental.AI.NavMeshPolyTypes GetPortalPoints(PolygonId, PolygonId, out float3, out float3) Declaration public bool GetPortalPoints(PolygonId from, PolygonId to, out float3 portalLeft, out float3 portalRight) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId from UnityEngine.Experimental.AI.PolygonId to Unity.Mathematics.float3 portalLeft Unity.Mathematics.float3 portalRight Returns Type Description System.Boolean GetPortalPoints(PolygonId, PolygonId, out Vector3, out Vector3) Declaration public bool GetPortalPoints(PolygonId polygon, PolygonId neighbourPolygon, out Vector3 left, out Vector3 right) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId polygon UnityEngine.Experimental.AI.PolygonId neighbourPolygon UnityEngine.Vector3 left UnityEngine.Vector3 right Returns Type Description System.Boolean GetStatus(NavMeshQueryHandle) Returns status of navmesh query. Declaration public NavMeshQueryStatus GetStatus(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description NavMeshQueryStatus IsPathValid(NativeSlice<PolygonId>) Returns true, if all nodes in array are valid. Does not check, if the nodes are connected. Declaration public bool IsPathValid(NativeSlice<PolygonId> path) Parameters Type Name Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Returns Type Description System.Boolean IsValid(PolygonId) Returns true, if node is valid. Declaration public bool IsValid(PolygonId path) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId path Returns Type Description System.Boolean MapLocation(float3, float3, Int32, Int32) Returns navmesh location from specified one. This is HPC# version of UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit@,System.Single,System.Int32) . Declaration public NavMeshLocation MapLocation(float3 position, float3 extents, int agentTypeID, int areaMask = -1) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 extents System.Int32 agentTypeID System.Int32 areaMask Returns Type Description UnityEngine.Experimental.AI.NavMeshLocation MoveLocation(NavMeshLocation, float3, Int32) Moves navmesh location to specified position. This is usually used for finding new position without steping over the obstacles. Declaration public NavMeshLocation MoveLocation(NavMeshLocation location, float3 target, int areaMask = -1) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshLocation location Unity.Mathematics.float3 target System.Int32 areaMask Returns Type Description UnityEngine.Experimental.AI.NavMeshLocation ProgressPath(ref DynamicBuffer<NavMeshNode>, PolygonId, PolygonId) Progress path by either removing or adding nodes. If newPolygon exists in path, it shortens path up to that node. Otherwise it attempts to add newPolygon to path. This method can produce invalid path, if newPolygon is can not be connected to path, it is expected that funnel will request new path in that case. Declaration public void ProgressPath(ref DynamicBuffer<NavMeshNode> nodes, PolygonId previousPolygon, PolygonId newPolygon) Parameters Type Name Description Unity.Entities.DynamicBuffer < NavMeshNode > nodes UnityEngine.Experimental.AI.PolygonId previousPolygon UnityEngine.Experimental.AI.PolygonId newPolygon Raycast(out NavMeshHit, NavMeshLocation, Vector3, Int32, NativeArray<Single>) Declaration public PathQueryStatus Raycast(out NavMeshHit hit, NavMeshLocation start, Vector3 targetPosition, int areaMask = -1, NativeArray<float> costs = default(NativeArray<float>)) Parameters Type Name Description UnityEngine.AI.NavMeshHit hit UnityEngine.Experimental.AI.NavMeshLocation start UnityEngine.Vector3 targetPosition System.Int32 areaMask Unity.Collections.NativeArray < System.Single > costs Returns Type Description UnityEngine.Experimental.AI.PathQueryStatus TryCreateFunnel(ref NavMeshFunnel, NativeSlice<PolygonId>, float3, float3) Creates navmesh funnel out of navmesh nodes. Declaration public bool TryCreateFunnel(ref NavMeshFunnel funnel, NativeSlice<PolygonId> path, float3 from, float3 to) Parameters Type Name Description NavMeshFunnel funnel Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Unity.Mathematics.float3 from Unity.Mathematics.float3 to Returns Type Description System.Boolean Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshSteeringSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshSteeringSystem.html",
    "title": "Struct NavMeshSteeringSystem",
    "keywords": "Struct NavMeshSteeringSystem System that steers agents within the NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateAfter(typeof(NavMeshBoundarySystem))] [UpdateAfter(typeof(NavMeshPathSystem))] [UpdateInGroup(typeof(AgentPathingSystemGroup))] public struct NavMeshSteeringSystem : ISystem Explicit Interface Implementations ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state ISystem.OnUpdate(ref SystemState) Declaration [BurstCompile] void ISystem.OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshWall.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshWall.html",
    "title": "Struct NavMeshWall",
    "keywords": "Struct NavMeshWall Represents a wall on the navigation mesh. Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshWall : IBufferElementData Constructors NavMeshWall(float3, float3) Constructs a new instance of the NavMeshWall struct. Declaration public NavMeshWall(float3 from, float3 to) Parameters Type Name Description Unity.Mathematics.float3 from The start point of the wall. Unity.Mathematics.float3 to The end point of the wall. Fields End The end point of the wall. Declaration public float3 End Field Value Type Description Unity.Mathematics.float3 Start The start point of the wall. Declaration public float3 Start Field Value Type Description Unity.Mathematics.float3 Properties Direction Declaration public float3 Direction { get; } Property Value Type Description Unity.Mathematics.float3 Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.PathUtils.html": {
    "href": "api/ProjectDawn.Navigation.PathUtils.html",
    "title": "Class PathUtils",
    "keywords": "Class PathUtils Inheritance System.Object PathUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public class PathUtils Methods FindStraightPath(NavMeshQuery, Vector3, Vector3, NativeSlice<PolygonId>, Int32, ref NativeArray<NavMeshLocation>, ref NativeArray<StraightPathFlags>, ref NativeArray<Single>, ref Int32, Int32) Declaration public static PathQueryStatus FindStraightPath(NavMeshQuery query, Vector3 startPos, Vector3 endPos, NativeSlice<PolygonId> path, int pathSize, ref NativeArray<NavMeshLocation> straightPath, ref NativeArray<StraightPathFlags> straightPathFlags, ref NativeArray<float> vertexSide, ref int straightPathCount, int maxStraightPath) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query UnityEngine.Vector3 startPos UnityEngine.Vector3 endPos Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path System.Int32 pathSize Unity.Collections.NativeArray < UnityEngine.Experimental.AI.NavMeshLocation > straightPath Unity.Collections.NativeArray < StraightPathFlags > straightPathFlags Unity.Collections.NativeArray < System.Single > vertexSide System.Int32 straightPathCount System.Int32 maxStraightPath Returns Type Description UnityEngine.Experimental.AI.PathQueryStatus Perp2D(Vector3, Vector3) Declaration public static float Perp2D(Vector3 u, Vector3 v) Parameters Type Name Description UnityEngine.Vector3 u UnityEngine.Vector3 v Returns Type Description System.Single RetracePortals(NavMeshQuery, Int32, Int32, NativeSlice<PolygonId>, Int32, Vector3, ref NativeArray<NavMeshLocation>, ref NativeArray<StraightPathFlags>, Int32) Declaration public static int RetracePortals(NavMeshQuery query, int startIndex, int endIndex, NativeSlice<PolygonId> path, int n, Vector3 termPos, ref NativeArray<NavMeshLocation> straightPath, ref NativeArray<StraightPathFlags> straightPathFlags, int maxStraightPath) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query System.Int32 startIndex System.Int32 endIndex Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path System.Int32 n UnityEngine.Vector3 termPos Unity.Collections.NativeArray < UnityEngine.Experimental.AI.NavMeshLocation > straightPath Unity.Collections.NativeArray < StraightPathFlags > straightPathFlags System.Int32 maxStraightPath Returns Type Description System.Int32 Swap(ref Vector3, ref Vector3) Declaration public static void Swap(ref Vector3 a, ref Vector3 b) Parameters Type Name Description UnityEngine.Vector3 a UnityEngine.Vector3 b"
  },
  "api/ProjectDawn.Navigation.Portal.html": {
    "href": "api/ProjectDawn.Navigation.Portal.html",
    "title": "Struct Portal",
    "keywords": "Struct Portal Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Portal Constructors Portal(float3) Declaration public Portal(float3 point) Parameters Type Name Description Unity.Mathematics.float3 point Portal(float3, float3) Declaration public Portal(float3 left, float3 right) Parameters Type Name Description Unity.Mathematics.float3 left Unity.Mathematics.float3 right Fields Left Declaration public float3 Left Field Value Type Description Unity.Mathematics.float3 Right Declaration public float3 Right Field Value Type Description Unity.Mathematics.float3 Methods GetClosestPortalPoint(float3) Returns closest point from position to portal line. Declaration public float3 GetClosestPortalPoint(float3 position) Parameters Type Name Description Unity.Mathematics.float3 position Returns Type Description Unity.Mathematics.float3"
  },
  "api/ProjectDawn.Navigation.ShapeType.html": {
    "href": "api/ProjectDawn.Navigation.ShapeType.html",
    "title": "Enum ShapeType",
    "keywords": "Enum ShapeType Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum ShapeType Fields Name Description Circle Cylinder"
  },
  "api/ProjectDawn.Navigation.SonarAvoidMode.html": {
    "href": "api/ProjectDawn.Navigation.SonarAvoidMode.html",
    "title": "Enum SonarAvoidMode",
    "keywords": "Enum SonarAvoidMode Modifications of sonar avoidance funcionality. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum SonarAvoidMode Fields Name Description Default Default mode. IgnoreBehindAgents Ignores agents that are behind."
  },
  "api/ProjectDawn.Navigation.SpatialPartitioningSubSettings.html": {
    "href": "api/ProjectDawn.Navigation.SpatialPartitioningSubSettings.html",
    "title": "Class SpatialPartitioningSubSettings",
    "keywords": "Class SpatialPartitioningSubSettings Inheritance System.Object SpatialPartitioningSubSettings Implements ISubSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public class SpatialPartitioningSubSettings : ISubSettings Properties CellSize The size of single cell. Declaration public float3 CellSize { get; } Property Value Type Description Unity.Mathematics.float3 LayerNames Declaration public string[] LayerNames { get; } Property Value Type Description System.String [] QueryCapacity The maximum number of nearby neighbors to be included in the avoidance/collision systems will be determined. Declaration public int QueryCapacity { get; } Property Value Type Description System.Int32 QueryChecks The maximum number of nearby neighbors will be checked to find closest. Declaration public int QueryChecks { get; } Property Value Type Description System.Int32 Implements ISubSettings"
  },
  "api/ProjectDawn.Navigation.SpatialPartitioningSubSettings.QueryCheckMode.html": {
    "href": "api/ProjectDawn.Navigation.SpatialPartitioningSubSettings.QueryCheckMode.html",
    "title": "Enum SpatialPartitioningSubSettings.QueryCheckMode",
    "keywords": "Enum SpatialPartitioningSubSettings.QueryCheckMode Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum QueryCheckMode Fields Name Description _16 _32"
  },
  "api/ProjectDawn.Navigation.StraightPathFlags.html": {
    "href": "api/ProjectDawn.Navigation.StraightPathFlags.html",
    "title": "Enum StraightPathFlags",
    "keywords": "Enum StraightPathFlags Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Flags] public enum StraightPathFlags Fields Name Description End OffMeshConnection Start"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog [4.0.0] - 2024-04-13 Added integration with A* Pathfinding Project! This includes new component Agent A* Pathing that uses package global pathing. Added off mesh link support Added custom link traversal tutorial and scene Added Speed property to AgentBody Fixed navmesh path no longer being calculated 2x times Fixed NavMeshPath.Default to set Grounded to true [3.5.2] - 2023-12-14 Fixed AgentNavMeshPath correctly bake UseWalls in subscene Fixed NavMeshQuery to correctly return partial path in case all nodes visited instead of just return then it is out of iterations [3.5.1] - 2023-12-12 Fixed ECS NavMesh cleanup Fixed for crowds gizmos field capacity error [3.5.0] - 2023-12-02 Added AgentActionSystemGroup Added AgentSpatialSystemGroup Added AgentPathingSystemGroup Changed NavMesh Constrained into Grounded Changed AgentSteering into AgentLocomotion Changed AgentTransformSystemGroup into AgentDisplacementSystemGroup Changed AgentSteeringSystemGroup into AgentSeekingSystemGroup Fixed navigation settings null reference exception [3.4.2] - 2023-11-14 Added Agent.Default Fixed navigation layers not working with query capacity 0 [3.4.1] - 2023-11-10 Fixed issues with navigation layer setting to nothing [3.4.0] - 2023-11-08 Added path progress in case agents is moved outside agents system group Added Layers to Agent/AgentCollider/AgentSeparation/AgentSonarAvoid/AgentReciprocalAvoid Added Query Check setting. The maximum number of nearby neighbors will be checked to find closest. Added to Smart Stop new behaviour called Give Up Stop. Added AgentCollider enable/disable state Added Iterations Per Frame for NavMesh Added NavMesh Constrained option to control should agent be forced to be on surface Removed old 0.65 entities package baking path Changed Sonar Time Horizon only include agents that are withing radius. This will improve agent seeking. Changed Spatial Partitioning to use parallel jobs Changed AgentSystemGroup to be executed before physics [3.3.5] - 2023-10-25 Fixed gizmos drawing for multiple game objects and entities Changed ECS gizmos drawing no longer requires to select agent authoring Changed GizmosCommandBuffer no longer has parallel version. As this simplifies gizmos logic and did not worked correctly any way [3.3.4] - 2023-10-13 Fixed performance regression with query capacity Fixed samples script agent destination missing reference Fixed \"Leak Detected : Persistent allocates 257 individual allocations\" (Made workaround to unity bug that leaks bursted System.OnCreate) [3.3.3] - 2023-09-18 Changed NavMeshQueryStatus.Finished to be obsolete, use FinishedFullPath or FinishedPartialPath. This changes allows distinguish reachable from unreachable paths Fixed Regular Update to skip frame with delta zero Fixed in docs SonarAvoidance.Set parameters names Fixed SonarAvoidance.CopyFrom to also copy angle Fixed QueryCylinder using radius for y axis instead of height Fixed Query Capacity to more effiently take neighbour agents (Should reduce popping effect with collisions) [3.3.2] - 2023-09-01 Fixed regression from 3.3.1 limited query resulting error \"HashMap is full\" [3.3.1] - 2023-08-31 Added limited query fully account different agent sizes Changed nav mesh remaining distance to return float max value until it reaches few remaining nodes. It was changed, as it was never accurate value which was resulting other issues Fixed lower push forces on collision with sonar horizon Fixed authoring help links [3.3.0] - 2023-08-20 Added collider settings Added spatial partitioning cylinder and circle query with limited neighbour count Added map mapping to icons for a reduced aliasing Changed project settings from scene based to project wide Changed separation to use current shape of agent Changed com.unity.entities version to 1.0.14 [3.2.0] - 2023-07-16 Added NavMeshSettings singleton Added settings component mirroring in the project settings under new tab Agents Navigation Added new component Agent Smart Stop from Zerg Samples Added default configurations for AgentBody/AgentSteering/AgentCollider/AgentShape/AgentSeparation/NavMeshPath Added EntityNodes to AgentNavMeshAuthoring Added warning for agent authoring in case no shape is added Added error then NavMeshQuerySystem is attempted to be created in edit mode Changed velocity to account collision with agents and navmesh Changed SonarAvoidance radius scale with velocity Changed SonarAvoidance to be float2 now. First value represents angle of velocity obstacle and second one maximum allowed angle Changed AgentCylindreShapeAuthoring icon (I hope you will enjoy new one) Fixed SonarAvoidance Walls no longer produces extremely small paths Fixed hybrid mode have correct LocalTransform scale 1 Fixed spatial partitioning to use same same query to avoid inconsistencies Fixed component UI updating previous frames values [3.1.6] - 2023-04-11 Changed seperation algorithm Added weight property to seperation Fixed NavMesh Area Mask correctly work with no sequential layers [3.1.5] - 2023-03-29 Added NavMeshSurface surface baker and now it can be baked in subscene Added sample scene low level sonar avoidance to show its usage Added enable/disable to AgentNavMeshAuthoring and AgentAvoidAuthoring Chanded AgentSonarAvoid and NavMeshPath is now IEnableableComponent Fixed support for entities 1.0.0-preview.65 Fixed acceleration correctling working with huge values Fixed sonar avoidance quality regression from 3.1 [3.1.4] - 2023-02-22 Changed com.unity.entities package version from 1.0.0-pre.15 to 1.0.0-pre.44 Fixed AgenAuthroing.Stop to correctly set velocity to zero [3.1.3] - 2023-02-16 Added support for RectTransform [3.1.2] - 2023-02-10 Added SetDestinationDeferred to agent Fixed navmesh area mask editor property work correctly Changed agent capacity automatically resizing, removed AgentCapacity property for SpatialPartitioningSettings Changed gizmos system to be in the same group AgentGizmosSystemGroup [3.1.1] - 2023-02-07 Fixed compilation issue as one of the assembly was not set to Editor [3.1.0] - 2023-01-31 Added new feature to local avoidance Walls that accounts for navmesh. Added new property to AgentNavMeshAuthoring UseWalls. Changed standing agents now puch each other. Fixed local avoidance gizmos drawing. Fixed then desination either above or below agent would result in error. Fixed path failure case then it is out of nodes and path is in progress. [3.0.6] - 2023-01-11 Fixed NavMesh path sometimes discarding destination Fixed error drop when selecting agent in subscene \"The targets array should not be used inside OnSceneGUI or OnPreviewGUI. Use the single target property instead. UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&)\" [3.0.5] - 2022-12-26 Fixed NavMeshAgent correctly stop if path destination can not be mapped to navmesh Fixed that even with OutOfNodes still returns best possible path Added NavMeshPath failed state and also prints the error in editor Added NavMeshAgent/NavMeshPath added new property MappingExtent that allows controling the maximum distance the agent will be mapped Added documentation links to components and package Changed documentation to hidden folder as now it is on webpage [3.0.4] - 2022-12-23 Fixed NavMeshAgent correctly handle partial paths (Paths where destination can not be reached) Fixed few more cases where NavMesh update would result in \"Any jobs using NavMeshQuery must be completed before we mutate the NavMesh.\" Fixed NavMeshAgent in some cases reusing path from other agent Changed Zerg scene camera to be centered around controllable units [3.0.3] - 2022-12-17 Added to EntityBehaviour OnEnable and OnDisable Added error message box to AgentNavMeshAuthoring, if game objects also has NavMeshObstacle Added SetDestination method to AgentAuthoring Changed that if agent is not near any NavMesh it will throw error instead moved to the center of the world Changed dependency com.unity.entities version to 1.0.14 Fixed few cases where NavMesh update would result in \"Any jobs using NavMeshQuery must be completed before we mutate the NavMesh.\" [3.0.2] - 2022-12-15 Fixed NavMesh at the end of destination throwing error System.IndexOutOfRangeException: Index {0} is out of range of '{1}' Length . Fixed transform sync from game object to entity not override transform in most calls. [3.0.1] - 2022-12-08 Added correct documentation Added com.unity.modules.ui dependency as samples uses ui Removed second navmesh surface from zerg samples [3.0.0] - 2022-11-30 Release as Agents Navigation [2.0.0] - 2022-06-09 Changing velocity avoidance with new smart algorithm Changing package to use new Package Manager workflow Updating documentation to be more clear and reflect new API changes Adding zerg sample [1.0.3] - 2022-05-14 Adding new demo scene \"8 - Jobified Boids Navmesh Demo\" [1.0.2] - 2022-03-19 Fixing memory leaks in demo scenes [1.0.1] - 2022-03-08 Updated jobs demo to not use physics and small bug fix [1.0.0] - 2022-02-22 Package released"
  },
  "index.html": {
    "href": "index.html",
    "title": "Agents Navigation",
    "keywords": "Agents Navigation High performance, modular and scalable navigation for agents."
  },
  "manual/astar.html": {
    "href": "manual/astar.html",
    "title": "A* Pathfinding Project",
    "keywords": "A* Pathfinding Project Important This page explains the functionalities of the A* Pathfinding Project extension package. This is an alternative pathing solution to NavMesh that comes with a new extension package called A* Pathfinding Project extension package. For specifics I recommend checking astar documentation this . Overview Agent Astar Pathing - a component that indicates agent should use astar pathing."
  },
  "manual/crowds.html": {
    "href": "manual/crowds.html",
    "title": "Crowds",
    "keywords": "Crowds Important This page explains the functionalities of the Agents Navigation - Crowds extension package. This is an alternative pathing solution to NavMesh that comes with a new extension package called Agents Navigation - Crowds . It is based on continuum crowds , where agents use flow fields to navigate. The flow field is a grid-based graph, and a key difference is that the agent's steering velocity is calculated not per agent but per grid cell. The key differences are as follows: Performance cost scales with grid size multiplied by group count instead of the pure agent count. This allows for huge crowds with lower performance costs. Pathing and avoidance are combined, resulting in a greatly reduced likelihood of scenarios where agents get stuck due to local avoidance. Each agent group must share common destination goals, which means performance can quickly degrade if there are many groups. Agents exhibit much better flow in huge crowds, but at the same time, agents lose individuality and favor group flow instead of their own. Overview Crowd Surface - walkable surface by agents. Crowd Group - a group of agents on a particular surface. Agent Crowd Pathing - a group that the agent belongs to and indicates it should participate in crowd flow."
  },
  "manual/crowds/crowd-agent.html": {
    "href": "manual/crowds/crowd-agent.html",
    "title": "Crowd Agent",
    "keywords": "Crowd Agent Important This page explains the functionalities of the Agents Navigation - Crowds extension package. As the Agents Navigation - Crowds extension package reuses the same base agent components that come from Agents Navigation , it includes the Agent , Agent Cylinder / Agent Circle , and other optional components. The regular agent and the agent that participates in crowd flow are distinguished by the Agent Crowd Pathing component."
  },
  "manual/crowds/crowd-data.html": {
    "href": "manual/crowds/crowd-data.html",
    "title": "",
    "keywords": ""
  },
  "manual/crowds/crowd-discomfort.html": {
    "href": "manual/crowds/crowd-discomfort.html",
    "title": "Crowd Discomfort",
    "keywords": "Crowd Discomfort Important This page explains the functionalities of the Agents Navigation - Crowds extension package. Crowd discomfort marks the area in Crowd Surface that will discourage crowd agents from entering. Make sure that agents in a group have their CostWeights discomfort set not to zero; otherwise, they will ignore discomfort. If the game object is set to static, it will not be updated. It can be created using the menu GameObject > AI > Crowd Discomfort ."
  },
  "manual/crowds/crowd-group.html": {
    "href": "manual/crowds/crowd-group.html",
    "title": "Crowd Group",
    "keywords": "Crowd Group Important This page explains the functionalities of the Agents Navigation - Crowds extension package. A crowd group represents a group of agents that share the same destination goal, speed, and path preferences. Each surface can be referenced by multiple groups, but a group can only reference a single surface. The crowd group is one of the most expensive components of the crowds package, and it is highly recommended to use as few groups as possible. It can be created using the menu GameObject > AI > Crowd Group . Low Level At the low level, it uses the Crowd Flow structure, which is the core of this component. It is composed of multiple fields: Cost Field: Each cell indicates the cost of going into an orthogonal neighboring cell. Speed Field: Each cell indicates the speed of going into an orthogonal neighboring cell. Potential Field: Each cell indicates the potential, and the lower it is, the more likely crowd agents will be attracted to it. Debugging When selecting the component, you can see gizmos that will help you to debug and understand what is happening. The Gizmos option will allow selecting particular fields to be drawn. Note To make it work with Entities, you will need to add the DrawGizmos component to the surface entity."
  },
  "manual/crowds/crowd-obstacle.html": {
    "href": "manual/crowds/crowd-obstacle.html",
    "title": "Crowd Obstacle",
    "keywords": "Crowd Obstacle Important This page explains the functionalities of the Agents Navigation - Crowds extension package. A crowd obstacle marks the area in Crowd Surface that is unwalkable by crowd agents. If the game object is set to static, it will not be updated. It can be created using the menu GameObject > AI > Crowd Obstacle ."
  },
  "manual/crowds/crowd-surface.html": {
    "href": "manual/crowds/crowd-surface.html",
    "title": "Crowd Surface",
    "keywords": "Crowd Surface Important This page explains the functionalities of the Agents Navigation - Crowds extension package. The Crowd Surface is a component that allows you to create a surface that agents can walk on. It is very similar to NavMeshSurface in Unity's NavMesh system. The Width and Height represent the cell count on their respective axes; the higher the number, the more accurate navigation will be at the expense of performance. It can be created using the menu GameObject > AI > Crowd Surface . Baking In Crowd Surface, baking is an optional feature and can be used without it. However, it can be useful to prebake surface heights and obstacles in a similar way to Unity's NavMesh. To bake the surface, you first need to create a Crowd Data asset. It can be created by right-clicking in the project view and selecting Create > AI > Crowd Data . Then you need to assign it to the Crowd Surface component. After that, you can bake the surface by pressing the Bake button in the Crowd Surface component. Make sure the gizmos encapsulate your physics colliders you want your surface to be baked from. If everything is set up correctly, you should see the gizmos like this: Note Baking is currently here experimental and will improve in the future. Most of the CrowdData API is exposed so users would have full control over it. Low Level At the low level, it uses the Crowd World structure, which is the core of this component. It is composed of multiple fields: Density Field: Each cell indicates agent coverage intensity. Average Velocity Field: Each cell indicates average agent speed. Obstacle Field: Each cell reference counts obstacle overlap. Discomfort Field: Each cell indicates discomfort coverage intensity. Height Field: Each cell indicates the height of the area. Debugging When selecting the component, you can see gizmos that will help you debug and understand what is happening. The Gizmos option will allow selecting particular fields to be drawn. Note To make it work with Entities, you will need to add the DrawGizmos component to the surface entity."
  },
  "manual/entities.html": {
    "href": "manual/entities.html",
    "title": "Entities",
    "keywords": "Entities For those who plan to use Entities in your project or want to squeeze as much performance as possible, you can directly use entities and their agent components. All you need to do is add your Agents to a SubScene , and they get automatically baked into the correct entity components. For those who want to create agent entities without the baker workflow, I recommend looking up game object authoring bakers to see the reference for which entity components to add with default fields. Also, each entity component has a static property named Default to simplify the creation of it instead of figuring out what default fields it requires. The other benefit of using those static properties provides better backward compatibility in case you upgrade to a newer version of agents navigation, and a new field gets added to the component. var entity = EntityManager.CreateEntity(); // Agent tag is required for agent to work EntityManager.AddComponentData(entity, Agent.Default); // AgentBody for dynamic agents EntityManager.AddComponentData(entity, AgentBody.Default); // AgentLocomotion for moving EntityManager.AddComponentData(entity, AgentLocomotion.Default); // AgentShape for default cylinder shape EntityManager.AddComponentData(entity, AgentShape.Default); Important If you are not familiar with ECS, I highly recommend learning the basics of Entities before continuing with this section. Architecture This package architecture is heavily influenced by Craig Reynolds' Boids. Agent navigation is essentially divided into four major sections. The first one is Action , where the agent performs high-level logic to decide whether it should continue moving or change its destination. Next is Steering , where the agent attempts to steer towards its destination. The steering force here is a vector used by the agent to move towards it. In most cases, it will be a unit vector, but not necessarily, as a lower length than one can indicate that the agent should slow down. Many systems will modify the steering force, and each system will attempt to refine it to provide more complicated navigation. For example, the steering force can start with very simple seeking logic, where the agent goes straight into the destination. Then a pathing system like navmesh can modify it to account for path following. Furthermore, there can be avoidance, like sonar, that modifies steering to avoid nearby agents. This can continue with multiple systems and even custom ones. The third section is Locomotion , where the agent uses its steering force to move. There is a default component called AgentLocomotion that simulates a point mass body. To write a custom one, you can check Custom Locomotion . Finally, Displacement is the final step where the agent typically will be constrained within the navmesh surface or ensure non-overlapping between other agents. Sections System Groups Details Action Agent Spatial System Group Constructs accelerated structure for fast nearby agent search Agent Action System Group High-level decision for navigation Steering Agent Seeking System Group Updates forces to steer towards the destination Agent Pathing System Group Updates forces to account for path following Agent Force System Group Updates forces to account for other behaviors like avoidance, separation... Locomotion Agent Locomotion System Group Moves agent using the forces Displacement Agent Displacement System Group Finishing pass like containing agent within the path or collision This architecture enables a high level of modularity and performance, allowing you to easily add your custom steering/locomotion or even pathing without modifying the package, as long as you follow proper system grouping. Debug In case you find some behaviors working unexpectedly, it is recommended to try debug gizmos functionality. This can be enabled per entity by adding component DrawGizmos to it."
  },
  "manual/game-objects.html": {
    "href": "manual/game-objects.html",
    "title": "Game Objects",
    "keywords": "Game Objects Since this package is designed to be modular, most of the navigation behaviors are spread across many components. This enables a wide variety of customizations, as users can add and remove behaviors even per agent. All components essentially only contain authoring data and no logic. The Agent component internally creates an entity and synchronizes data between them. Tip It is recommended to minimize agent component reading as it will require synchronization of jobs."
  },
  "manual/game-objects/agent.html": {
    "href": "manual/game-objects/agent.html",
    "title": "Agent",
    "keywords": "Agent This is the main component that marks a GameObject / Entity as an Agent . In this package, everything that participates in navigation will be considered an Agent , whether it is just a static obstacle or dynamic. If the agent type is set to Default Locomotion , it will also include default Locomotion , Seeking and Arrival behaviors. This will allow the agent to seek its destination and move towards it using simple acceleration based model. For custom locomotion, go check tutorials on how to implement your own locomotion."
  },
  "manual/game-objects/avoidance.html": {
    "href": "manual/game-objects/avoidance.html",
    "title": "Avoidance",
    "keywords": "Avoidance Avoidance is one of the core features of navigation. It is used to avoid obstacles and other agents. It is important to understand that avoidance relies on heuristics and is not a perfect solution. There may be situations where agents will not be able to avoid each other, or they might get stuck in a loop trying to avoid each other. Additionally, it is essential to grasp that avoidance is not a replacement for pathfinding. Instead, it complements pathfinding by helping agents avoid obstacles and other agents while following their path. Note A good way to understand the difference between avoidance and pathfinding is to think of pathfinding as a person with a map and avoidance as a person with a flashlight in a dark room. Pathfinding helps you find a way to the destination, while avoidance helps you navigate around obstacles and other agents along the way."
  },
  "manual/game-objects/avoidance/separation.html": {
    "href": "manual/game-objects/avoidance/separation.html",
    "title": "Agent Separation",
    "keywords": "Agent Separation This component enables one of the Boids behaviors called separation. It is very lightweight algorithm and quite recommended for games that do not require good quality avoidance."
  },
  "manual/game-objects/avoidance/sonar-avoidance.html": {
    "href": "manual/game-objects/avoidance/sonar-avoidance.html",
    "title": "Agent Sonar Avoid",
    "keywords": "Agent Sonar Avoid This component enables avoidance between nearby agents using the Sonar Avoidance solution. It implements the Local Avoidance package. This behavior has many similarities with RVO (Reciprocal Velocity Obstacles) and ORCA (Optimal Reciprocal Collision Avoidance) algorithms and solves similar problems. The main difference with Sonar Avoidance is that it is more focused on the quality of a particular agent as opposed to the quality of the whole group. For this reason, it exhibits behaviors like circling around the target, which is highly sought after in games. Debugging When selecting the agent component, you can see gizmos that will help you debug and understand what is happening. The green volume will indicate the agent's non-obstructed area where it can go. Note To make it work with Entities, you will need to add the DrawGizmos component to the agent entity and select any Agent component. Frequently asked questions Why is my agent circling the target forever? If the destination is unreachable, it is quite possible for the agent to get into a state where it would start circling back and forth. To solve this issue, it is recommended to implement a termination state. For example, if the agent does not make progress towards the target for some time, then it should stop and report failure. Also, playing around with the Radius and Angle fields, and reducing them, should reduce the circling behavior. I want my agent to follow/attack another agent, but it starts to go around it? This happens because the destination you set is inside the agent. As it fails to reach the destination, it starts to circle around the target. To solve this, there is a simple solution to offset the destination by some distance in front of the target. This will make the agent go towards the target and stop in front of it. Sometimes agents still overlap? The avoidance algorithm is based on velocity, but it does not account for acceleration. In some rare cases, it is possible for agents to overlap. Also, if you have Blocked Stop disabled, in the case of being fully blocked, it would fallback to regular direction disregarding avoidance. To solve this, you can use the Agent Collider component to enable collision between agents. With the Nav Mesh component added, my agent moon-walks into the wall? By default, Sonar has no understanding of nav mesh obstacles, so the algorithm gives direction without accounting for them. There is a new feature called Use Walls that will insert nav mesh edges into Sonar Avoidance as obstacles."
  },
  "manual/game-objects/collider.html": {
    "href": "manual/game-objects/collider.html",
    "title": "Agent Collider",
    "keywords": "Agent Collider This component will enable collisions between agents. This component is quite useful complimentary piece with avoidance algorithms, as they not always yield perfect results. Note This components does not uses Unity physics system, but rather it uses custom solution."
  },
  "manual/game-objects/pathing.html": {
    "href": "manual/game-objects/pathing.html",
    "title": "Pathing",
    "keywords": "Pathing Pathing is a system that allows you to find a path between two points in a scene. It is used by the navigation system to determine a route between two points in the scene. Additionally, the AI system utilizes pathing to find a path to a target."
  },
  "manual/game-objects/pathing/astar.html": {
    "href": "manual/game-objects/pathing/astar.html",
    "title": "Agent A* Pathing",
    "keywords": "Agent A* Pathing Important This page explains the functionalities of the A* Pathfinding Project extension package. This component specifies that agent should use A* Pathfinding Project pathing for navigation. Most of funcionality comes from component ManagedState . Auto Repath - policy for how often to recalculate an agent's path. Pathfinding Settings - various settings for path penalties and tags."
  },
  "manual/game-objects/pathing/crowds.html": {
    "href": "manual/game-objects/pathing/crowds.html",
    "title": "Agent Crowd Pathing",
    "keywords": "Agent Crowd Pathing Important This page explains the functionalities of the Agents Navigation - Crowds extension package. This component specifies which crowds group it belongs to and will use its crowd flow for navigation."
  },
  "manual/game-objects/pathing/nav-mesh.html": {
    "href": "manual/game-objects/pathing/nav-mesh.html",
    "title": "Agent NavMesh Pathing",
    "keywords": "Agent NavMesh Pathing This component enables these agents to use Unity's built-in NavMesh system. For more information, check AI Navigation . Debugging When selecting the agent component, you can see gizmos that will help you to debug and understand what is happening. Blue polygons will indicate the NavMesh path, and the end node will always have the strongest color. Note: To make it work with Entities, you will need to add the DrawGizmos component to the agent entity."
  },
  "manual/game-objects/shape.html": {
    "href": "manual/game-objects/shape.html",
    "title": "Shape",
    "keywords": "Shape Agent Cylinder Shape This component specifies the agent shape that will be used in navigation. Cylinder shape will indicate that the agent should be simulated in 3d space with Y as an up axis. Agent Circle Shape This component specifies the agent shape that will be used in navigation. The circle shape will indicate that the agent should be simulated in 2d space with Z as an up axis."
  },
  "manual/game-objects/smart-stop.html": {
    "href": "manual/game-objects/smart-stop.html",
    "title": "Smart Stop",
    "keywords": "Smart Stop This component enables smarter decision-making for agents on when to stop. Hive Mind Stop This behavior is group-based, where the agent attempts to stop when all agents in the group are stopped. It effectively handles scenarios where a group of agents attempts to move to the same destination. Every frame, the agent will check nearby idle agents to see if their destination is similar to its own. If so, it will stop. Give Up Stop This option allows the agent to make smarter stop decisions than simply deciding if it is stuck. Every time the agent bumps into a standing agent, it will progress towards stopping. Additionally, by not bumping into one, it will recover from stopping. Once the progress value is met, the agent will stop."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Agents Navigation",
    "keywords": "Agents Navigation This package includes high performance, modular and scalable navigation for agents. It is developed with DOTS in mind. As result, it takes advantage of Unity's latest technology stack like SIMD mathematics , Jobs , Burst compiler and EntityComponentSystem . Additionally, there is hybrid mode support that enables using it with GameObjects in Object Oriented Programming. One huge problem with navigation is that there is no single solution that would work for all games. Even one of the GDC 2011 talks about navigation was named AI Navigation: It's Not a Solved Problem - Yet , where studios presented unique solutions for solving their navigation problems. For this reason, this package's goal is not to give one universal solution, but actually give a foundation for agent navigation that can be customized and extended to user needs. This package is designed to work with both concepts DOD (Data oriented design) and OOP (Object oriented programming). Both share the same authoring components. Quick Start For minimal quick setup check tutorial Set Destination . Dependencies Minimum Unity 2022.2 version Package com.unity.entities@1.0.11 Package com.unity.ai.navigation@1.1.4 Support If you have questions, bugs or feature requests use Discord ."
  },
  "manual/known-issues.html": {
    "href": "manual/known-issues.html",
    "title": "Known Issues",
    "keywords": "Known Issues Crowds currently does not support partial paths. Astar does support subscenes currently. Will be added in the future."
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples",
    "keywords": "Samples In a package folder named Samples you can find projects that showcase possible use cases. Samples in this package are contained in a hidden folder named Samples~ and they can be imported using Package Manager. This allows package to be lighter if samples are not used. To import samples, follow these steps: Click menu item Window/Package Manager to open package manager window. Make sure you selected tab Packages: In Project . Find package Agents Navigation . Find button Samples and click it. Node. Make sure tab Packages: In Project is selected. For more information check https://docs.unity3d.com/2022.2/Documentation/Manual/cus-samples.html . Scenarios Contains small isolated test scenes that showcases some common navigation behaviors (etc. circle, hallway, group ...). Mass Stress test scene where thousands of agents are spawned and navigate through static and dynamic obstacles. Zerg Small subset of RTS game. With some common controls like smart stop, attack, follow, combat..."
  },
  "manual/settings.html": {
    "href": "manual/settings.html",
    "title": "Settings",
    "keywords": "Settings Settings in this package can be found in Project Settings window tab called Agents Navigation. The first field references project wide settings asset that stores serialized fields of the settings. To change settings you will need to create scriptable object Agents Navigation Settings . It can be done using menu item Assets>Create>AI>Agents Navigation Settings and then referenced to the field. Note Then setting asset is referenced it will be automatically stored in player settings preloaded assets . In case no asset is referenced the default settings will be used."
  },
  "manual/settings/custom-sub-settings.html": {
    "href": "manual/settings/custom-sub-settings.html",
    "title": "Custom Sub Settings",
    "keywords": "Custom Sub Settings Agents Navigation settings can be extended with additional sub settings. To add custom sub settings you need write class that implements interface MySubSettings and it will automatically be included in all instance of Agents Navigation Settings assets. Here is simple sample where new sub settings declared as MySubSettings that contain single value and later on can be accessed via AgentsNavigationSettings class. [Serializable] class MySubSettings : ISubSettings { public int Value = 1; } ... int myValue = AgentsNavigationSettings.Get<MySubSettings>().Value;"
  },
  "manual/sonar-avoidance.html": {
    "href": "manual/sonar-avoidance.html",
    "title": "Sonar Avoidance",
    "keywords": "Sonar Avoidance Component Agent Sonar Avoid is based on this previous package version called Local Avoidance 2.0 . Users can still use SonarAvoidance directly without ECS interface. This local avoidance uses novel solution called SonarAvoidance . Idea is very simple. Interest point constructs sonar volume shaped in circle, that scans for nearby obstacles. Each obstacle cuts into the volume. Once all obstacles are scanned, the best direction can be calculated from it. The solution is designed to be lightweight so it could be moved into any design. Thus the whole functionality is contained of single struct called SonarAvoidance . Constructor Sonar can be created with simple constructor. var sonar = new SonarAvoidance(position, direction, up, innerRadius, outerRadius, speed); Circular Obstacle Circular shape obstacles usually used for other agents. bool success = sonar.InsertObstacle(obstaclePosition, obstacleVelocity, obstacleRadius); Obstacle with 0 velocity Obstacle with negative y axis velocity Note: Blue points shows where sonar would collide with collider red point at specific time. There can be multiple collision points. Directional Obstacle Directional shape obstacles usually used for limiting agent vision. bool success = sonar.InsertObstacle(obstacleDirection, obstacleRadius); With negative x direction and 180 degress Cleanup If you want to re-use the structure for next frame you can clear it. sonar.Clear() Or destroyed with dispose interface. sonar.Dispose();"
  },
  "manual/tutorials.html": {
    "href": "manual/tutorials.html",
    "title": "Tutorials",
    "keywords": "Tutorials This sections will contain some common tutorial requested by the users."
  },
  "manual/tutorials/astar-setup.html": {
    "href": "manual/tutorials/astar-setup.html",
    "title": "A* Pathfinding Project Setup",
    "keywords": "A* Pathfinding Project Setup Important This page explains the functionalities of the A* Pathfinding Project extension package. This tutorial will explain how to do minimal setup for agent crowd flow. Firstly, you will need to create a Astar Path . This will be the walkable surface area for your agents. Next, you need to create an agent. This can be done by right-clicking in Unity's Hierarchy View and selecting AI > Agent Cylinder/Circle . As this menu item creates minimal setup agent, you will need to add Agent Astar Pathing component that will enable agent to use astar pathing. For more details check Astar documentation ."
  },
  "manual/tutorials/crowds-setup.html": {
    "href": "manual/tutorials/crowds-setup.html",
    "title": "Crowds Setup",
    "keywords": "Crowds Setup Important This page explains the functionalities of the Agents Navigation - Crowds extension package. This tutorial will explain how to do minimal setup for agent crowd flow. Firstly, you will need to create a Crowd Surface . This will be the walkable surface area for your crowd agents. You can easily do this by right-clicking in Unity's Hierarchy View and selecting AI > Crowd Surface . If your project is 3D, it is recommended to rotate the surface by 90 degrees around the x-axis. Next, you will be creating a Crowd Group . This will represent a single group where agents will belong. You can easily do this by right-clicking in Unity's Hierarchy View and selecting AI > Crowd Group . Make sure it references your newly created surface. Now, you need to create an agent. This again can be done by right-clicking in Unity's Hierarchy View and selecting AI > Agent Cylinder/Circle . As this menu item creates minimal setup agent, you will need a few additional components to add. Agent Crowd Pathing will include the agent to participate in crowd flow with a specific group, and Agent Collider will enable collision with other nearby agents. Collider is needed because crowd pathing does not guarantee agents won't overlap in all cases. Finally, you need to set a goal for your crowd group. If the crowd group has Goal Source set to Agent Destination , the group will collect all its agent destinations and will construct a global goal out of it. For how to set agent destination, you can refer to another tutorial Set Destination . The alternative way is to pass goals array directly into the group. Hybrid: var goals = new float3[] { a, b, c }; var group = GetComponent<CrowdGroupAuthoring>(); group.SetGoals(goals) Entities: var goals = new float3[] { a, b, c }; var group = world.EntityManager.GetComponentData<CrowdGroupFlow>(entity); group.Flow.ClearGoals(); foreach (float3 goal in goals) { group.Flow.AddGoal(goal); }"
  },
  "manual/tutorials/custom-link-traversal.html": {
    "href": "manual/tutorials/custom-link-traversal.html",
    "title": "Custom Link Traversal",
    "keywords": "Custom Link Traversal Component Agent NavMesh Pathing has property Link Traversal that enables the agent to automatically traverse off-mesh links. By default, it uses its own locomotion to traverse it, but there is a way to create custom traversal of it. The whole agent navmesh link traversal data is contained in NavMeshLinkTraversal structure. In this tutorial, I will show how to create custom link traversal that does a parabolic jump instead of regular locomotion. This tutorial is recommended for those who are already familiar with navmesh and navmesh links . Important Tutorials may have code that does not compile and may be outdated. Their purpose here is to set you in the right direction. If you have questions, do not hesitate to reach the creator in the discord channel. Game Objects To get data of currently traversed link you need to access property AgentNavMeshAuthoring.EntityLinkTraversal . First of all, you will need to disable the default seeking; this can be done by setting Link Traversal Mode in component to Custom . Next in update we firstly need to check, if agent is currently traversing link. This can be done by checking Active property in NavMeshLinkTraversal . void Update() { // Skip, if not on active link if (!m_NavMesh.OnLinkTraversal) return; ... Finally, we do the actual parabolic interpolation. if (!m_Jumping) { // Start jumping sequence m_JumpTimeStamp = Time.realtimeSinceStartupAsDouble; m_Jumping = true; } else { float timeInAir = (float)((Time.realtimeSinceStartupAsDouble - m_JumpTimeStamp) / Duration); if (timeInAir > Duration) { // Finish link traversal m_NavMesh.OnLinkTraversal = false; m_Jumping = false; } else { // Do nice parabolic jump float progress = math.saturate(timeInAir / Duration); var seek = m_NavMesh.NavMeshLinkTraversal.Seek; float3 start = seek.Start.Left; float3 end = seek.End.Left; transform.position = ParabolicLerp(start, end, progress); } } Here is the full script. using ProjectDawn.Navigation.Hybrid; using Unity.Mathematics; using UnityEngine; public class AgentJump : MonoBehaviour { public float Duration = 1.0f; AgentNavMeshAuthoring m_NavMesh; bool m_Jumping; double m_JumpTimeStamp; void Start() { m_NavMesh = GetComponent<AgentNavMeshAuthoring>(); } void Update() { // Skip, if not on active link if (!m_NavMesh.OnLinkTraversal) return; if (!m_Jumping) { // Start jumping sequence m_JumpTimeStamp = Time.realtimeSinceStartupAsDouble; m_Jumping = true; } else { float timeInAir = (float)((Time.realtimeSinceStartupAsDouble - m_JumpTimeStamp) / Duration); if (timeInAir > Duration) { // Finish link traversal m_NavMesh.OnLinkTraversal = false; m_Jumping = false; } else { // Do nice parabolic jump float progress = math.saturate(timeInAir / Duration); var seek = m_NavMesh.NavMeshLinkTraversal.Seek; float3 start = seek.Start.Left; float3 end = seek.End.Left; transform.position = ParabolicLerp(start, end, progress); } } } // Generated by chatgpt static Vector3 ParabolicLerp(Vector3 pointA, Vector3 pointB, float lerpValue) { // Ensure lerpValue is clamped between 0 and 1 lerpValue = Mathf.Clamp01(lerpValue); // Calculate the control point position Vector3 controlPoint = CalculateControlPoint(pointA, pointB); // Perform quadratic Bezier interpolation return QuadraticBezier(pointA, controlPoint, pointB, lerpValue); } // Generated by chatgpt // Calculate the control point for quadratic Bezier curve static Vector3 CalculateControlPoint(Vector3 pointA, Vector3 pointB) { // Calculate the mid-point between pointA and pointB Vector3 midPoint = (pointA + pointB) / 2f; // Adjust the y-coordinate of the mid-point to form a parabolic curve midPoint.y = Mathf.Max(pointA.y, pointB.y) + Mathf.Abs(pointA.y - pointB.y) * 0.5f; return midPoint; } // Generated by chatgpt // Perform quadratic Bezier interpolation static Vector3 QuadraticBezier(Vector3 pointA, Vector3 controlPoint, Vector3 pointB, float t) { float u = 1f - t; float tt = t * t; float uu = u * u; Vector3 result = uu * pointA; result += 2 * u * t * controlPoint; result += tt * pointB; return result; } }"
  },
  "manual/tutorials/custom-locomotion.html": {
    "href": "manual/tutorials/custom-locomotion.html",
    "title": "Custom Locomotion",
    "keywords": "Custom Locomotion This tutorial will show you how to create a custom locomotion for your agents that mimics tank movement. It is also expected that you have a minimum knowledge about ECS and Unity's Job System. Important Tutorials may have code that does not compile and may be outdated. Their purpose here is to set you in the right direction. If you have questions, do not hesitate to reach creator in the discord channel. Entity Component The first script that you will be creating is the tank's locomotion entity component. This component will contain information about the tank's movement speed, acceleration, angular speed, stopping distance, and auto braking. This script is essentially a copy of the AgentLocomotion component. /// <summary> /// Tanks locomotion that moves towards destination with arrival. /// </summary> public struct TankLocomotion : IComponentData { /// <summary> /// Maximum movement speed when moving to destination. /// </summary> public float Speed; /// <summary> /// The maximum acceleration of an agent as it follows a path, given in units / sec^2. /// </summary> public float Acceleration; /// <summary> /// Maximum turning speed in (rad/s) while following a path. /// </summary> public float AngularSpeed; /// <summary> /// Stop within this distance from the target position. /// </summary> public float StoppingDistance; /// <summary> /// Should the agent brake automatically to avoid overshooting the destination point? /// </summary> public bool AutoBreaking; } Authoring Component The next script that you will be creating is the authoring component. The authoring component is a regular MonoBehaviour that serves the purpose of keeping serialized information about the entity component. The Awake and Destroy methods here are used by the hybrid path to create and destroy the entity component. The TankLocomotionBaker is used by the pure ECS path to bake the subscene. Most of the code in this component is boilerplate to support both paths, and typically, all authoring components share these methods. [RequireComponent(typeof(AgentAuthoring))] [DisallowMultipleComponent] public class TankLocomotionAuthoring : MonoBehaviour { [SerializeField] float Speed = 3.5f; [SerializeField] float Acceleration = 8; [SerializeField] float AngularSpeed = 120; [SerializeField] float StoppingDistance = 0; [SerializeField] bool AutoBreaking = true; Entity m_Entity; /// <summary> /// Returns default component of <see cref=\"TankLocomotion\"/>. /// </summary> public TankLocomotion DefaultLocomotion => new() { Speed = Speed, Acceleration = Acceleration, AngularSpeed = math.radians(AngularSpeed), StoppingDistance = StoppingDistance, AutoBreaking = AutoBreaking, }; void Awake() { var world = World.DefaultGameObjectInjectionWorld; m_Entity = GetComponent<AgentAuthoring>().GetOrCreateEntity(); world.EntityManager.AddComponentData(m_Entity, DefaultLocomotion); } void OnDestroy() { var world = World.DefaultGameObjectInjectionWorld; if (world != null) world.EntityManager.RemoveComponent<TankLocomotion>(m_Entity); } } internal class TankLocomotionBaker : Baker<TankLocomotionAuthoring> { public override void Bake(TankLocomotionAuthoring authoring) { AddComponent(GetEntity(TransformUsageFlags.Dynamic), authoring.DefaultLocomotion); } } Systems Finally, there will be two systems that will operate with our newly created TankLocomotion component. Seeking System The first system is the tank's seeking system. Its purpose is to set AgentBody.Force towards the destination. Usually, this system's AgentBody.Force will be overridden by navigation mesh systems, but in case it fails, it can fallback to this system. This is a copy of the AgentSeekingSystem with some minor changes. /// <summary> /// System that steers agent towards destination. /// </summary> [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSeekingSystemGroup))] public partial struct TankSeekingSystem : ISystem { [BurstCompile] public void OnUpdate(ref SystemState state) { new TankSteeringJob().ScheduleParallel(); } [BurstCompile] partial struct TankSteeringJob : IJobEntity { public void Execute(ref AgentBody body, in TankLocomotion locomotion, in LocalTransform transform) { if (body.IsStopped) return; float3 towards = body.Destination - transform.Position; float distance = math.length(towards); float3 desiredDirection = distance > math.EPSILON ? towards / distance : float3.zero; body.Force = desiredDirection; body.RemainingDistance = distance; } } } Locomotion System The second system is the tank's locomotion system. Its purpose is to move the agent towards the destination. This is a copy of the AgentLocomotionSystem with added logic that prevents agent movement if its facing direction and movement direction match within certain degrees. [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentLocomotionSystemGroup))] public partial struct TankLocomotionSystem : ISystem { [BurstCompile] public void OnUpdate(ref SystemState state) { new TankLocomotionJob { DeltaTime = state.WorldUnmanaged.Time.DeltaTime }.ScheduleParallel(); } [BurstCompile] partial struct TankLocomotionJob : IJobEntity { public float DeltaTime; public void Execute(ref LocalTransform transform, ref AgentBody body, in TankLocomotion locomotion, in AgentShape shape) { if (body.IsStopped) return; // Check, if we reached the destination float remainingDistance = body.RemainingDistance; if (remainingDistance <= locomotion.StoppingDistance + 1e-3f) { body.Velocity = 0; body.IsStopped = true; return; } float maxSpeed = locomotion.Speed; // Start breaking if close to destination if (locomotion.AutoBreaking) { float breakDistance = shape.Radius * 2 + locomotion.StoppingDistance; if (remainingDistance <= breakDistance) { maxSpeed = math.lerp(locomotion.Speed * 0.25f, locomotion.Speed, remainingDistance / breakDistance); } } // Force force to be maximum of unit length, but can be less float forceLength = math.length(body.Force); if (forceLength > 1) body.Force = body.Force / forceLength; // Update rotation if (shape.Type == ShapeType.Circle) { float angle = math.atan2(body.Velocity.x, body.Velocity.y); transform.Rotation = math.slerp(transform.Rotation, quaternion.RotateZ(-angle), DeltaTime * locomotion.AngularSpeed); } else if (shape.Type == ShapeType.Cylinder) { float angle = math.atan2(body.Velocity.x, body.Velocity.z); transform.Rotation = math.slerp(transform.Rotation, quaternion.RotateY(angle), DeltaTime * locomotion.AngularSpeed); } // Tank should only move, if facing direction and movement direction is within certain degrees float3 direction = math.normalizesafe(body.Velocity); float3 facing = math.mul(transform.Rotation, new float3(1, 0, 0)); if (math.dot(direction, facing) > math.radians(10)) { maxSpeed = 0; } // Interpolate velocity body.Velocity = math.lerp(body.Velocity, body.Force * maxSpeed, DeltaTime * locomotion.Acceleration); float speed = math.length(body.Velocity); // Early out if steps is going to be very small if (speed < 1e-3f) return; // Avoid over-stepping the destination if (speed * DeltaTime > remainingDistance) { transform.Position += (body.Velocity / speed) * remainingDistance; return; } // Update position transform.Position += DeltaTime * body.Velocity; } } } Agent Authoring The last thing you need to do is add your newly created steering component to the agent game object and set the Motion Type in the Agent component to Dynamic . This will ensure that the agent will use your custom steering component instead of the default one. Sample In the Scenarios sample, you can find the Tank Locomotion scene that showcases this custom locomotion behavior."
  },
  "manual/tutorials/modify-hybrid-property.html": {
    "href": "manual/tutorials/modify-hybrid-property.html",
    "title": "Modify Hybrid Property",
    "keywords": "Modify Hybrid Property This tutorial will explain how to modify agent runtime properties in a hybrid workflow (a.k.a. game objects). For simplicity, hybrid mono components will be referred to as authoring components. As the hybrid workflow internally runs entities for simulation, the runtime interaction with its properties is closely tied to entity logic. Each authoring component has getters and setters of its respective entity component. Usually, the property name starts with the Entity prefix. Speed For example, let's say you want to modify the Agent speed at runtime. To do this, you would check the AgentAuthoring component and for its property EntityLocomotion , it will contain fields related to locomotion, including the Speed . Note You might wonder why the field is not called EntityAgent . The reason is that the agent contains multiple entity components: Agent , AgentBody , and AgentLocomotion . Each of these components represents different logic it controls. This is quite a special case; other components tend to follow a similar naming convention between mono and entity components. Here is how it would look like in code. Notice that EntityLocomotion is a value type and not a reference type, meaning you will need to assign back your modified structure copy! var agent = GetComponent<AgentAuthoring>(); var locomotion = agent.EntityLocomotion; // Reads locomotion value into a copy locomotion.Speed = 10.0f; // Modifies the copy agent.EntityLocomotion = locomotion; // Writes back the locomotion value Important Accessing these entity properties will cause the main thread to wait for job threads to finish. It is recommended to minimize the usage of it. Also, do not mix these properties with other very similar ones that start with the Default prefix. These properties are tied to editor logic and are default configurations which will be used to create the underlying entity. var agent = GetComponent<AgentAuthoring>(); var locomotion = agent.DefaultLocomotion; // Reads editor locomotion value into a copy Debug.Log($\"My agent {agent} has an awake speed value of {locomotion.Speed}!\");"
  },
  "manual/tutorials/navmesh-setup.html": {
    "href": "manual/tutorials/navmesh-setup.html",
    "title": "NavMesh Setup",
    "keywords": "NavMesh Setup This tutorial will explain how to do minimal setup for NavMesh navigation. As this package reuses the baking process from Unity NavMesh, all information in terms of baking applies to this package too. Firstly, you will need to create a NavMeshSurface . This will be the walkable surface area for your agents. You can easily do this by right-clicking in Unity's Hierarchy View and selecting AI > NavMesh Surface . Now, you need to create an agent. This again can be done by right-clicking in Unity's Hierarchy View and selecting AI > Agent Cylinder/Circle . As this menu item creates a minimal setup agent, you will need a few additional components to add. Agent NavMesh Pathing will include the agent to participate in crowd flow with a specific group, and Agent Collider will enable collision with other nearby agents. Collider is needed because crowd pathing does not guarantee agents won't overlap in all cases. Finally, you need to set the destination of the agent. For how to set agent destination, you can refer to another tutorial Set Destination . Important For more details, check the AI Navigation package documentation."
  },
  "manual/tutorials/set-destination.html": {
    "href": "manual/tutorials/set-destination.html",
    "title": "Quick Start",
    "keywords": "Quick Start This package is set up to support both GameObject (using components that inherit MonoBehaviour class) and Entity (ECS package) workflows. Here is a quick start guide to get you started with each workflow. GameObjects Create a game object using the menu item \"GameObject > AI > Agent Cylinder\". Create a new script \"AgentSetDestination.cs\" and attach it to the agent game object. using UnityEngine; using ProjectDawn.Navigation.Hybrid; public class AgentSetDestination : MonoBehaviour { public Transform Target; void Start() { GetComponent<AgentAuthoring>().SetDestination(Target.position); } } Create another game object that will be used as a target for the script AgentSetDestination.cs , and assign it to the Target field. Finally, click play, and the agent should start moving towards the target. Note This minimal setup will only include the steering behavior and will not include any avoidance. Other Behaviors To add additional behaviors to the agent, you can add them as components to the agent game object. For more detailed information about each behavior, check the Game Objects section. Agent Collider : This component will enable collisions between agents. Agent Sonar Avoid : This component will enable avoidance between nearby agents using the Sonar Avoidance solution. Agent Nav Mesh : This component will enable the agent to navigate using Unity Nav Mesh. ... Entities Sub-scene Before jumping into this section, make sure you are familiar with Entities and Baking concepts and have Entities Graphics setup . Assuming you have already followed the previous section on Game Objects, you can now convert your game object agent to an entity agent. To do this, create a new sub-scene and add your Agent Cylinder and Destination game objects to it. Extend the previous script AgentSetDestination.cs with ECS component, baker, and system that will set the agent's destination using the AgentBody component. using UnityEngine; using ProjectDawn.Navigation.Hybrid; using Unity.Entities; using Unity.Mathematics; using ProjectDawn.Navigation; public class AgentSetDestination : MonoBehaviour { public Transform Target; void Start() { GetComponent<AgentAuthoring>().SetDestination(Target.position); } } // ECS component public struct SetDestination : IComponentData { public float3 Value; } // Bakes mono component into ecs component class AgentSetDestinationBaker : Baker<AgentSetDestination> { public override void Bake(AgentSetDestination authoring) { AddComponent(GetEntity(TransformUsageFlags.Dynamic), new SetDestination { Value = authoring.Target.position }); } } // Sets agents destination partial struct AgentSetDestinationSystem : ISystem { public void OnUpdate(ref SystemState systemState) { foreach (var (destination, body) in SystemAPI.Query<RefRO<SetDestination>, RefRW<AgentBody>>()) { body.ValueRW.SetDestination(destination.ValueRO.Value); } } } Finally, click play, and the agent should start moving towards the target. Entities Code This section will show you how to create an agent using code. This is useful when you want to create agents dynamically. var entity = EntityManager.CreateEntity(); // Agent tag is required for agent to work EntityManager.AddComponentData(entity, Agent.Default); // AgentBody for dynamic agents EntityManager.AddComponentData(entity, AgentBody.Default); // AgentLocomotion for moving EntityManager.AddComponentData(entity, AgentLocomotion.Default); // AgentShape for default cylinder shape EntityManager.AddComponentData(entity, AgentShape.Default); Note It is always recommended to use the sub-scene workflow when possible."
  },
  "manual/tutorials/vidoes.html": {
    "href": "manual/tutorials/vidoes.html",
    "title": "Videos",
    "keywords": "Videos Turbo Makes Games Important Sales information is outdated."
  }
}