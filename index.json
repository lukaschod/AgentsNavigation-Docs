{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome to the Scripting Reference!",
    "keywords": "Welcome to the Scripting Reference! Select the API to view the detail."
  },
  "api/ProjectDawn.LocalAvoidance.Circle.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Circle.html",
    "title": "Struct Circle",
    "keywords": "Struct Circle Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public struct Circle Constructors | Improve this Doc View Source Circle(float2, Single) Declaration public Circle(float2 point, float radius) Parameters Type Name Description Unity.Mathematics.float2 point System.Single radius Fields | Improve this Doc View Source Point Declaration public float2 Point Field Value Type Description Unity.Mathematics.float2 | Improve this Doc View Source Radius Declaration public float Radius Field Value Type Description System.Single Methods | Improve this Doc View Source Collide(Circle, Circle) Declaration public static bool Collide(Circle a, Circle b) Parameters Type Name Description Circle a Circle b Returns Type Description System.Boolean | Improve this Doc View Source TangentLineToCircleAngle(Single, Single) Declaration public static float TangentLineToCircleAngle(float circleRadius, float distanceFromCircle) Parameters Type Name Description System.Single circleRadius System.Single distanceFromCircle Returns Type Description System.Single"
  },
  "api/ProjectDawn.LocalAvoidance.html": {
    "href": "api/ProjectDawn.LocalAvoidance.html",
    "title": "Namespace ProjectDawn.LocalAvoidance",
    "keywords": "Namespace ProjectDawn.LocalAvoidance Classes Intersection SonarAvoidanceUtility Sonar avoidance utility class with some helpful functions. Structs Circle Line One dimension line segment. Line.CutResult SonarAvoidance This structure can be used for constructing local objet avoidance structure and finding the closest direction for it. It is composed of three main methods: Constructor, InsertObstacle and FindClosestDirection. Interfaces SonarAvoidance.IDrawArc Interface used to implement draw arc method. SonarAvoidance.IDrawCircle Interface used to implement draw circle method."
  },
  "api/ProjectDawn.LocalAvoidance.Intersection.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Intersection.html",
    "title": "Class Intersection",
    "keywords": "Class Intersection Inheritance System.Object Intersection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public class Intersection Methods | Improve this Doc View Source IntersectionOfCircleAndSegment(Circle, float2, float2, out float2, out float2) Declaration public static bool IntersectionOfCircleAndSegment(Circle circle, float2 segmentStart, float2 segmentEnd, out float2 intersectionStart, out float2 intersectionEnd) Parameters Type Name Description Circle circle Unity.Mathematics.float2 segmentStart Unity.Mathematics.float2 segmentEnd Unity.Mathematics.float2 intersectionStart Unity.Mathematics.float2 intersectionEnd Returns Type Description System.Boolean | Improve this Doc View Source IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, Single, out Line, out Line) Finds intersection angle range of two movings circles with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float speedB, float maxDistance, out Line angles, out Line times) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single speedB System.Single maxDistance Line angles Line times Returns Type Description System.Boolean | Improve this Doc View Source IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, Single, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB speed, angle. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float angleB, float speedB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single angleB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean | Improve this Doc View Source IntersectionOfTwoMovingCircles(Circle, float2, Circle, Single, out Single, out Single) Finds intersection times of two movings circles with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float speedB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean | Improve this Doc View Source IntersectionOfTwoMovingCircles(Circle, float2, Circle, float2, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB velocity. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingCircles(Circle circleA, float2 velocityA, Circle circleB, float2 velocityB, out float time0, out float time1) Parameters Type Name Description Circle circleA Unity.Mathematics.float2 velocityA Circle circleB Unity.Mathematics.float2 velocityB System.Single time0 System.Single time1 Returns Type Description System.Boolean | Improve this Doc View Source IntersectionOfTwoMovingPoints(float2, float2, float2, Single, out Single, out Single) Finds intersection times of two movings points with given pointA velocity and pointB speed. Returns true if intersection exists and also two solutions. Time values can be negative or even infinity. Declaration public static bool IntersectionOfTwoMovingPoints(float2 pointA, float2 velocityA, float2 pointB, float speedB, out float time0, out float time1) Parameters Type Name Description Unity.Mathematics.float2 pointA Unity.Mathematics.float2 velocityA Unity.Mathematics.float2 pointB System.Single speedB System.Single time0 System.Single time1 Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.LocalAvoidance.Line.CutResult.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Line.CutResult.html",
    "title": "Struct Line.CutResult",
    "keywords": "Struct Line.CutResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public struct CutResult Fields | Improve this Doc View Source Segment0 Declaration public Line Segment0 Field Value Type Description Line | Improve this Doc View Source Segment1 Declaration public Line Segment1 Field Value Type Description Line | Improve this Doc View Source SegmentCount Declaration public int SegmentCount Field Value Type Description System.Int32"
  },
  "api/ProjectDawn.LocalAvoidance.Line.html": {
    "href": "api/ProjectDawn.LocalAvoidance.Line.html",
    "title": "Struct Line",
    "keywords": "Struct Line One dimension line segment. Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax [Serializable] public struct Line Constructors | Improve this Doc View Source Line(Single, Single) Declaration public Line(float from, float to) Parameters Type Name Description System.Single from System.Single to Fields | Improve this Doc View Source From Position where segment starts. Must be lower than To . Declaration public float From Field Value Type Description System.Single | Improve this Doc View Source To Position where segment ends. Must be greated than From . Declaration public float To Field Value Type Description System.Single Properties | Improve this Doc View Source Length Length of segment from start to end. Declaration public float Length { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source CutLine(Line, Line, out Line.CutResult) Declaration public static bool CutLine(Line lhs, Line rhs, out Line.CutResult result) Parameters Type Name Description Line lhs Line rhs Line.CutResult result Returns Type Description System.Boolean | Improve this Doc View Source Equals(Line) Declaration public bool Equals(Line other) Parameters Type Name Description Line other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object compare) Parameters Type Name Description System.Object compare Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Line, Line) Declaration public static bool operator ==(Line lhs, Line rhs) Parameters Type Name Description Line lhs Line rhs Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Line, Line) Declaration public static bool operator !=(Line lhs, Line rhs) Parameters Type Name Description Line lhs Line rhs Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.html",
    "title": "Struct SonarAvoidance",
    "keywords": "Struct SonarAvoidance This structure can be used for constructing local objet avoidance structure and finding the closest direction for it. It is composed of three main methods: Constructor, InsertObstacle and FindClosestDirection. Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax [BurstCompile] public struct SonarAvoidance : IDisposable Constructors | Improve this Doc View Source SonarAvoidance(Allocator) Constructs sonar avoidance without properties. After this constructor you must call Set(float3, float3, float3, float3, Single, Single, Single) at least once to setup correct properties. Declaration public SonarAvoidance(Allocator allocator) Parameters Type Name Description Unity.Collections.Allocator allocator Allocator type Properties | Improve this Doc View Source InnerRadius Inner radius of sonar. Declaration public float InnerRadius { get; } Property Value Type Description System.Single | Improve this Doc View Source IsCreated True if structure is created. Declaration public bool IsCreated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OuterRadius Outer radius of sonar. Declaration public float OuterRadius { get; } Property Value Type Description System.Single | Improve this Doc View Source Position Position of sonar. Declaration public float3 Position { get; } Property Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source Rotation Rotation of sonar. Declaration public quaternion Rotation { get; } Property Value Type Description Unity.Mathematics.quaternion | Improve this Doc View Source Speed Speed of sonar. Declaration public float Speed { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clear() Remove all inserted obstacles. Declaration public void Clear() | Improve this Doc View Source CopyFrom(SonarAvoidance) Constructs copy of sonar avoidance. No memory is shared between copy and original. Declaration public void CopyFrom(in SonarAvoidance other) Parameters Type Name Description SonarAvoidance other Copies from | Improve this Doc View Source DirectionToRotation(float3, float3) This is almost same as Quaternion.LookRotation just uses forward as x axis instead of z. Declaration public static quaternion DirectionToRotation(float3 forward, float3 up) Parameters Type Name Description Unity.Mathematics.float3 forward Forward direction on x axis Unity.Mathematics.float3 up Up direction Returns Type Description Unity.Mathematics.quaternion | Improve this Doc View Source Dispose() Dispose implementation. Declaration public void Dispose() | Improve this Doc View Source DrawObstacleCircle<T>(T, float3, float3, Single, Int32) Draw sonar obstacle collision points. Use provided action to draw it. Declaration public void DrawObstacleCircle<T>(T action, float3 position, float3 velocity, float radius, int numIterations = 5) where T : struct, SonarAvoidance.IDrawCircle Parameters Type Name Description T action Structure used for drawing Unity.Mathematics.float3 position Position of obstacle Unity.Mathematics.float3 velocity Velocity of obstacle System.Single radius Radius of obstacle System.Int32 numIterations Number of iterations of obstacle collisions Type Parameters Name Description T The type of draw structure | Improve this Doc View Source DrawSonar<T>(T) Draws sonar that is not obstructed by obstacle. Use provided action to draw it. Declaration public void DrawSonar<T>(T action) where T : struct, SonarAvoidance.IDrawArc Parameters Type Name Description T action Structure used for drawing Type Parameters Name Description T The type of draw structure | Improve this Doc View Source FindClosestDirection(out float3) Finds closest desired direction that is not obstructed by obstacle. Declaration public bool FindClosestDirection(out float3 direction) Parameters Type Name Description Unity.Mathematics.float3 direction Closest direction found Returns Type Description System.Boolean True if direction was found | Improve this Doc View Source InsertObstacle(float3, Single) Inserts radius obstacle into sonar. Declaration public bool InsertObstacle(float3 direction, float radius) Parameters Type Name Description Unity.Mathematics.float3 direction Direction of obstacle from sonar System.Single radius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully | Improve this Doc View Source InsertObstacle(float3, float3, Single) Declaration [Obsolete(\"This method is obsolete, please use InsertObstacleCircle\")] public bool InsertObstacle(float3 obstaclePosition, float3 obstacleVelocity, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Unity.Mathematics.float3 obstacleVelocity System.Single obstacleRadius Returns Type Description System.Boolean | Improve this Doc View Source InsertObstacleCircle(float3, Single) Inserts sphere obstacle into sonar. Declaration public bool InsertObstacleCircle(float3 obstaclePosition, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Position of obstacle System.Single obstacleRadius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully | Improve this Doc View Source InsertObstacleCircle(float3, float3, Single) Inserts sphere obstacle into sonar. Declaration public bool InsertObstacleCircle(float3 obstaclePosition, float3 obstacleVelocity, float obstacleRadius) Parameters Type Name Description Unity.Mathematics.float3 obstaclePosition Position of obstacle Unity.Mathematics.float3 obstacleVelocity Velocity of obstacle (Zero can be used for non moving obstacle) System.Single obstacleRadius Radius of obstacle Returns Type Description System.Boolean True if obstacle was added successfully | Improve this Doc View Source InsertObstacleLine(float3, float3) Inserts line obstacle into sonar. Declaration public bool InsertObstacleLine(float3 obstacleStartPosition, float3 obstacleEndPosition) Parameters Type Name Description Unity.Mathematics.float3 obstacleStartPosition Start position of obstacle Unity.Mathematics.float3 obstacleEndPosition End position of obstacle Returns Type Description System.Boolean True if obstacle was added successfully | Improve this Doc View Source InsertObstacleLineIgnoreRadius(float3, float3) Inserts line obstacle into sonar without using the radius. Counter clockwise wall will be ignored. Declaration public bool InsertObstacleLineIgnoreRadius(float3 obstacleStartPosition, float3 obstacleEndPosition) Parameters Type Name Description Unity.Mathematics.float3 obstacleStartPosition Start position of obstacle Unity.Mathematics.float3 obstacleEndPosition End position of obstacle Returns Type Description System.Boolean True if obstacle was added successfully | Improve this Doc View Source Set(float3, float3, float3, float3, Single, Single, Single) Reconstructs sonar avoidance using position, direction and radius. Declaration public void Set(float3 position, float3 velocity, float3 direction, float3 up, float innerRadius, float outerRadius, float angle) Parameters Type Name Description Unity.Mathematics.float3 position Position of sonar Unity.Mathematics.float3 velocity Unity.Mathematics.float3 direction Direction of sonar. Note this is forward direction on x axis, not z like LookRotation uses Unity.Mathematics.float3 up Up direction System.Single innerRadius Minimum radius from which sonar will tracks obstacles and also used for path size System.Single outerRadius Maximum radius from which sonar will tracks obstacles System.Single angle | Improve this Doc View Source Set(float3, float3, quaternion, Single, Single, Single) Reconstructs sonar avoidance using position, direction and radius. Declaration public void Set(float3 position, float3 velocity, quaternion rotation, float innerRadius, float outerRadius, float angle) Parameters Type Name Description Unity.Mathematics.float3 position Position of sonar Unity.Mathematics.float3 velocity Unity.Mathematics.quaternion rotation Rotation of sonar System.Single innerRadius Minimum radius from which sonar will tracks obstacles and also used for path size System.Single outerRadius Maximum radius from which sonar will tracks obstacles System.Single angle | Improve this Doc View Source TryDirectionToRotation(float3, float3, out quaternion) This is almost same as Quaternion.LookRotation just uses forward as x axis instead of z. Declaration public static bool TryDirectionToRotation(float3 forward, float3 up, out quaternion rotation) Parameters Type Name Description Unity.Mathematics.float3 forward Forward direction on x axis Unity.Mathematics.float3 up Up direction Unity.Mathematics.quaternion rotation Returns Type Description System.Boolean Implements System.IDisposable Extension Methods SonarAvoidanceUtility.DrawSonar(SonarAvoidance) SonarAvoidanceUtility.DrawObstacleCircle(SonarAvoidance, float3, float3, Single, Int32) SonarAvoidanceUtility.DrawClosestDirection(SonarAvoidance)"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawArc.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawArc.html",
    "title": "Interface SonarAvoidance.IDrawArc",
    "keywords": "Interface SonarAvoidance.IDrawArc Interface used to implement draw arc method. Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public interface IDrawArc Methods | Improve this Doc View Source DrawArc(float3, float3, float3, float3, Single, Color) Declaration void DrawArc(float3 center, float3 normal, float3 from, float3 to, float angle, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from Unity.Mathematics.float3 to System.Single angle UnityEngine.Color color"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawCircle.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidance.IDrawCircle.html",
    "title": "Interface SonarAvoidance.IDrawCircle",
    "keywords": "Interface SonarAvoidance.IDrawCircle Interface used to implement draw circle method. Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public interface IDrawCircle Methods | Improve this Doc View Source DrawCircle(float3, float3, Single, Color) Declaration void DrawCircle(float3 center, float3 normal, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal System.Single radius UnityEngine.Color color"
  },
  "api/ProjectDawn.LocalAvoidance.SonarAvoidanceUtility.html": {
    "href": "api/ProjectDawn.LocalAvoidance.SonarAvoidanceUtility.html",
    "title": "Class SonarAvoidanceUtility",
    "keywords": "Class SonarAvoidanceUtility Sonar avoidance utility class with some helpful functions. Inheritance System.Object SonarAvoidanceUtility Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.LocalAvoidance Assembly : ProjectDawn.LocalAvoidance.dll Syntax public static class SonarAvoidanceUtility Methods | Improve this Doc View Source DrawClosestDirection(SonarAvoidance) Draws closest desired direction that is not obstructed by obstacle. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawClosestDirection(this SonarAvoidance sonar) Parameters Type Name Description SonarAvoidance sonar | Improve this Doc View Source DrawObstacleCircle(SonarAvoidance, float3, float3, Single, Int32) Draw sonar obstacle collision points. Use provided action to draw it. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawObstacleCircle(this SonarAvoidance sonar, float3 position, float3 velocity, float radius, int numIterations = 5) Parameters Type Name Description SonarAvoidance sonar Unity.Mathematics.float3 position Unity.Mathematics.float3 velocity System.Single radius System.Int32 numIterations | Improve this Doc View Source DrawSonar(SonarAvoidance) Draws sonar that is not obstructed by obstacle. Must be called inside and only works in Editor. Declaration [Conditional(\"UNITY_EDITOR\")] public static void DrawSonar(this SonarAvoidance sonar) Parameters Type Name Description SonarAvoidance sonar"
  },
  "api/ProjectDawn.Navigation.Agent.html": {
    "href": "api/ProjectDawn.Navigation.Agent.html",
    "title": "Struct Agent",
    "keywords": "Struct Agent Agent tag. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Agent : IComponentData, IQueryTypeParameter Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentBody.html": {
    "href": "api/ProjectDawn.Navigation.AgentBody.html",
    "title": "Struct AgentBody",
    "keywords": "Struct AgentBody Agent's body movement. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentBody : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Destination Destination that agent will attempt to reach. Declaration public float3 Destination Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source Force Force that agent will use to move towards. Calculated from agent position and destination. Declaration public float3 Force Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source IsStopped This property holds the stop or resume condition of the agent. Declaration public bool IsStopped Field Value Type Description System.Boolean | Improve this Doc View Source RemainingDistance The distance between the agent's position and the destination. With NavMesh this value will return partial remaining distance not full path. Declaration public float RemainingDistance Field Value Type Description System.Single | Improve this Doc View Source Velocity The velocity agent is moving. Declaration public float3 Velocity Field Value Type Description Unity.Mathematics.float3 Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentBody Default { get; } Property Value Type Description AgentBody Methods | Improve this Doc View Source SetDestination(float3) Sets properties for new agent destination. Declaration public void SetDestination(float3 value) Parameters Type Name Description Unity.Mathematics.float3 value | Improve this Doc View Source Stop() Sets properties for agent to stop. Declaration public void Stop() Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentCollider.html": {
    "href": "api/ProjectDawn.Navigation.AgentCollider.html",
    "title": "Struct AgentCollider",
    "keywords": "Struct AgentCollider This component tags, if agent should collide with nearby agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentCollider : IComponentData, IQueryTypeParameter Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentCollider Default { get; } Property Value Type Description AgentCollider Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentColliderSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentColliderSystem.html",
    "title": "Struct AgentColliderSystem",
    "keywords": "Struct AgentColliderSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateAfter(typeof(AgentTransformSystemGroup))] public struct AgentColliderSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentFlockSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentFlockSystem.html",
    "title": "Class AgentFlockSystem",
    "keywords": "Class AgentFlockSystem Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase AgentFlockSystem Inherited Members Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnCreate() Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.OnDestroy() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentForceSystemGroup))] [UpdateAfter(typeof(FlockGroupSystem))] public class AgentFlockSystem : SystemBase Methods | Improve this Doc View Source OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.AgentForceSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentForceSystem.html",
    "title": "Struct AgentForceSystem",
    "keywords": "Struct AgentForceSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentTransformSystemGroup))] public struct AgentForceSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentForceSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentForceSystemGroup.html",
    "title": "Class AgentForceSystemGroup",
    "keywords": "Class AgentForceSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentForceSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentSteeringSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentForceSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentReciprocalAvoid.html": {
    "href": "api/ProjectDawn.Navigation.AgentReciprocalAvoid.html",
    "title": "Struct AgentReciprocalAvoid",
    "keywords": "Struct AgentReciprocalAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentReciprocalAvoid : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Radius Declaration public float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source Default Declaration public static AgentReciprocalAvoid Default { get; } Property Value Type Description AgentReciprocalAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentReciprocalAvoidSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentReciprocalAvoidSystem.html",
    "title": "Struct AgentReciprocalAvoidSystem",
    "keywords": "Struct AgentReciprocalAvoidSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentReciprocalAvoidSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSeparation.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeparation.html",
    "title": "Struct AgentSeparation",
    "keywords": "Struct AgentSeparation Agent separation from nearby agents. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSeparation : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Radius Radius at which agent will attempt separate from each other. Declaration public float Radius Field Value Type Description System.Single | Improve this Doc View Source Weight The weight of the separation force. Declaration public float Weight Field Value Type Description System.Single Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentSeparation Default { get; } Property Value Type Description AgentSeparation Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSeparationSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSeparationSystem.html",
    "title": "Struct AgentSeparationSystem",
    "keywords": "Struct AgentSeparationSystem System that calculates separation direction from nearby agents. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentSeparationSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentShape.html": {
    "href": "api/ProjectDawn.Navigation.AgentShape.html",
    "title": "Struct AgentShape",
    "keywords": "Struct AgentShape Represents agent shape in space. In the future this component might be split into specific shape components instead of having one big generic. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentShape : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Height The height of the agent for purposes of passing under obstacles, etc. Declaration public float Height Field Value Type Description System.Single | Improve this Doc View Source Radius The radius of the agent. Declaration public float Radius Field Value Type Description System.Single | Improve this Doc View Source Type The type of shape. Declaration public ShapeType Type Field Value Type Description ShapeType Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentShape Default { get; } Property Value Type Description AgentShape Methods | Improve this Doc View Source GetUp() Returns up vector of shape. Declaration public float3 GetUp() Returns Type Description Unity.Mathematics.float3 Returns up vector of shape. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSmartStop.html": {
    "href": "api/ProjectDawn.Navigation.AgentSmartStop.html",
    "title": "Struct AgentSmartStop",
    "keywords": "Struct AgentSmartStop Agent smart stop to handle some common stuck scenarios. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSmartStop : IComponentData, IQueryTypeParameter, IEnableableComponent Fields | Improve this Doc View Source HiveMindStop This option allows agent to do smarter stop decision than moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. Declaration public HiveMindStop HiveMindStop Field Value Type Description HiveMindStop Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentSmartStop Default { get; } Property Value Type Description AgentSmartStop Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.AgentSonarAvoid.html": {
    "href": "api/ProjectDawn.Navigation.AgentSonarAvoid.html",
    "title": "Struct AgentSonarAvoid",
    "keywords": "Struct AgentSonarAvoid Agent avoidance of nearby agents using Sonar Avoidance algorithm. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSonarAvoid : IComponentData, IQueryTypeParameter, IEnableableComponent Fields | Improve this Doc View Source Angle The angle of obstacle inserted behind agent velocity. Declaration public float Angle Field Value Type Description System.Single | Improve this Doc View Source BlockedStop Whenever agent should stop if all directions are blocked. Declaration public bool BlockedStop Field Value Type Description System.Boolean | Improve this Doc View Source MaxAngle The maximum angle at which agent will attempt to nearby agents. Declaration public float MaxAngle Field Value Type Description System.Single | Improve this Doc View Source Mode Mode that modifies avoidance behaviour. Declaration public SonarAvoidMode Mode Field Value Type Description SonarAvoidMode | Improve this Doc View Source Radius The maximum distance at which agent will attempt to avoid nearby agents. Declaration public float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentSonarAvoid Default { get; } Property Value Type Description AgentSonarAvoid Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.AgentSonarAvoidSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSonarAvoidSystem.html",
    "title": "Struct AgentSonarAvoidSystem",
    "keywords": "Struct AgentSonarAvoidSystem System that calculates avoidance direction from nearby agents. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct AgentSonarAvoidSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.html",
    "title": "Struct AgentSpatialPartitioningSystem",
    "keywords": "Struct AgentSpatialPartitioningSystem Partitions agents into arbitary size cells. This allows to query nearby agents more efficiently. Space is partitioned using multi hash map. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateBefore(typeof(AgentForceSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public struct AgentSpatialPartitioningSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState systemState) Parameters Type Name Description Unity.Entities.SystemState systemState | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Settings.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Settings.html",
    "title": "Struct AgentSpatialPartitioningSystem.Settings",
    "keywords": "Struct AgentSpatialPartitioningSystem.Settings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Settings : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source CellSize Declaration public float3 CellSize Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source QueryCapacity Declaration public int QueryCapacity Field Value Type Description System.Int32 Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.AgentSpatialPartitioningSystem.Singleton.html",
    "title": "Struct AgentSpatialPartitioningSystem.Singleton",
    "keywords": "Struct AgentSpatialPartitioningSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Properties | Improve this Doc View Source QueryCapacity Declaration public int QueryCapacity { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source QueryCylinder<T>(float3, Single, Single, ref T) Query agents that intersect with the cylinder. Declaration public int QueryCylinder<T>(float3 center, float radius, float height, ref T action) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height T action Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source QueryCylindreBoxes<T>(float3, Single, Single, T) Query partitions that intersect with the cylinder. Declaration public int QueryCylindreBoxes<T>(float3 center, float radius, float height, T action) where T : struct, ISpatialQueryVolume Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height T action Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source QueryLine<T>(float3, float3, ref T) Query agents that intersect with the line. Declaration public int QueryLine<T>(float3 from, float3 to, ref T action) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 from Unity.Mathematics.float3 to T action Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source QueryProximityCylinderBoxes<T>(float3, Single, Single, Int32, T) Query agents that intersect with the cylinder. Declaration public int QueryProximityCylinderBoxes<T>(float3 center, float radius, float height, int maxCount, T action) where T : struct, ISpatialQueryVolume Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius System.Single height System.Int32 maxCount T action Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source QuerySphere<T>(float3, Single, ref T) Query agents that intersect with the sphere. Declaration public int QuerySphere<T>(float3 center, float radius, ref T action) where T : struct, ISpatialQueryEntity Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius T action Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source QuerySphereBoxes<T>(float3, Single, T) Query partitions that intersect with the sphere. Declaration public int QuerySphereBoxes<T>(float3 center, float radius, T action) where T : struct, ISpatialQueryVolume Parameters Type Name Description Unity.Mathematics.float3 center System.Single radius T action Returns Type Description System.Int32 Type Parameters Name Description T Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSteering.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteering.html",
    "title": "Struct AgentSteering",
    "keywords": "Struct AgentSteering Agent's steering towards destination with arrival. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct AgentSteering : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Acceleration The maximum acceleration of an agent as it follows a path, given in units / sec^2. Declaration public float Acceleration Field Value Type Description System.Single | Improve this Doc View Source AngularSpeed Maximum turning speed in (rad/s) while following a path. Declaration public float AngularSpeed Field Value Type Description System.Single | Improve this Doc View Source AutoBreaking Should the agent brake automatically to avoid overshooting the destination point? Declaration public bool AutoBreaking Field Value Type Description System.Boolean | Improve this Doc View Source Speed Maximum movement speed when moving to destination. Declaration public float Speed Field Value Type Description System.Single | Improve this Doc View Source StoppingDistance Stop within this distance from the target position. Declaration public float StoppingDistance Field Value Type Description System.Single Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static AgentSteering Default { get; } Property Value Type Description AgentSteering Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.AgentSteeringSystem.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteeringSystem.html",
    "title": "Struct AgentSteeringSystem",
    "keywords": "Struct AgentSteeringSystem System that steers agent towards destination. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSteeringSystemGroup))] public struct AgentSteeringSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.AgentSteeringSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSteeringSystemGroup.html",
    "title": "Class AgentSteeringSystemGroup",
    "keywords": "Class AgentSteeringSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSteeringSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentSteeringSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentSystemGroup.html",
    "title": "Class AgentSystemGroup",
    "keywords": "Class AgentSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(FixedStepSimulationSystemGroup))] public class AgentSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.AgentTransformSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.AgentTransformSystemGroup.html",
    "title": "Class AgentTransformSystemGroup",
    "keywords": "Class AgentTransformSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentTransformSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateAfter(typeof(AgentForceSystemGroup))] [UpdateInGroup(typeof(AgentSystemGroup))] public class AgentTransformSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.DrawGizmos.html": {
    "href": "api/ProjectDawn.Navigation.DrawGizmos.html",
    "title": "Struct DrawGizmos",
    "keywords": "Struct DrawGizmos Tag for drawing gizmos. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct DrawGizmos : IComponentData, IQueryTypeParameter Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Editor.AgentAvoidGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentAvoidGizmosSystem.html",
    "title": "Struct AgentAvoidGizmosSystem",
    "keywords": "Struct AgentAvoidGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentGizmosSystemGroup))] public struct AgentAvoidGizmosSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.AgentColliderGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentColliderGizmosSystem.html",
    "title": "Struct AgentColliderGizmosSystem",
    "keywords": "Struct AgentColliderGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [DisableAutoCreation] [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentGizmosSystemGroup))] public struct AgentColliderGizmosSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.AgentGizmosSystemGroup.html": {
    "href": "api/ProjectDawn.Navigation.Editor.AgentGizmosSystemGroup.html",
    "title": "Class AgentGizmosSystemGroup",
    "keywords": "Class AgentGizmosSystemGroup Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase Unity.Entities.ComponentSystemGroup AgentGizmosSystemGroup Inherited Members Unity.Entities.ComponentSystemGroup.GetUnmanagedSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.GetAllSystems(Unity.Collections.Allocator) Unity.Entities.ComponentSystemGroup.OnCreate() Unity.Entities.ComponentSystemGroup.OnDestroy() Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.AddSystemToUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.ComponentSystemBase) Unity.Entities.ComponentSystemGroup.RemoveSystemFromUpdateList(Unity.Entities.SystemHandle) Unity.Entities.ComponentSystemGroup.SortSystems() Unity.Entities.ComponentSystemGroup.SetRateManagerCreateAllocator(Unity.Entities.IRateManager) Unity.Entities.ComponentSystemGroup.OnUpdate() Unity.Entities.ComponentSystemGroup.EnableSystemSorting Unity.Entities.ComponentSystemGroup.Created Unity.Entities.ComponentSystemGroup.ManagedSystems Unity.Entities.ComponentSystemGroup.FixedRateManager Unity.Entities.ComponentSystemGroup.RateManager Unity.Entities.ComponentSystemGroup.RateGroupAllocators Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax public class AgentGizmosSystemGroup : ComponentSystemGroup"
  },
  "api/ProjectDawn.Navigation.Editor.html": {
    "href": "api/ProjectDawn.Navigation.Editor.html",
    "title": "Namespace ProjectDawn.Navigation.Editor",
    "keywords": "Namespace ProjectDawn.Navigation.Editor Classes AgentGizmosSystemGroup Structs AgentAvoidGizmosSystem AgentColliderGizmosSystem NavMeshBoundaryGizmosSystem NavMeshNodesGizmosSystem"
  },
  "api/ProjectDawn.Navigation.Editor.NavMeshBoundaryGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.NavMeshBoundaryGizmosSystem.html",
    "title": "Struct NavMeshBoundaryGizmosSystem",
    "keywords": "Struct NavMeshBoundaryGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentGizmosSystemGroup))] public struct NavMeshBoundaryGizmosSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Editor.NavMeshNodesGizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.Editor.NavMeshNodesGizmosSystem.html",
    "title": "Struct NavMeshNodesGizmosSystem",
    "keywords": "Struct NavMeshNodesGizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Editor Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentGizmosSystemGroup))] public struct NavMeshNodesGizmosSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.FlockEntity.html": {
    "href": "api/ProjectDawn.Navigation.FlockEntity.html",
    "title": "Struct FlockEntity",
    "keywords": "Struct FlockEntity Single entity of the FlockGroup . Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct FlockEntity : IBufferElementData Fields | Improve this Doc View Source Value Declaration public Entity Value Field Value Type Description Unity.Entities.Entity Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.FlockGroup.html": {
    "href": "api/ProjectDawn.Navigation.FlockGroup.html",
    "title": "Struct FlockGroup",
    "keywords": "Struct FlockGroup Agent group for flocking. Modifies desired direction to match flock direction. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct FlockGroup : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Alignment Scaler of alignment. Declaration public float Alignment Field Value Type Description System.Single | Improve this Doc View Source AverageDirection Average direction of the flock. Declaration public float3 AverageDirection Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source AveragePositions Average position of the flock. Declaration public float3 AveragePositions Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source Cohesion Scaler of cohesion. Declaration public float Cohesion Field Value Type Description System.Single | Improve this Doc View Source LeaderEntity Leader of the flock. Declaration public Entity LeaderEntity Field Value Type Description Unity.Entities.Entity | Improve this Doc View Source Radius Maximum radius of the flock from leader. Declaration public float Radius Field Value Type Description System.Single Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.FlockGroupSystem.html": {
    "href": "api/ProjectDawn.Navigation.FlockGroupSystem.html",
    "title": "Struct FlockGroupSystem",
    "keywords": "Struct FlockGroupSystem System that calculates flock grouo average position and direction of flock entities. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentForceSystemGroup))] public struct FlockGroupSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.GeometryUtils.html": {
    "href": "api/ProjectDawn.Navigation.GeometryUtils.html",
    "title": "Class GeometryUtils",
    "keywords": "Class GeometryUtils Inheritance System.Object GeometryUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public class GeometryUtils Methods | Improve this Doc View Source SegmentSegmentCPA(out float3, out float3, float3, float3, float3, float3) Declaration public static bool SegmentSegmentCPA(out float3 c0, out float3 c1, float3 p0, float3 p1, float3 q0, float3 q1) Parameters Type Name Description Unity.Mathematics.float3 c0 Unity.Mathematics.float3 c1 Unity.Mathematics.float3 p0 Unity.Mathematics.float3 p1 Unity.Mathematics.float3 q0 Unity.Mathematics.float3 q1 Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.GizmosCommandBuffer.html": {
    "href": "api/ProjectDawn.Navigation.GizmosCommandBuffer.html",
    "title": "Struct GizmosCommandBuffer",
    "keywords": "Struct GizmosCommandBuffer Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct GizmosCommandBuffer : IDisposable Constructors | Improve this Doc View Source GizmosCommandBuffer(Allocator) Declaration public GizmosCommandBuffer(Allocator allocator) Parameters Type Name Description Unity.Collections.Allocator allocator Methods | Improve this Doc View Source AsParallelWriter() An extension of EntityCommandBuffer that allows concurrent (deterministic) command buffer recording. Declaration public GizmosCommandBuffer.ParallelWriter AsParallelWriter() Returns Type Description GizmosCommandBuffer.ParallelWriter The GizmosCommandBuffer.ParallelWriter that can be used to record commands in parallel. | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Execute() Declaration public void Execute() Implements System.IDisposable"
  },
  "api/ProjectDawn.Navigation.GizmosCommandBuffer.ParallelWriter.html": {
    "href": "api/ProjectDawn.Navigation.GizmosCommandBuffer.ParallelWriter.html",
    "title": "Struct GizmosCommandBuffer.ParallelWriter",
    "keywords": "Struct GizmosCommandBuffer.ParallelWriter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct ParallelWriter Constructors | Improve this Doc View Source ParallelWriter(NativeList<Byte>) Declaration public ParallelWriter(NativeList<byte> commands) Parameters Type Name Description Unity.Collections.NativeList < System.Byte > commands Methods | Improve this Doc View Source DrawAAConvexPolygon(NativeArray<float3>, Color, Boolean) Declaration public void DrawAAConvexPolygon(NativeArray<float3> vertices, Color color, bool zTest = false) Parameters Type Name Description Unity.Collections.NativeArray < Unity.Mathematics.float3 > vertices UnityEngine.Color color System.Boolean zTest | Improve this Doc View Source DrawArrow(float3, float3, Single, Color) Declaration public void DrawArrow(float3 origin, float3 direction, float size, Color color) Parameters Type Name Description Unity.Mathematics.float3 origin Unity.Mathematics.float3 direction System.Single size UnityEngine.Color color | Improve this Doc View Source DrawLine(float3, float3, Color) Declaration public void DrawLine(float3 from, float3 to, Color color) Parameters Type Name Description Unity.Mathematics.float3 from Unity.Mathematics.float3 to UnityEngine.Color color | Improve this Doc View Source DrawQuad(float3, float3, float3, float3, Color, Boolean) Declaration public void DrawQuad(float3 a, float3 b, float3 c, float3 d, Color color, bool zTest = false) Parameters Type Name Description Unity.Mathematics.float3 a Unity.Mathematics.float3 b Unity.Mathematics.float3 c Unity.Mathematics.float3 d UnityEngine.Color color System.Boolean zTest | Improve this Doc View Source DrawSolidArc(float3, float3, float3, Single, Single, Color) Declaration public void DrawSolidArc(float3 center, float3 normal, float3 from, float angle, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from System.Single angle System.Single radius UnityEngine.Color color | Improve this Doc View Source DrawSolidDisc(float3, float3, Single, Color) Declaration public void DrawSolidDisc(float3 center, float3 normal, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal System.Single radius UnityEngine.Color color | Improve this Doc View Source DrawWireArc(float3, float3, float3, Single, Single, Color) Declaration public void DrawWireArc(float3 center, float3 normal, float3 from, float angle, float radius, Color color) Parameters Type Name Description Unity.Mathematics.float3 center Unity.Mathematics.float3 normal Unity.Mathematics.float3 from System.Single angle System.Single radius UnityEngine.Color color | Improve this Doc View Source DrawWireBox(float3, float3, Color) Declaration public void DrawWireBox(float3 position, float3 size, Color color) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 size UnityEngine.Color color"
  },
  "api/ProjectDawn.Navigation.GizmosSystem.html": {
    "href": "api/ProjectDawn.Navigation.GizmosSystem.html",
    "title": "Struct GizmosSystem",
    "keywords": "Struct GizmosSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax [BurstCompile] [UpdateInGroup(typeof(InitializationSystemGroup))] public struct GizmosSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.GizmosSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.GizmosSystem.Singleton.html",
    "title": "Struct GizmosSystem.Singleton",
    "keywords": "Struct GizmosSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.Editor.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source CreateCommandBuffer() Declaration public GizmosCommandBuffer CreateCommandBuffer() Returns Type Description GizmosCommandBuffer | Improve this Doc View Source ExecuteCommandBuffers() Declaration public void ExecuteCommandBuffers() Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.HiveMindStop.html": {
    "href": "api/ProjectDawn.Navigation.HiveMindStop.html",
    "title": "Struct HiveMindStop",
    "keywords": "Struct HiveMindStop This option allows agent to do smarter stop decision than moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Serializable] public struct HiveMindStop Fields | Improve this Doc View Source Enabled Declaration public bool Enabled Field Value Type Description System.Boolean | Improve this Doc View Source Radius Radius at which agent will assume similarity of the distance. Declaration [Tooltip(\"Radius at which agent will assume similarity of the distance.\")] public float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static HiveMindStop Default { get; } Property Value Type Description HiveMindStop"
  },
  "api/ProjectDawn.Navigation.html": {
    "href": "api/ProjectDawn.Navigation.html",
    "title": "Namespace ProjectDawn.Navigation",
    "keywords": "Namespace ProjectDawn.Navigation Classes AgentFlockSystem AgentForceSystemGroup AgentSteeringSystemGroup AgentSystemGroup AgentTransformSystemGroup GeometryUtils NavMeshDataSystem PathUtils Structs Agent Agent tag. AgentBody Agent's body movement. AgentCollider This component tags, if agent should collide with nearby agents. AgentColliderSystem AgentForceSystem AgentReciprocalAvoid AgentReciprocalAvoidSystem AgentSeparation Agent separation from nearby agents. AgentSeparationSystem System that calculates separation direction from nearby agents. AgentShape Represents agent shape in space. In the future this component might be split into specific shape components instead of having one big generic. AgentSmartStop Agent smart stop to handle some common stuck scenarios. AgentSonarAvoid Agent avoidance of nearby agents using Sonar Avoidance algorithm. AgentSonarAvoidSystem System that calculates avoidance direction from nearby agents. AgentSpatialPartitioningSystem Partitions agents into arbitary size cells. This allows to query nearby agents more efficiently. Space is partitioned using multi hash map. AgentSpatialPartitioningSystem.Settings AgentSpatialPartitioningSystem.Singleton AgentSteering Agent's steering towards destination with arrival. AgentSteeringSystem System that steers agent towards destination. DrawGizmos Tag for drawing gizmos. FlockEntity Single entity of the FlockGroup . FlockGroup Agent group for flocking. Modifies desired direction to match flock direction. FlockGroupSystem System that calculates flock grouo average position and direction of flock entities. GizmosCommandBuffer GizmosCommandBuffer.ParallelWriter GizmosSystem GizmosSystem.Singleton HiveMindStop This option allows agent to do smarter stop decision than moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. NavMeshBoundary Represents a boundary on the navigation mesh. NavMeshBoundarySystem System that for each agent that has sonar with wall collects nearby navmesh edges as walls. Later on these walls are used for avoidance. NavMeshData NavMeshDataInstance NavMeshFunnel Used for creating optimal path from navmesh polygons. NavMeshNode Agent NavMesh single node of path. NavMeshPath Agent NavMesh path. NavMeshPathSystem System that controls agent NavMesh path. NavMeshPositionSystem System that forces agents to stay within NavMesh surface. NavMeshQueryHandle Represents handle of NavMeshQuery used by NavMeshQuerySystem . NavMeshQuerySystem System for requesting NavMesh path. NavMeshQuerySystem.Settings NavMeshQuerySystem.Singleton NavMeshSteeringSystem System that steers agents within the NavMesh path. NavMeshWall Represents a wall on the navigation mesh. Interfaces ISpatialQueryEntity ISpatialQueryVolume Enums NavMeshPathState State of the path. NavMeshQueryStatus The status of navmesh query. ShapeType SonarAvoidMode Modifications of sonar avoidance funcionality. StraightPathFlags"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentAuthoring.html",
    "title": "Class AgentAuthoring",
    "keywords": "Class AgentAuthoring Main component of agent that enables motion. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour AgentAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Agent\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentAuthoring : EntityBehaviour Fields | Improve this Doc View Source Acceleration Declaration [SerializeField] protected float Acceleration Field Value Type Description System.Single | Improve this Doc View Source AngularSpeed Declaration [SerializeField] protected float AngularSpeed Field Value Type Description System.Single | Improve this Doc View Source AutoBreaking Declaration [SerializeField] protected bool AutoBreaking Field Value Type Description System.Boolean | Improve this Doc View Source Speed Declaration [SerializeField] protected float Speed Field Value Type Description System.Single | Improve this Doc View Source StoppingDistance Declaration [SerializeField] protected float StoppingDistance Field Value Type Description System.Single Properties | Improve this Doc View Source DefaultBody Returns default component of AgentBody . Declaration public AgentBody DefaultBody { get; } Property Value Type Description AgentBody | Improve this Doc View Source DefaultSteering Returns default component of AgentSteering . Declaration public AgentSteering DefaultSteering { get; } Property Value Type Description AgentSteering | Improve this Doc View Source EntityBody AgentBody component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentBody EntityBody { get; set; } Property Value Type Description AgentBody | Improve this Doc View Source EntitySteering AgentSteering component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSteering EntitySteering { get; set; } Property Value Type Description AgentSteering | Improve this Doc View Source HasEntityBody Returns true if AgentAuthoring entity has AgentBody . Declaration public bool HasEntityBody { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasEntitySteering Returns true if AgentAuthoring entity has AgentSteering . Declaration public bool HasEntitySteering { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source SetDestination(float3) Sets or updates the destination thus triggering the calculation for a new path. Calling this method is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public void SetDestination(float3 target) Parameters Type Name Description Unity.Mathematics.float3 target | Improve this Doc View Source SetDestinationDeferred(float3) Sets or updates the destination thus triggering the calculation for a new path. This call is deferred and destination will only changed later in the frame. Declaration public void SetDestinationDeferred(float3 destination) Parameters Type Name Description Unity.Mathematics.float3 destination | Improve this Doc View Source Stop() Stop agent movement. Calling this method is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public void Stop()"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentAvoidAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentAvoidAuthoring.html",
    "title": "Class AgentAvoidAuthoring",
    "keywords": "Class AgentAvoidAuthoring Agent avoidance of nearby agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentAvoidAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Sonar Avoid\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentAvoidAuthoring : MonoBehaviour Fields | Improve this Doc View Source Angle Declaration [SerializeField] [Range(0F, 360F)] protected float Angle Field Value Type Description System.Single | Improve this Doc View Source BlockedStop Declaration [SerializeField] protected bool BlockedStop Field Value Type Description System.Boolean | Improve this Doc View Source MaxAngle Declaration [SerializeField] [Range(0F, 360F)] protected float MaxAngle Field Value Type Description System.Single | Improve this Doc View Source Mode Declaration [SerializeField] protected SonarAvoidMode Mode Field Value Type Description SonarAvoidMode | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single | Improve this Doc View Source UseWalls Declaration [SerializeField] protected bool UseWalls Field Value Type Description System.Boolean Properties | Improve this Doc View Source DefaultAvoid Returns default component of AgentSonarAvoid . Declaration public AgentSonarAvoid DefaultAvoid { get; } Property Value Type Description AgentSonarAvoid | Improve this Doc View Source EntityAvoid AgentSonarAvoid component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSonarAvoid EntityAvoid { get; set; } Property Value Type Description AgentSonarAvoid | Improve this Doc View Source HasEntityAvoid Returns true if AgentAuthoring entity has AgentSonarAvoid . Declaration public bool HasEntityAvoid { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentCircleShapeAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentCircleShapeAuthoring.html",
    "title": "Class AgentCircleShapeAuthoring",
    "keywords": "Class AgentCircleShapeAuthoring Agent circle shape. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentCircleShapeAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Circle Shape\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentCircleShapeAuthoring : MonoBehaviour Fields | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source DefaultShape Returns default component of AgentShape . Declaration public AgentShape DefaultShape { get; } Property Value Type Description AgentShape | Improve this Doc View Source EntityShape AgentShape component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentShape EntityShape { get; set; } Property Value Type Description AgentShape | Improve this Doc View Source HasEntityShape Returns true if AgentAuthoring entity has AgentShape . Declaration public bool HasEntityShape { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentColliderAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentColliderAuthoring.html",
    "title": "Class AgentColliderAuthoring",
    "keywords": "Class AgentColliderAuthoring Enables collisio with other agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentColliderAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Collider\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentColliderAuthoring : MonoBehaviour"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentCylinderShapeAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentCylinderShapeAuthoring.html",
    "title": "Class AgentCylinderShapeAuthoring",
    "keywords": "Class AgentCylinderShapeAuthoring Agent cylindre shape. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentCylinderShapeAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Cylinder Shape\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentCylinderShapeAuthoring : MonoBehaviour Fields | Improve this Doc View Source Height Declaration [SerializeField] protected float Height Field Value Type Description System.Single | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source DefaultShape Returns default component of AgentShape . Declaration public AgentShape DefaultShape { get; } Property Value Type Description AgentShape | Improve this Doc View Source EntityShape AgentShape component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentShape EntityShape { get; set; } Property Value Type Description AgentShape | Improve this Doc View Source HasEntityShape Returns true if AgentAuthoring entity has AgentShape . Declaration public bool HasEntityShape { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentMotionType.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentMotionType.html",
    "title": "Enum AgentMotionType",
    "keywords": "Enum AgentMotionType Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public enum AgentMotionType Fields Name Description Dynamic Agent is dynamic. It's entity will not have AgentSteering component. Static Agent is static. It's entity will not have AgentBody and AgentSteering components. Steering Agent is dynamic. It's entity will have have AgentBody and AgentSteering components."
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentNavMeshAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentNavMeshAuthoring.html",
    "title": "Class AgentNavMeshAuthoring",
    "keywords": "Class AgentNavMeshAuthoring Agent uses NavMesh for pathfinding. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentNavMeshAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Nav Mesh\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentNavMeshAuthoring : MonoBehaviour Fields | Improve this Doc View Source AgentTypeId Declaration [SerializeField] protected int AgentTypeId Field Value Type Description System.Int32 | Improve this Doc View Source AreaMask Declaration [SerializeField] protected int AreaMask Field Value Type Description System.Int32 | Improve this Doc View Source AutoRepath Declaration [SerializeField] protected bool AutoRepath Field Value Type Description System.Boolean | Improve this Doc View Source MappingExtent Declaration [SerializeField] protected float3 MappingExtent Field Value Type Description Unity.Mathematics.float3 Properties | Improve this Doc View Source DefaulPath Returns default component of NavMeshPath . Declaration public NavMeshPath DefaulPath { get; } Property Value Type Description NavMeshPath | Improve this Doc View Source EntityNodes NavMeshNode component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public DynamicBuffer<NavMeshNode> EntityNodes { get; } Property Value Type Description Unity.Entities.DynamicBuffer < NavMeshNode > | Improve this Doc View Source EntityPath NavMeshPath component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public NavMeshPath EntityPath { get; set; } Property Value Type Description NavMeshPath | Improve this Doc View Source HasEntityPath Returns true if AgentAuthoring entity has NavMeshPath . Declaration public bool HasEntityPath { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentReciprocalAvoidAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentReciprocalAvoidAuthoring.html",
    "title": "Class AgentReciprocalAvoidAuthoring",
    "keywords": "Class AgentReciprocalAvoidAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentReciprocalAvoidAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Reciprocal Avoid (Experimental)\")] [DisallowMultipleComponent] public class AgentReciprocalAvoidAuthoring : MonoBehaviour Fields | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source DefaultAvoid Returns default component of AgentReciprocalAvoid . Declaration public AgentReciprocalAvoid DefaultAvoid { get; } Property Value Type Description AgentReciprocalAvoid | Improve this Doc View Source EntityAvoid AgentReciprocalAvoid component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentReciprocalAvoid EntityAvoid { get; set; } Property Value Type Description AgentReciprocalAvoid | Improve this Doc View Source HasEntityAvoid Returns true if AgentAuthoring entity has AgentReciprocalAvoid . Declaration public bool HasEntityAvoid { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSeparationAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSeparationAuthoring.html",
    "title": "Class AgentSeparationAuthoring",
    "keywords": "Class AgentSeparationAuthoring Agent separation from nearby agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentSeparationAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Separation\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class AgentSeparationAuthoring : MonoBehaviour Fields | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single | Improve this Doc View Source Weight Declaration [SerializeField] [Range(0F, 1F)] protected float Weight Field Value Type Description System.Single Properties | Improve this Doc View Source DefaulSeparation Returns default component of AgentSeparation . Declaration public AgentSeparation DefaulSeparation { get; } Property Value Type Description AgentSeparation | Improve this Doc View Source EntitySeparation AgentSeparation component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSeparation EntitySeparation { get; set; } Property Value Type Description AgentSeparation | Improve this Doc View Source HasEntitySeparation Returns true if AgentAuthoring entity has AgentSeparation . Declaration public bool HasEntitySeparation { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.html",
    "title": "Struct AgentSetDestinationDeferredSystem",
    "keywords": "Struct AgentSetDestinationDeferredSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [UpdateInGroup(typeof(InitializationSystemGroup))] public struct AgentSetDestinationDeferredSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSetDestinationDeferredSystem.Singleton.html",
    "title": "Struct AgentSetDestinationDeferredSystem.Singleton",
    "keywords": "Struct AgentSetDestinationDeferredSystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Methods | Improve this Doc View Source SetDestinationDeferred(Entity, float3) Declaration public void SetDestinationDeferred(Entity entity, float3 destination) Parameters Type Name Description Unity.Entities.Entity entity Unity.Mathematics.float3 destination Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.Hybrid.AgentSmartStopAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.AgentSmartStopAuthoring.html",
    "title": "Class AgentSmartStopAuthoring",
    "keywords": "Class AgentSmartStopAuthoring Enables collisio with other agents. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AgentSmartStopAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [RequireComponent(typeof(AgentAuthoring))] [AddComponentMenu(\"Agents Navigation/Agent Smart Stop\")] [DisallowMultipleComponent] public class AgentSmartStopAuthoring : MonoBehaviour Fields | Improve this Doc View Source m_HiveMindStop This option allows agent to do smarter stop decision than moving in group. It works under assumption that by reaching nearby agent that is already idle and have similar destination it can stop as destination is reached. Declaration [SerializeField] protected HiveMindStop m_HiveMindStop Field Value Type Description HiveMindStop Properties | Improve this Doc View Source DefaulSmartStop Returns default component of AgentSeparation . Declaration public AgentSmartStop DefaulSmartStop { get; } Property Value Type Description AgentSmartStop | Improve this Doc View Source EntitySmartStop AgentSmartStop component of this AgentAuthoring Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public AgentSmartStop EntitySmartStop { get; set; } Property Value Type Description AgentSmartStop | Improve this Doc View Source HasEntitySmartStop Returns true if AgentAuthoring entity has AgentSmartStop . Declaration public bool HasEntitySmartStop { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.Editor.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.Editor.html",
    "title": "Namespace ProjectDawn.Navigation.Hybrid.Editor",
    "keywords": "Namespace ProjectDawn.Navigation.Hybrid.Editor Classes ScriptingDefineToggleField"
  },
  "api/ProjectDawn.Navigation.Hybrid.Editor.ScriptingDefineToggleField.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.Editor.ScriptingDefineToggleField.html",
    "title": "Class ScriptingDefineToggleField",
    "keywords": "Class ScriptingDefineToggleField Inheritance System.Object ScriptingDefineToggleField Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Hybrid.Editor Assembly : ProjectDawn.Navigation.Hybrid.Editor.dll Syntax public static class ScriptingDefineToggleField Methods | Improve this Doc View Source Draw(GUIContent, String) Declaration public static bool Draw(GUIContent label, string defineSymbol) Parameters Type Name Description UnityEngine.GUIContent label System.String defineSymbol Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.EntityBehaviour.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.EntityBehaviour.html",
    "title": "Class EntityBehaviour",
    "keywords": "Class EntityBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour AgentAuthoring FlockGroupAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public class EntityBehaviour : MonoBehaviour Fields | Improve this Doc View Source m_Entity Declaration protected Entity m_Entity Field Value Type Description Unity.Entities.Entity Methods | Improve this Doc View Source GetOrCreateEntity() Declaration public Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity"
  },
  "api/ProjectDawn.Navigation.Hybrid.FlockGroupAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.FlockGroupAuthoring.html",
    "title": "Class FlockGroupAuthoring",
    "keywords": "Class FlockGroupAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EntityBehaviour FlockGroupAuthoring Inherited Members EntityBehaviour.m_Entity EntityBehaviour.GetOrCreateEntity() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Flock Group (Experimental)\")] public class FlockGroupAuthoring : EntityBehaviour Fields | Improve this Doc View Source Alignment Declaration [SerializeField] [Range(0F, 0.3F)] protected float Alignment Field Value Type Description System.Single | Improve this Doc View Source Cohesion Declaration [SerializeField] [Range(0F, 0.3F)] protected float Cohesion Field Value Type Description System.Single | Improve this Doc View Source Leader Declaration [SerializeField] protected AgentAuthoring Leader Field Value Type Description AgentAuthoring | Improve this Doc View Source Radius Declaration [SerializeField] protected float Radius Field Value Type Description System.Single Properties | Improve this Doc View Source DefaulFlockGroup Returns default component of FlockGroup . Declaration public FlockGroup DefaulFlockGroup { get; } Property Value Type Description FlockGroup | Improve this Doc View Source EntityFlockEntities FlockEntity buffer of this Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public DynamicBuffer<FlockEntity> EntityFlockEntities { get; } Property Value Type Description Unity.Entities.DynamicBuffer < FlockEntity > | Improve this Doc View Source EntityFlockGroup FlockGroup component of this Entity. Accessing this property is potentially heavy operation as it will require wait for agent jobs to finish. Declaration public FlockGroup EntityFlockGroup { get; set; } Property Value Type Description FlockGroup | Improve this Doc View Source HasEntityFlockGroup Returns true if entity has FlockGroup . Declaration public bool HasEntityFlockGroup { get; } Property Value Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.Hybrid.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.html",
    "title": "Namespace ProjectDawn.Navigation.Hybrid",
    "keywords": "Namespace ProjectDawn.Navigation.Hybrid Classes AgentAuthoring Main component of agent that enables motion. AgentAvoidAuthoring Agent avoidance of nearby agents. AgentCircleShapeAuthoring Agent circle shape. AgentColliderAuthoring Enables collisio with other agents. AgentCylinderShapeAuthoring Agent cylindre shape. AgentNavMeshAuthoring Agent uses NavMesh for pathfinding. AgentReciprocalAvoidAuthoring AgentSeparationAuthoring Agent separation from nearby agents. AgentSmartStopAuthoring Enables collisio with other agents. EntityBehaviour FlockGroupAuthoring NavMeshSettingsAuthoring NavMeshSurfaceBaker SettingsBehaviour SpatialPartitioningSettingsAuthoring Structs AgentSetDestinationDeferredSystem AgentSetDestinationDeferredSystem.Singleton ReadAgentRectTransformSystem ReadAgentTransformSystem SettingsSystem WriteAgentRectTransformSystem WriteAgentTransformSystem Enums AgentMotionType"
  },
  "api/ProjectDawn.Navigation.Hybrid.NavMeshSettingsAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.NavMeshSettingsAuthoring.html",
    "title": "Class NavMeshSettingsAuthoring",
    "keywords": "Class NavMeshSettingsAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour NavMeshSettingsAuthoring Inherited Members SettingsBehaviour.Types SettingsBehaviour.FindTypesInAssemblies() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Settings/Nav Mesh Settings\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class NavMeshSettingsAuthoring : SettingsBehaviour Fields | Improve this Doc View Source m_MaxIterations Declaration [Tooltip(\"TODO\")] [SerializeField] protected int m_MaxIterations Field Value Type Description System.Int32 | Improve this Doc View Source m_MaxPath Declaration [Tooltip(\"TODO\")] [SerializeField] protected int m_MaxPath Field Value Type Description System.Int32 Properties | Improve this Doc View Source DefaultSettings Returns default component of AgentSpatialPartitioningSystem.Settings . Declaration public NavMeshQuerySystem.Settings DefaultSettings { get; } Property Value Type Description NavMeshQuerySystem.Settings Methods | Improve this Doc View Source GetOrCreateEntity() Declaration public override Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity Overrides SettingsBehaviour.GetOrCreateEntity()"
  },
  "api/ProjectDawn.Navigation.Hybrid.NavMeshSurfaceBaker.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.NavMeshSurfaceBaker.html",
    "title": "Class NavMeshSurfaceBaker",
    "keywords": "Class NavMeshSurfaceBaker Inheritance System.Object Unity.Entities.IBaker Unity.Entities.Baker < Unity.AI.Navigation.NavMeshSurface > NavMeshSurfaceBaker Inherited Members Unity.Entities.IBaker.GetSceneGUID() Unity.Entities.IBaker.GetComponent<T>() Unity.Entities.IBaker.GetComponent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponents<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponents<T>() Unity.Entities.IBaker.GetComponents<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponents<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentInParent<T>() Unity.Entities.IBaker.GetComponentInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentsInParent<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInParent<T>() Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentsInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentInChildren<T>() Unity.Entities.IBaker.GetComponentInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.Component, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.GameObject, System.Collections.Generic.List<T>) Unity.Entities.IBaker.GetComponentsInChildren<T>() Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.GetComponentsInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.GetParent() Unity.Entities.IBaker.GetParent(UnityEngine.Component) Unity.Entities.IBaker.GetParent(UnityEngine.GameObject) Unity.Entities.IBaker.GetParents() Unity.Entities.IBaker.GetParents(UnityEngine.Component) Unity.Entities.IBaker.GetParents(UnityEngine.GameObject) Unity.Entities.IBaker.GetParents(System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetParents(UnityEngine.Component, System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetParents(UnityEngine.GameObject, System.Collections.Generic.List<UnityEngine.GameObject>) Unity.Entities.IBaker.GetChild(System.Int32) Unity.Entities.IBaker.GetChild(UnityEngine.Component, System.Int32) Unity.Entities.IBaker.GetChild(UnityEngine.GameObject, System.Int32) Unity.Entities.IBaker.GetChildren(System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.Component, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.GameObject, System.Boolean) Unity.Entities.IBaker.GetChildren(System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.Component, System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildren(UnityEngine.GameObject, System.Collections.Generic.List<UnityEngine.GameObject>, System.Boolean) Unity.Entities.IBaker.GetChildCount() Unity.Entities.IBaker.GetChildCount(UnityEngine.Component) Unity.Entities.IBaker.GetChildCount(UnityEngine.GameObject) Unity.Entities.IBaker.GetName() Unity.Entities.IBaker.GetName(UnityEngine.Component) Unity.Entities.IBaker.GetName(UnityEngine.GameObject) Unity.Entities.IBaker.GetLayer() Unity.Entities.IBaker.GetLayer(UnityEngine.Component) Unity.Entities.IBaker.GetLayer(UnityEngine.GameObject) Unity.Entities.IBaker.GetTag() Unity.Entities.IBaker.GetTag(UnityEngine.Component) Unity.Entities.IBaker.GetTag(UnityEngine.GameObject) Unity.Entities.IBaker.GetEntity() Unity.Entities.IBaker.GetEntity(UnityEngine.GameObject) Unity.Entities.IBaker.GetEntity(UnityEngine.Component) Unity.Entities.IBaker.GetEntity(Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntity(UnityEngine.GameObject, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntity(UnityEngine.Component, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.GetEntityWithoutDependency() Unity.Entities.IBaker.IsActive() Unity.Entities.IBaker.IsActive(UnityEngine.Component) Unity.Entities.IBaker.IsActive(UnityEngine.GameObject) Unity.Entities.IBaker.IsActiveAndEnabled() Unity.Entities.IBaker.IsActiveAndEnabled(UnityEngine.Component) Unity.Entities.IBaker.IsStatic() Unity.Entities.IBaker.IsStatic(UnityEngine.Component) Unity.Entities.IBaker.IsStatic(UnityEngine.GameObject) Unity.Entities.IBaker.IsClient() Unity.Entities.IBaker.IsServer() Unity.Entities.IBaker.DependsOn<T>(T) Unity.Entities.IBaker.DependsOnComponentInParent<T>() Unity.Entities.IBaker.DependsOnComponentInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInParent<T>() Unity.Entities.IBaker.DependsOnComponentsInParent<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentsInParent<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentInChildren<T>() Unity.Entities.IBaker.DependsOnComponentInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnComponentInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInChildren<T>() Unity.Entities.IBaker.DependsOnComponentsInChildren<T>(UnityEngine.GameObject) Unity.Entities.IBaker.DependsOnComponentsInChildren<T>(UnityEngine.Component) Unity.Entities.IBaker.DependsOnLightBaking() Unity.Entities.IBaker.AddBlobAsset<T>(Unity.Entities.BlobAssetReference<T>, Unity.Entities.Hash128) Unity.Entities.IBaker.AddBlobAssetWithCustomHash<T>(Unity.Entities.BlobAssetReference<T>, Unity.Entities.Hash128) Unity.Entities.IBaker.TryGetBlobAssetReference<T>(Unity.Entities.Hash128, Unity.Entities.BlobAssetReference<T>) Unity.Entities.IBaker.AddComponent<T>() Unity.Entities.IBaker.AddComponent<T>(T) Unity.Entities.IBaker.AddComponent<T>(Unity.Entities.Entity) Unity.Entities.IBaker.AddComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddComponent(Unity.Entities.ComponentType) Unity.Entities.IBaker.AddComponent(Unity.Entities.Entity, Unity.Entities.ComponentType) Unity.Entities.IBaker.AddComponent(Unity.Entities.ComponentTypeSet) Unity.Entities.IBaker.AddComponent(Unity.Entities.Entity, Unity.Entities.ComponentTypeSet) Unity.Entities.IBaker.AddComponentObject<T>(T) Unity.Entities.IBaker.AddComponentObject<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddSharedComponentManaged<T>(T) Unity.Entities.IBaker.AddSharedComponentManaged<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddSharedComponent<T>(T) Unity.Entities.IBaker.AddSharedComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.AddBuffer<T>() Unity.Entities.IBaker.AddBuffer<T>(Unity.Entities.Entity) Unity.Entities.IBaker.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetComponentEnabled<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.IBaker.SetComponentEnabled<T>(System.Boolean) Unity.Entities.IBaker.SetSharedComponentManaged<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetSharedComponent<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.SetBuffer<T>() Unity.Entities.IBaker.SetBuffer<T>(Unity.Entities.Entity) Unity.Entities.IBaker.AppendToBuffer<T>(T) Unity.Entities.IBaker.AppendToBuffer<T>(Unity.Entities.Entity, T) Unity.Entities.IBaker.CreateAdditionalEntity() Unity.Entities.IBaker.CreateAdditionalEntity(Unity.Entities.TransformUsageFlags, System.Boolean, System.String) Unity.Entities.IBaker.RegisterPrefabForBaking(UnityEngine.GameObject) Unity.Entities.IBaker.AddTransformUsageFlags(Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.AddTransformUsageFlags(Unity.Entities.Entity, Unity.Entities.TransformUsageFlags) Unity.Entities.IBaker.IsBakingForEditor() Unity.Entities.IBaker.GetDotsSettings() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public class NavMeshSurfaceBaker : Baker<NavMeshSurface> Methods | Improve this Doc View Source Bake(NavMeshSurface) Declaration public override void Bake(NavMeshSurface authoring) Parameters Type Name Description Unity.AI.Navigation.NavMeshSurface authoring Overrides Unity.Entities.Baker<Unity.AI.Navigation.NavMeshSurface>.Bake(Unity.AI.Navigation.NavMeshSurface)"
  },
  "api/ProjectDawn.Navigation.Hybrid.ReadAgentRectTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.ReadAgentRectTransformSystem.html",
    "title": "Struct ReadAgentRectTransformSystem",
    "keywords": "Struct ReadAgentRectTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(SimulationSystemGroup))] [UpdateAfter(typeof(FixedStepSimulationSystemGroup))] public struct ReadAgentRectTransformSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.ReadAgentTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.ReadAgentTransformSystem.html",
    "title": "Struct ReadAgentTransformSystem",
    "keywords": "Struct ReadAgentTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(SimulationSystemGroup))] [UpdateAfter(typeof(FixedStepSimulationSystemGroup))] public struct ReadAgentTransformSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.SettingsBehaviour.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.SettingsBehaviour.html",
    "title": "Class SettingsBehaviour",
    "keywords": "Class SettingsBehaviour Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour NavMeshSettingsAuthoring SpatialPartitioningSettingsAuthoring Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax public abstract class SettingsBehaviour : MonoBehaviour Fields | Improve this Doc View Source Types Declaration public static readonly List<Type> Types Field Value Type Description System.Collections.Generic.List < System.Type > Methods | Improve this Doc View Source FindTypesInAssemblies() Declaration public static List<Type> FindTypesInAssemblies() Returns Type Description System.Collections.Generic.List < System.Type > | Improve this Doc View Source GetOrCreateEntity() Declaration public abstract Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity"
  },
  "api/ProjectDawn.Navigation.Hybrid.SettingsSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.SettingsSystem.html",
    "title": "Struct SettingsSystem",
    "keywords": "Struct SettingsSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup))] public struct SettingsSystem : ISystem Explicit Interface Implementations | Improve this Doc View Source ISystem.OnCreate(ref SystemState) Declaration void ISystem.OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.SpatialPartitioningSettingsAuthoring.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.SpatialPartitioningSettingsAuthoring.html",
    "title": "Class SpatialPartitioningSettingsAuthoring",
    "keywords": "Class SpatialPartitioningSettingsAuthoring Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour SettingsBehaviour SpatialPartitioningSettingsAuthoring Inherited Members SettingsBehaviour.Types SettingsBehaviour.FindTypesInAssemblies() UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [AddComponentMenu(\"Agents Navigation/Settings/Spatial Partitioning Settings\")] [DisallowMultipleComponent] [HelpURL(\"https://lukaschod.github.io/agents-navigation-docs/manual/authoring.html\")] public class SpatialPartitioningSettingsAuthoring : SettingsBehaviour Fields | Improve this Doc View Source CellSize Declaration [Tooltip(\"The size of single partition.\")] [SerializeField] protected float3 CellSize Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source QueryCapacity Declaration [Tooltip(\"TODO\")] [SerializeField] [HideInInspector] protected int QueryCapacity Field Value Type Description System.Int32 Properties | Improve this Doc View Source DefaultSettings Returns default component of AgentSpatialPartitioningSystem.Settings . Declaration public AgentSpatialPartitioningSystem.Settings DefaultSettings { get; } Property Value Type Description AgentSpatialPartitioningSystem.Settings Methods | Improve this Doc View Source GetOrCreateEntity() Declaration public override Entity GetOrCreateEntity() Returns Type Description Unity.Entities.Entity Overrides SettingsBehaviour.GetOrCreateEntity()"
  },
  "api/ProjectDawn.Navigation.Hybrid.WriteAgentRectTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.WriteAgentRectTransformSystem.html",
    "title": "Struct WriteAgentRectTransformSystem",
    "keywords": "Struct WriteAgentRectTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(SimulationSystemGroup), OrderFirst = true)] [UpdateBefore(typeof(FixedStepSimulationSystemGroup))] public struct WriteAgentRectTransformSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.Hybrid.WriteAgentTransformSystem.html": {
    "href": "api/ProjectDawn.Navigation.Hybrid.WriteAgentTransformSystem.html",
    "title": "Struct WriteAgentTransformSystem",
    "keywords": "Struct WriteAgentTransformSystem Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation.Hybrid Assembly : ProjectDawn.Navigation.Hybrid.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(SimulationSystemGroup), OrderFirst = true)] [UpdateBefore(typeof(FixedStepSimulationSystemGroup))] public struct WriteAgentTransformSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.ISpatialQueryEntity.html": {
    "href": "api/ProjectDawn.Navigation.ISpatialQueryEntity.html",
    "title": "Interface ISpatialQueryEntity",
    "keywords": "Interface ISpatialQueryEntity Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public interface ISpatialQueryEntity Methods | Improve this Doc View Source Execute(Entity, AgentBody, AgentShape, LocalTransform) Declaration void Execute(Entity entity, AgentBody body, AgentShape shape, LocalTransform transform) Parameters Type Name Description Unity.Entities.Entity entity AgentBody body AgentShape shape Unity.Transforms.LocalTransform transform"
  },
  "api/ProjectDawn.Navigation.ISpatialQueryVolume.html": {
    "href": "api/ProjectDawn.Navigation.ISpatialQueryVolume.html",
    "title": "Interface ISpatialQueryVolume",
    "keywords": "Interface ISpatialQueryVolume Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public interface ISpatialQueryVolume Methods | Improve this Doc View Source Execute(float3, float3) Declaration void Execute(float3 position, float3 size) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 size"
  },
  "api/ProjectDawn.Navigation.NavMeshBoundary.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshBoundary.html",
    "title": "Struct NavMeshBoundary",
    "keywords": "Struct NavMeshBoundary Represents a boundary on the navigation mesh. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshBoundary : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Location The location of the boundary. Declaration public NavMeshLocation Location Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation | Improve this Doc View Source Radius The radius of the boundary. Declaration public float Radius Field Value Type Description System.Single Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshBoundarySystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshBoundarySystem.html",
    "title": "Struct NavMeshBoundarySystem",
    "keywords": "Struct NavMeshBoundarySystem System that for each agent that has sonar with wall collects nearby navmesh edges as walls. Later on these walls are used for avoidance. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateAfter(typeof(AgentSteeringSystemGroup))] [UpdateAfter(typeof(NavMeshSteeringSystem))] [UpdateBefore(typeof(AgentForceSystemGroup))] public struct NavMeshBoundarySystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshData.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshData.html",
    "title": "Struct NavMeshData",
    "keywords": "Struct NavMeshData Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable < NavMeshData > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshData : ISharedComponentData, IQueryTypeParameter, IEquatable<NavMeshData> Fields | Improve this Doc View Source Value Declaration public NavMeshData Value Field Value Type Description UnityEngine.AI.NavMeshData Methods | Improve this Doc View Source Equals(NavMeshData) Declaration public bool Equals(NavMeshData other) Parameters Type Name Description NavMeshData other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter System.IEquatable<T>"
  },
  "api/ProjectDawn.Navigation.NavMeshDataInstance.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshDataInstance.html",
    "title": "Struct NavMeshDataInstance",
    "keywords": "Struct NavMeshDataInstance Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshDataInstance : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source Value Declaration public NavMeshDataInstance Value Field Value Type Description UnityEngine.AI.NavMeshDataInstance Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshDataSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshDataSystem.html",
    "title": "Class NavMeshDataSystem",
    "keywords": "Class NavMeshDataSystem Inheritance System.Object Unity.Entities.ComponentSystemBase Unity.Entities.SystemBase NavMeshDataSystem Inherited Members Unity.Entities.SystemBase.CompleteDependency() Unity.Entities.SystemBase.Update() Unity.Entities.SystemBase.GetComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.SetComponent<T>(Unity.Entities.Entity, T) Unity.Entities.SystemBase.HasComponent<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.HasBuffer<T>(Unity.Entities.Entity) Unity.Entities.SystemBase.GetComponentLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetComponentDataFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetBuffer<T>(Unity.Entities.Entity, System.Boolean) Unity.Entities.SystemBase.GetBufferLookup<T>(System.Boolean) Unity.Entities.SystemBase.GetBufferFromEntity<T>(System.Boolean) Unity.Entities.SystemBase.GetEntityStorageInfoLookup() Unity.Entities.SystemBase.GetStorageInfoFromEntity() Unity.Entities.SystemBase.Exists(Unity.Entities.Entity) Unity.Entities.SystemBase.Dependency Unity.Entities.SystemBase.CheckedStateRef Unity.Entities.SystemBase.Entities Unity.Entities.SystemBase.Job Unity.Entities.ComponentSystemBase.OnCreate() Unity.Entities.ComponentSystemBase.OnStartRunning() Unity.Entities.ComponentSystemBase.OnStopRunning() Unity.Entities.ComponentSystemBase.ShouldRunSystem() Unity.Entities.ComponentSystemBase.GetComponentTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetDynamicComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetBufferTypeHandle<T>(System.Boolean) Unity.Entities.ComponentSystemBase.GetSharedComponentTypeHandle<T>() Unity.Entities.ComponentSystemBase.GetDynamicSharedComponentTypeHandle(Unity.Entities.ComponentType) Unity.Entities.ComponentSystemBase.GetEntityTypeHandle() Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Entities.EntityQuery[]) Unity.Entities.ComponentSystemBase.RequireAnyForUpdate(Unity.Collections.NativeArray<Unity.Entities.EntityQuery>) Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() Unity.Entities.ComponentSystemBase.RequireSingletonForUpdate<T>() Unity.Entities.ComponentSystemBase.HasSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingleton<T>() Unity.Entities.ComponentSystemBase.GetSingletonRW<T>() Unity.Entities.ComponentSystemBase.GetSingletonBuffer<T>(System.Boolean) Unity.Entities.ComponentSystemBase.TryGetSingleton<T>(T) Unity.Entities.ComponentSystemBase.TryGetSingletonBuffer<T>(Unity.Entities.DynamicBuffer<T>) Unity.Entities.ComponentSystemBase.SetSingleton<T>(T) Unity.Entities.ComponentSystemBase.GetSingletonEntity<T>() Unity.Entities.ComponentSystemBase.TryGetSingletonEntity<T>(Unity.Entities.Entity) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.ComponentType[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Collections.NativeArray<Unity.Entities.ComponentType>) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryDesc[]) Unity.Entities.ComponentSystemBase.GetEntityQuery(Unity.Entities.EntityQueryBuilder) Unity.Entities.ComponentSystemBase.Enabled Unity.Entities.ComponentSystemBase.EntityQueries Unity.Entities.ComponentSystemBase.GlobalSystemVersion Unity.Entities.ComponentSystemBase.LastSystemVersion Unity.Entities.ComponentSystemBase.EntityManager Unity.Entities.ComponentSystemBase.World Unity.Entities.ComponentSystemBase.SystemHandle Unity.Entities.ComponentSystemBase.SystemHandleUntyped Unity.Entities.ComponentSystemBase.Time Unity.Entities.ComponentSystemBase.WorldUpdateAllocator System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup))] public class NavMeshDataSystem : SystemBase Methods | Improve this Doc View Source OnDestroy() Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() | Improve this Doc View Source OnUpdate() Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate()"
  },
  "api/ProjectDawn.Navigation.NavMeshFunnel.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshFunnel.html",
    "title": "Struct NavMeshFunnel",
    "keywords": "Struct NavMeshFunnel Used for creating optimal path from navmesh polygons. Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshFunnel : IDisposable Constructors | Improve this Doc View Source NavMeshFunnel(Int32, Allocator) Declaration public NavMeshFunnel(int capacity, Allocator allocator) Parameters Type Name Description System.Int32 capacity Unity.Collections.Allocator allocator Methods | Improve this Doc View Source AsLocations() Returns locations array of the path. Declaration public NativeSlice<NavMeshLocation> AsLocations() Returns Type Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.NavMeshLocation > Returns array of locations. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetCornersDistance() Returns distance of the path. Declaration public float GetCornersDistance() Returns Type Description System.Single | Improve this Doc View Source TryCreateStraightPath(NavMeshQuery, NativeSlice<PolygonId>, float3, float3) Recreates corridor with straight path. This method will attempt to build optimal path using NavMesh polygons. Declaration public bool TryCreateStraightPath(NavMeshQuery query, NativeSlice<PolygonId> path, float3 from, float3 to) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query The NavMesh query. Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Polygons array. Unity.Mathematics.float3 from Starting position. Unity.Mathematics.float3 to Destination position. Returns Type Description System.Boolean Returns true if path is valid. Implements System.IDisposable"
  },
  "api/ProjectDawn.Navigation.NavMeshNode.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshNode.html",
    "title": "Struct NavMeshNode",
    "keywords": "Struct NavMeshNode Agent NavMesh single node of path. Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshNode : IBufferElementData Fields | Improve this Doc View Source Value Polygon id of NavMesh node. Declaration public PolygonId Value Field Value Type Description UnityEngine.Experimental.AI.PolygonId Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.NavMeshPath.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPath.html",
    "title": "Struct NavMeshPath",
    "keywords": "Struct NavMeshPath Agent NavMesh path. Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshPath : IComponentData, IQueryTypeParameter, IEnableableComponent Fields | Improve this Doc View Source AgentTypeId The type ID for the agent in NavMesh. Declaration public int AgentTypeId Field Value Type Description System.Int32 | Improve this Doc View Source AreaMask Specifies which NavMesh areas are passable. Changing areaMask will make the path stale (see isPathStale). Declaration public int AreaMask Field Value Type Description System.Int32 | Improve this Doc View Source AutoRepath Should the agent attempt to acquire a new path if the existing path becomes invalid? Declaration public bool AutoRepath Field Value Type Description System.Boolean | Improve this Doc View Source EndLocation End location of the agent on NavMesh. Declaration public NavMeshLocation EndLocation Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation | Improve this Doc View Source Location Current location of the agent on NavMesh. Declaration public NavMeshLocation Location Field Value Type Description UnityEngine.Experimental.AI.NavMeshLocation | Improve this Doc View Source MappingExtent Maximum distance on each axis will be used when attempting to map the agent's position or destination onto navmesh. The higher the value, the bigger the performance cost. Declaration public float3 MappingExtent Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source QueryHandle Query handle of current requested path. Declaration public NavMeshQueryHandle QueryHandle Field Value Type Description NavMeshQueryHandle | Improve this Doc View Source State State of the path. Declaration public NavMeshPathState State Field Value Type Description NavMeshPathState Properties | Improve this Doc View Source Default Returns default configuration. Declaration public static NavMeshPath Default { get; } Property Value Type Description NavMeshPath Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Unity.Entities.IEnableableComponent"
  },
  "api/ProjectDawn.Navigation.NavMeshPathState.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPathState.html",
    "title": "Enum NavMeshPathState",
    "keywords": "Enum NavMeshPathState State of the path. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum NavMeshPathState Fields Name Description Failed NavMesg path building failed. See editor console for more information. Finished NavMesh path building is finished. Check NavMeshNode buffer for result. InProgress NavMesh path building is in progress. InValid NavMesh path is no longer valid. WaitingNewPath Waiting for new NavMesh path requested to be handled."
  },
  "api/ProjectDawn.Navigation.NavMeshPathSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPathSystem.html",
    "title": "Struct NavMeshPathSystem",
    "keywords": "Struct NavMeshPathSystem System that controls agent NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateBefore(typeof(AgentSteeringSystemGroup))] public struct NavMeshPathSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshPositionSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshPositionSystem.html",
    "title": "Struct NavMeshPositionSystem",
    "keywords": "Struct NavMeshPositionSystem System that forces agents to stay within NavMesh surface. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateAfter(typeof(AgentTransformSystemGroup))] [UpdateAfter(typeof(AgentColliderSystem))] public struct NavMeshPositionSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshQueryHandle.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQueryHandle.html",
    "title": "Struct NavMeshQueryHandle",
    "keywords": "Struct NavMeshQueryHandle Represents handle of NavMeshQuery used by NavMeshQuerySystem . Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshQueryHandle Fields | Improve this Doc View Source Index Unique index of NavMesh query. Declaration public int Index Field Value Type Description System.Int32 Properties | Improve this Doc View Source Null Invalid NavMesh query. Declaration public static NavMeshQueryHandle Null { get; } Property Value Type Description NavMeshQueryHandle Methods | Improve this Doc View Source Equals(NavMeshQueryHandle) Declaration public bool Equals(NavMeshQueryHandle other) Parameters Type Name Description NavMeshQueryHandle other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object compare) Parameters Type Name Description System.Object compare Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(NavMeshQueryHandle, NavMeshQueryHandle) Declaration public static bool operator ==(NavMeshQueryHandle lhs, NavMeshQueryHandle rhs) Parameters Type Name Description NavMeshQueryHandle lhs NavMeshQueryHandle rhs Returns Type Description System.Boolean | Improve this Doc View Source Implicit(NavMeshQueryHandle to Int32) Declaration public static implicit operator int (NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description System.Int32 | Improve this Doc View Source Inequality(NavMeshQueryHandle, NavMeshQueryHandle) Declaration public static bool operator !=(NavMeshQueryHandle lhs, NavMeshQueryHandle rhs) Parameters Type Name Description NavMeshQueryHandle lhs NavMeshQueryHandle rhs Returns Type Description System.Boolean"
  },
  "api/ProjectDawn.Navigation.NavMeshQueryStatus.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQueryStatus.html",
    "title": "Enum NavMeshQueryStatus",
    "keywords": "Enum NavMeshQueryStatus The status of navmesh query. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum NavMeshQueryStatus Fields Name Description Allocated Path is allocated. Failed Failed to construct path. Finished Path is finished. InProgress Path is in progress. None"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.html",
    "title": "Struct NavMeshQuerySystem",
    "keywords": "Struct NavMeshQuerySystem System for requesting NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [UpdateInGroup(typeof(InitializationSystemGroup))] public struct NavMeshQuerySystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration [BurstCompile] public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration [BurstCompile] public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.Settings.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.Settings.html",
    "title": "Struct NavMeshQuerySystem.Settings",
    "keywords": "Struct NavMeshQuerySystem.Settings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Settings : IComponentData, IQueryTypeParameter Fields | Improve this Doc View Source MaxIterations Declaration public int MaxIterations Field Value Type Description System.Int32 | Improve this Doc View Source MaxPathSize Declaration public int MaxPathSize Field Value Type Description System.Int32 Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshQuerySystem.Singleton.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshQuerySystem.Singleton.html",
    "title": "Struct NavMeshQuerySystem.Singleton",
    "keywords": "Struct NavMeshQuerySystem.Singleton Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct Singleton : IComponentData, IQueryTypeParameter Properties | Improve this Doc View Source World Declaration public NavMeshWorld World { get; } Property Value Type Description UnityEngine.Experimental.AI.NavMeshWorld Methods | Improve this Doc View Source CreateQuery(NavMeshLocation, NavMeshLocation, Int32, Int32) Creates new navmesh query to construct optimal path. Declaration public NavMeshQueryHandle CreateQuery(NavMeshLocation from, NavMeshLocation to, int agentTypeId = 0, int areaMask = -1) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshLocation from UnityEngine.Experimental.AI.NavMeshLocation to System.Int32 agentTypeId System.Int32 areaMask Returns Type Description NavMeshQueryHandle | Improve this Doc View Source DestroyQuery(NavMeshQueryHandle) Release navmesh query for reuse. Declaration public void DestroyQuery(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle | Improve this Doc View Source Exist(NavMeshQueryHandle) Returns true if navmesh query exists. Declaration public bool Exist(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description System.Boolean | Improve this Doc View Source GetEdgesAndNeighbors(PolygonId, NativeSlice<Vector3>, NativeSlice<PolygonId>, NativeSlice<Byte>, out Int32, out Int32) Returns surface information of navmesh node. Declaration public bool GetEdgesAndNeighbors(PolygonId node, NativeSlice<Vector3> vertices, NativeSlice<PolygonId> nodes, NativeSlice<byte> indices, out int numVertices, out int numNodes) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId node Unity.Collections.NativeSlice < UnityEngine.Vector3 > vertices Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > nodes Unity.Collections.NativeSlice < System.Byte > indices System.Int32 numVertices System.Int32 numNodes Returns Type Description System.Boolean | Improve this Doc View Source GetPolygons(NavMeshQueryHandle) Returns path that is represented as array of nodes. Can be used for construcing NavMeshFunnel . Declaration public NativeSlice<PolygonId> GetPolygons(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > | Improve this Doc View Source GetPortalPoints(PolygonId, PolygonId, out Vector3, out Vector3) Declaration public bool GetPortalPoints(PolygonId polygon, PolygonId neighbourPolygon, out Vector3 left, out Vector3 right) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId polygon UnityEngine.Experimental.AI.PolygonId neighbourPolygon UnityEngine.Vector3 left UnityEngine.Vector3 right Returns Type Description System.Boolean | Improve this Doc View Source GetStatus(NavMeshQueryHandle) Returns status of navmesh query. Declaration public NavMeshQueryStatus GetStatus(NavMeshQueryHandle handle) Parameters Type Name Description NavMeshQueryHandle handle Returns Type Description NavMeshQueryStatus | Improve this Doc View Source IsPathValid(NativeSlice<PolygonId>) Returns true, if all nodes in array are valid. Does not check, if the nodes are connected. Declaration public bool IsPathValid(NativeSlice<PolygonId> path) Parameters Type Name Description Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Returns Type Description System.Boolean | Improve this Doc View Source IsValid(PolygonId) Returns true, if node is valid. Declaration public bool IsValid(PolygonId path) Parameters Type Name Description UnityEngine.Experimental.AI.PolygonId path Returns Type Description System.Boolean | Improve this Doc View Source MapLocation(float3, float3, Int32, Int32) Returns navmesh location from specified one. This is HPC# version of UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit@,System.Single,System.Int32) . Declaration public NavMeshLocation MapLocation(float3 position, float3 extents, int agentTypeID, int areaMask = -1) Parameters Type Name Description Unity.Mathematics.float3 position Unity.Mathematics.float3 extents System.Int32 agentTypeID System.Int32 areaMask Returns Type Description UnityEngine.Experimental.AI.NavMeshLocation | Improve this Doc View Source MoveLocation(NavMeshLocation, float3, Int32) Moves navmesh location to specified position. This is usually used for finding new position without steping over the obstacles. Declaration public NavMeshLocation MoveLocation(NavMeshLocation location, float3 target, int areaMask = -1) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshLocation location Unity.Mathematics.float3 target System.Int32 areaMask Returns Type Description UnityEngine.Experimental.AI.NavMeshLocation | Improve this Doc View Source Raycast(out NavMeshHit, NavMeshLocation, Vector3, Int32, NativeArray<Single>) Declaration public PathQueryStatus Raycast(out NavMeshHit hit, NavMeshLocation start, Vector3 targetPosition, int areaMask = -1, NativeArray<float> costs = default(NativeArray<float>)) Parameters Type Name Description UnityEngine.AI.NavMeshHit hit UnityEngine.Experimental.AI.NavMeshLocation start UnityEngine.Vector3 targetPosition System.Int32 areaMask Unity.Collections.NativeArray < System.Single > costs Returns Type Description UnityEngine.Experimental.AI.PathQueryStatus | Improve this Doc View Source TryCreateFunnel(ref NavMeshFunnel, NativeSlice<PolygonId>, float3, float3) Creates navmesh funnel out of navmesh nodes. Declaration public bool TryCreateFunnel(ref NavMeshFunnel funnel, NativeSlice<PolygonId> path, float3 from, float3 to) Parameters Type Name Description NavMeshFunnel funnel Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path Unity.Mathematics.float3 from Unity.Mathematics.float3 to Returns Type Description System.Boolean Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter"
  },
  "api/ProjectDawn.Navigation.NavMeshSteeringSystem.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshSteeringSystem.html",
    "title": "Struct NavMeshSteeringSystem",
    "keywords": "Struct NavMeshSteeringSystem System that steers agents within the NavMesh path. Implements Unity.Entities.ISystem Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [BurstCompile] [RequireMatchingQueriesForUpdate] [UpdateInGroup(typeof(AgentSystemGroup))] [UpdateAfter(typeof(AgentSteeringSystemGroup))] [UpdateBefore(typeof(AgentForceSystemGroup))] public struct NavMeshSteeringSystem : ISystem Methods | Improve this Doc View Source OnCreate(ref SystemState) Declaration public void OnCreate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnDestroy(ref SystemState) Declaration public void OnDestroy(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state | Improve this Doc View Source OnUpdate(ref SystemState) Declaration [BurstCompile] public void OnUpdate(ref SystemState state) Parameters Type Name Description Unity.Entities.SystemState state Implements Unity.Entities.ISystem"
  },
  "api/ProjectDawn.Navigation.NavMeshWall.html": {
    "href": "api/ProjectDawn.Navigation.NavMeshWall.html",
    "title": "Struct NavMeshWall",
    "keywords": "Struct NavMeshWall Represents a wall on the navigation mesh. Implements Unity.Entities.IBufferElementData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public struct NavMeshWall : IBufferElementData Constructors | Improve this Doc View Source NavMeshWall(float3, float3) Constructs a new instance of the NavMeshWall struct. Declaration public NavMeshWall(float3 from, float3 to) Parameters Type Name Description Unity.Mathematics.float3 from The start point of the wall. Unity.Mathematics.float3 to The end point of the wall. Fields | Improve this Doc View Source End The end point of the wall. Declaration public float3 End Field Value Type Description Unity.Mathematics.float3 | Improve this Doc View Source Start The start point of the wall. Declaration public float3 Start Field Value Type Description Unity.Mathematics.float3 Implements Unity.Entities.IBufferElementData"
  },
  "api/ProjectDawn.Navigation.PathUtils.html": {
    "href": "api/ProjectDawn.Navigation.PathUtils.html",
    "title": "Class PathUtils",
    "keywords": "Class PathUtils Inheritance System.Object PathUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public class PathUtils Methods | Improve this Doc View Source FindStraightPath(NavMeshQuery, Vector3, Vector3, NativeSlice<PolygonId>, Int32, ref NativeArray<NavMeshLocation>, ref NativeArray<StraightPathFlags>, ref NativeArray<Single>, ref Int32, Int32) Declaration public static PathQueryStatus FindStraightPath(NavMeshQuery query, Vector3 startPos, Vector3 endPos, NativeSlice<PolygonId> path, int pathSize, ref NativeArray<NavMeshLocation> straightPath, ref NativeArray<StraightPathFlags> straightPathFlags, ref NativeArray<float> vertexSide, ref int straightPathCount, int maxStraightPath) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query UnityEngine.Vector3 startPos UnityEngine.Vector3 endPos Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path System.Int32 pathSize Unity.Collections.NativeArray < UnityEngine.Experimental.AI.NavMeshLocation > straightPath Unity.Collections.NativeArray < StraightPathFlags > straightPathFlags Unity.Collections.NativeArray < System.Single > vertexSide System.Int32 straightPathCount System.Int32 maxStraightPath Returns Type Description UnityEngine.Experimental.AI.PathQueryStatus | Improve this Doc View Source Perp2D(Vector3, Vector3) Declaration public static float Perp2D(Vector3 u, Vector3 v) Parameters Type Name Description UnityEngine.Vector3 u UnityEngine.Vector3 v Returns Type Description System.Single | Improve this Doc View Source RetracePortals(NavMeshQuery, Int32, Int32, NativeSlice<PolygonId>, Int32, Vector3, ref NativeArray<NavMeshLocation>, ref NativeArray<StraightPathFlags>, Int32) Declaration public static int RetracePortals(NavMeshQuery query, int startIndex, int endIndex, NativeSlice<PolygonId> path, int n, Vector3 termPos, ref NativeArray<NavMeshLocation> straightPath, ref NativeArray<StraightPathFlags> straightPathFlags, int maxStraightPath) Parameters Type Name Description UnityEngine.Experimental.AI.NavMeshQuery query System.Int32 startIndex System.Int32 endIndex Unity.Collections.NativeSlice < UnityEngine.Experimental.AI.PolygonId > path System.Int32 n UnityEngine.Vector3 termPos Unity.Collections.NativeArray < UnityEngine.Experimental.AI.NavMeshLocation > straightPath Unity.Collections.NativeArray < StraightPathFlags > straightPathFlags System.Int32 maxStraightPath Returns Type Description System.Int32 | Improve this Doc View Source Swap(ref Vector3, ref Vector3) Declaration public static void Swap(ref Vector3 a, ref Vector3 b) Parameters Type Name Description UnityEngine.Vector3 a UnityEngine.Vector3 b"
  },
  "api/ProjectDawn.Navigation.ShapeType.html": {
    "href": "api/ProjectDawn.Navigation.ShapeType.html",
    "title": "Enum ShapeType",
    "keywords": "Enum ShapeType Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum ShapeType Fields Name Description Circle Cylinder"
  },
  "api/ProjectDawn.Navigation.SonarAvoidMode.html": {
    "href": "api/ProjectDawn.Navigation.SonarAvoidMode.html",
    "title": "Enum SonarAvoidMode",
    "keywords": "Enum SonarAvoidMode Modifications of sonar avoidance funcionality. Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax public enum SonarAvoidMode Fields Name Description Default Default mode. IgnoreBehindAgents Ignores agents that are behind."
  },
  "api/ProjectDawn.Navigation.StraightPathFlags.html": {
    "href": "api/ProjectDawn.Navigation.StraightPathFlags.html",
    "title": "Enum StraightPathFlags",
    "keywords": "Enum StraightPathFlags Namespace : ProjectDawn.Navigation Assembly : ProjectDawn.Navigation.dll Syntax [Flags] public enum StraightPathFlags Fields Name Description End OffMeshConnection Start"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog [3.2.0] - 2023-07-16 Added NavMeshSettings singleton Added settings component mirroring in the project settings under new tab Agents Navigation Added new component Agent Smart Stop from Zerg Samples Added default configurations for AgentBody/AgentSteering/AgentCollider/AgentShape/AgentSeparation/NavMeshPath Added EntityNodes to AgentNavMeshAuthoring Added warning for agent authoring in case no shape is added Added error then NavMeshQuerySystem is attempted to be created in edit mode Changed velocity to account collision with agents and navmesh Changed SonarAvoidance radius scale with velocity Changed SonarAvoidance to be float2 now. First value represents angle of velocity obstacle and second one maximum allowed angle Changed AgentCylindreShapeAuthoring icon (I hope you will enjoy new one) Fixed SonarAvoidance Walls no longer produces extremely small paths Fixed hybrid mode have correct LocalTransform scale 1 Fixed spatial partitioning to use same same query to avoid inconsistencies Fixed component UI updating previous frames values [3.1.6] - 2023-04-11 Changed seperation algorithm Added weight property to seperation Fixed NavMesh Area Mask correctly work with no sequential layers [3.1.5] - 2023-03-29 Added NavMeshSurface surface baker and now it can be baked in subscene Added sample scene low level sonar avoidance to show its usage Added enable/disable to AgentNavMeshAuthoring and AgentAvoidAuthoring Chanded AgentSonarAvoid and NavMeshPath is now IEnableableComponent Fixed support for entities 1.0.0-preview.65 Fixed acceleration correctling working with huge values Fixed sonar avoidance quality regression from 3.1 [3.1.4] - 2023-02-22 Changed com.unity.entities package version from 1.0.0-pre.15 to 1.0.0-pre.44 Fixed AgenAuthroing.Stop to correctly set velocity to zero [3.1.3] - 2023-02-16 Added support for RectTransform [3.1.2] - 2023-02-10 Added SetDestinationDeferred to agent Fixed navmesh area mask editor property work correctly Changed agent capacity automatically resizing, removed AgentCapacity property for SpatialPartitioningSettings Changed gizmos system to be in the same group AgentGizmosSystemGroup [3.1.1] - 2023-02-07 Fixed compilation issue as one of the assembly was not set to Editor [3.1.0] - 2023-01-31 Added new feature to local avoidance Walls that accounts for navmesh. Added new property to AgentNavMeshAuthoring UseWalls. Changed standing agents now puch each other. Fixed local avoidance gizmos drawing. Fixed then desination either above or below agent would result in error. Fixed path failure case then it is out of nodes and path is in progress. [3.0.6] - 2023-01-11 Fixed NavMesh path sometimes discarding destination Fixed error drop when selecting agent in subscene \"The targets array should not be used inside OnSceneGUI or OnPreviewGUI. Use the single target property instead. UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&)\" [3.0.5] - 2022-12-26 Fixed NavMeshAgent correctly stop if path destination can not be mapped to navmesh Fixed that even with OutOfNodes still returns best possible path Added NavMeshPath failed state and also prints the error in editor Added NavMeshAgent/NavMeshPath added new property MappingExtent that allows controling the maximum distance the agent will be mapped Added documentation links to components and package Changed documentation to hidden folder as now it is on webpage [3.0.4] - 2022-12-23 Fixed NavMeshAgent correctly handle partial paths (Paths where destination can not be reached) Fixed few more cases where NavMesh update would result in \"Any jobs using NavMeshQuery must be completed before we mutate the NavMesh.\" Fixed NavMeshAgent in some cases reusing path from other agent Changed Zerg scene camera to be centered around controllable units [3.0.3] - 2022-12-17 Added to EntityBehaviour OnEnable and OnDisable Added error message box to AgentNavMeshAuthoring, if game objects also has NavMeshObstacle Added SetDestination method to AgentAuthoring Changed that if agent is not near any NavMesh it will throw error instead moved to the center of the world Fixed few cases where NavMesh update would result in \"Any jobs using NavMeshQuery must be completed before we mutate the NavMesh.\" [3.0.2] - 2022-12-15 Fixed NavMesh at the end of destination throwing error System.IndexOutOfRangeException: Index {0} is out of range of '{1}' Length . Fixed transform sync from game object to entity not override transform in most calls. [3.0.1] - 2022-12-08 Added correct documentation Added com.unity.modules.ui dependency as samples uses ui Removed second navmesh surface from zerg samples [3.0.0] - 2022-11-30 Release as Agents Navigation [2.0.0] - 2022-06-09 Changing velocity avoidance with new smart algorithm Changing package to use new Package Manager workflow Updating documentation to be more clear and reflect new API changes Adding zerg sample [1.0.3] - 2022-05-14 Adding new demo scene \"8 - Jobified Boids Navmesh Demo\" [1.0.2] - 2022-03-19 Fixing memory leaks in demo scenes [1.0.1] - 2022-03-08 Updated jobs demo to not use physics and small bug fix [1.0.0] - 2022-02-22 Package released"
  },
  "index.html": {
    "href": "index.html",
    "title": "Agents Navigation",
    "keywords": "Agents Navigation High performance, modular and scalable navigation for agents."
  },
  "manual/entities.html": {
    "href": "manual/entities.html",
    "title": "Entities",
    "keywords": "Entities For those who plan to use ECS in your project or want to squeeze as much performance as possible, you can directly use entities and their agent components. All you need to do is add your Agents to ECS `SubScene. Note. If you are not familiar with ECS. I highly recommend first learning the basics of ECS , before continuing this section. Almost all agents will have these components (Static agents might not have AgentBody ): Core Component Information Agent Agent tag. AgentBody Agent's body movement. AgentShape Represents agent shape in space. Boids components based on Craig Reynolds. Only exception is AgentSonarAvoid which is novel solution. Boids Component Information AgentSteering Agent's steering towards destination with arrival. AgentSeparation Agent separation from nearby agents. AgentSonarAvoid Agent avoidance of nearby agents using Sonar Avoidance algorithm. AgentCollider This component tags, if agent should collide with nearby agents. NavMesh components enable navigation on Unity builtin NavMesh system. NavMesh Component Information NavMeshPath Agent NavMesh path. NavMeshNode Agent NavMesh single node of path. For example, if you have agents that have components: Agent , AgentBody , AgentShape , AgentSteering , AgentSonarAvoid , AgentCollider , NavMeshPath and NavMeshNode . Execution logic would be: NavMeshPath would request new path into DynamicBuffer<NavMeshNode> . AgentSteering would compute steering direction into AgentBody . DynamicBuffer<NavMeshNode> would modify steering direction of AgentBody by following path locations. AgentSonarAvoid would modify steering direction of AgentBody to account for avoiding nearby Agents . AgentSteering and AgentBody would be used to translate Agent position. NavMeshPath would be used to correct position to make sure Agent is still in Nav Mesh. Debug In case you find some behaviors working unexpectedly, it is recommended to try debug gizmos functionality. This can be enabled per entity by adding component DrawGizmos to it."
  },
  "manual/game-objects.html": {
    "href": "manual/game-objects.html",
    "title": "Game Objects",
    "keywords": "Game Objects Since this package is designed to be modular, most of the navigation behaviors are spread across many components. This enables a wide variety of customizations, as users can add and remove behaviors even per agent. All components essentially only contain authoring data and no logic. The Agent component internally creates an entity and synchronizes data between them. Note: It is recommended to minimize agent component reading as it will require synchronization of jobs."
  },
  "manual/game-objects/agent.html": {
    "href": "manual/game-objects/agent.html",
    "title": "Agent",
    "keywords": "Agent This is the main component that marks a GameObject / Entity as an Agent . In this package, everything that participates in navigation will be considered an Agent , whether it is just a static obstacle or dynamic. If the agent type is set to Steering , it will also include Steering and Arrival behaviors. This will allow the agent to steer towards its destination and smoothly stop."
  },
  "manual/game-objects/avoidance.html": {
    "href": "manual/game-objects/avoidance.html",
    "title": "Avoidance",
    "keywords": "Avoidance Avoidance is one of the core features of navigation. It is used to avoid obstacles and other agents. It is important to understand that avoidance relies on heuristics and is not a perfect solution. There may be situations where agents will not be able to avoid each other, or they might get stuck in a loop trying to avoid each other. Additionally, it is essential to grasp that avoidance is not a replacement for pathfinding. Instead, it complements pathfinding by helping agents avoid obstacles and other agents while following their path. Note: A good way to understand the difference between avoidance and pathfinding is to think of pathfinding as a person with a map and avoidance as a person with a flashlight in a dark room. Pathfinding helps you find a way to the destination, while avoidance helps you navigate around obstacles and other agents along the way."
  },
  "manual/game-objects/avoidance/separation.html": {
    "href": "manual/game-objects/avoidance/separation.html",
    "title": "Agent Separation",
    "keywords": "Agent Separation This component enables one of the Boids behaviors called separation. It is very lightweight algorithm and quite recommended for games that do not require good quality avoidance."
  },
  "manual/game-objects/avoidance/sonar-avoidance.html": {
    "href": "manual/game-objects/avoidance/sonar-avoidance.html",
    "title": "Agent Sonar Avoid",
    "keywords": "Agent Sonar Avoid This component enables avoidance between nearby agents using the Sonar Avoidance solution. It implements the Local Avoidance package. This behavior has many similarities with RVO (Reciprocal Velocity Obstacles) and ORCA (Optimal Reciprocal Collision Avoidance) algorithms and solves similar problems. The main difference with Sonar Avoidance is that it is more focused on the quality of a particular agent as opposed to the quality of the whole group. For this reason, it exhibits behaviors like circling around the target, which is highly sought after in games. Debugging When selecting the agent component, you can see gizmos that will help you debug and understand what is happening. The green volume will indicate the agent's non-obstructed area where it can go. Note: To make it work with Entities, you will need to add the DrawGizmos component to the agent entity and select any Agent component. Frequently asked questions Why is my agent circling the target forever? If the destination is unreachable, it is quite possible for the agent to get into a state where it would start circling back and forth. To solve this issue, it is recommended to implement a termination state. For example, if the agent does not make progress towards the target for some time, then it should stop and report failure. Also, playing around with the Radius and Angle fields, and reducing them, should reduce the circling behavior. I want my agent to follow/attack another agent, but it starts to go around it? This happens because the destination you set is inside the agent. As it fails to reach the destination, it starts to circle around the target. To solve this, there is a simple solution to offset the destination by some distance in front of the target. This will make the agent go towards the target and stop in front of it. Sometimes agents still overlap? The avoidance algorithm is based on velocity, but it does not account for acceleration. In some rare cases, it is possible for agents to overlap. Also, if you have Blocked Stop disabled, in the case of being fully blocked, it would fallback to regular direction disregarding avoidance. To solve this, you can use the Agent Collider component to enable collision between agents. With the Nav Mesh component added, my agent moon-walks into the wall? By default, Sonar has no understanding of nav mesh obstacles, so the algorithm gives direction without accounting for them. There is a new feature called Use Walls that will insert nav mesh edges into Sonar Avoidance as obstacles."
  },
  "manual/game-objects/collider.html": {
    "href": "manual/game-objects/collider.html",
    "title": "Agent Collider",
    "keywords": "Agent Collider This component will enable collisions between agents. This component is quite useful complimentary piece with avoidance algorithms, as they not always yield perfect results. Note. This components does not uses Unity physics system, but rather it uses custom solution."
  },
  "manual/game-objects/pathing.html": {
    "href": "manual/game-objects/pathing.html",
    "title": "Pathing",
    "keywords": "Pathing Pathing is a system that allows you to find a path between two points in a scene. It is used by the navigation system to determine a route between two points in the scene. Additionally, the AI system utilizes pathing to find a path to a target."
  },
  "manual/game-objects/pathing/nav-mesh.html": {
    "href": "manual/game-objects/pathing/nav-mesh.html",
    "title": "Agent Nav Mesh",
    "keywords": "Agent Nav Mesh This component enables these agents to use Unity's built-in NavMesh system. For more information, check AI Navigation . Debugging When selecting the agent component, you can see gizmos that will help you to debug and understand what is happening. Blue polygons will indicate the NavMesh path, and the end node will always have the strongest color. Note: To make it work with Entities, you will need to add the DrawGizmos component to the agent entity and select any Agent component."
  },
  "manual/game-objects/shape.html": {
    "href": "manual/game-objects/shape.html",
    "title": "Shape",
    "keywords": "Shape Agent Cylinder Shape This component specifies the agent shape that will be used in navigation. Cylinder shape will indicate that the agent should be simulated in 3d space with Y as an up axis. Agent Circle Shape This component specifies the agent shape that will be used in navigation. The circle shape will indicate that the agent should be simulated in 2d space with Z as an up axis."
  },
  "manual/game-objects/smart-stop.html": {
    "href": "manual/game-objects/smart-stop.html",
    "title": "Smart Stop",
    "keywords": "Smart Stop This component enables smarter decision-making for agents on when to stop. Hive Mind Stop This behavior is group-based, where the agent attempts to stop when all agents in the group are stopped. It effectively handles scenarios where a group of agents attempts to move to the same destination. Every frame, the agent will check nearby idle agents to see if their destination is similar to its own. If so, it will stop."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Agents Navigation",
    "keywords": "Agents Navigation This package includes high performance, modular and scalable navigation for agents. It is developed with DOTS in mind. As result, it takes advantage of Unity's latest technology stack like SIMD mathematics , Jobs , Burst compiler and EntityComponentSystem . Additionally, there is hybrid mode support that enables using it with GameObjects in Object Oriented Programming. One huge problem with navigation is that there is no single solution that would work for all games. Even one of the GDC 2011 talks about navigation was named AI Navigation: It's Not a Solved Problem - Yet , where studios presented unique solutions for solving their navigation problems. For this reason, this package's goal is not to give one universal solution, but actually give a foundation for agent navigation that can be customized and extended to user needs. This package is designed to work with both concepts DOD (Data oriented design) and OOP (Object oriented programming). Both share the same authoring components. Dependencies Minimum Unity 2022.2 version Package com.unity.entities@1.0.11 Package com.unity.ai.navigation@1.1.4 Support If you have questions, bugs or feature requests use Discord ."
  },
  "manual/known-issues.html": {
    "href": "manual/known-issues.html",
    "title": "Known Issues",
    "keywords": "Known Issues Spatial partitioning for now does not account well for different agent radius. This will be fixed. Nav Mesh Link is currently not supported. It will be added in the future."
  },
  "manual/quick-start.html": {
    "href": "manual/quick-start.html",
    "title": "Quick Start",
    "keywords": "Quick Start This package is set up to support both GameObject (using components that inherit MonoBehaviour class) and Entity (ECS package) workflows. Here is a quick start guide to get you started with each workflow. GameObjects Create a game object using the menu item \"GameObject > AI > Agents Navigation > Agent Cylinder\". Create a new script \"AgentSetDestination.cs\" and attach it to the agent game object. using UnityEngine; using ProjectDawn.Navigation.Hybrid; public class AgentSetDestination : MonoBehaviour { public Transform Target; void Start() { GetComponent<AgentAuthoring>().SetDestination(Target.position); } } Create another game object that will be used as a target for the script AgentSetDestination.cs , and assign it to the Target field. Finally, click play, and the agent should start moving towards the target. Note: This minimal setup will only include the steering behavior and will not include any avoidance. Other Behaviors To add additional behaviors to the agent, you can add them as components to the agent game object. For more detailed information about each behavior, check the Game Objects section. Agent Collider : This component will enable collisions between agents. Agent Sonar Avoid : This component will enable avoidance between nearby agents using the Sonar Avoidance solution. Agent Nav Mesh : This component will enable the agent to navigate using Unity Nav Mesh. ... Entities Sub-scene Before jumping into this section, make sure you are familiar with Entities and Baking concepts and have Entities Graphics setup . Assuming you have already followed the previous section on Game Objects, you can now convert your game object agent to an entity agent. To do this, create a new sub-scene and add your Agent Cylinder and Destination game objects to it. Extend the previous script AgentSetDestination.cs with ECS component, baker, and system that will set the agent's destination using the AgentBody component. using UnityEngine; using ProjectDawn.Navigation.Hybrid; using Unity.Entities; using Unity.Mathematics; using ProjectDawn.Navigation; public class AgentSetDestination : MonoBehaviour { public Transform Target; void Start() { GetComponent<AgentAuthoring>().SetDestination(Target.position); } } // ECS component public struct SetDestination : IComponentData { public float3 Value; } // Bakes mono component into ecs component class AgentSetDestinationBaker : Baker<AgentSetDestination> { public override void Bake(AgentSetDestination authoring) { AddComponent(GetEntity(TransformUsageFlags.Dynamic), new SetDestination { Value = authoring.Target.position }); } } // Sets agents destination partial struct AgentSetDestinationSystem : ISystem { public void OnUpdate(ref SystemState systemState) { foreach (var (destination, body) in SystemAPI.Query<RefRO<SetDestination>, RefRW<AgentBody>>()) { body.ValueRW.SetDestination(destination.ValueRO.Value); } } } Finally, click play, and the agent should start moving towards the target. Entities Code This section will show you how to create an agent using code. This is useful when you want to create agents dynamically. Note: It is always recommended to use the sub-scene workflow when possible. var entity = EntityManager.CreateEntity(); // Agent tag is required for agent to work EntityManager.AddComponent<Agent>(entity); // AgentBody for dynamic agents EntityManager.AddComponentData(entity, AgentBody.Default); // AgentSteering for steering behaviour EntityManager.AddComponentData(entity, AgentSteering.Default); // AgentShape for default cylinder shape EntityManager.AddComponentData(entity, AgentShape.Default);"
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples",
    "keywords": "Samples In a package folder named Samples you can find projects that showcase possible use cases. Samples in this package are contained in a hidden folder named Samples~ and they can be imported using Package Manager. This allows package to be lighter if samples are not used. To import samples, follow these steps: Click menu item Window/Package Manager to open package manager window. Make sure you selected tab Packages: In Project . Find package Agents Navigation . Find button Samples and click it. Node. Make sure tab Packages: In Project is selected. For more information check https://docs.unity3d.com/2022.2/Documentation/Manual/cus-samples.html . Scenarios Contains small isolated test scenes that showcases some common navigation behaviors (etc. circle, hallway, group ...). Mass Stress test scene where thousands of agents are spawned and navigate through static and dynamic obstacles. Zerg Small subset of RTS game. With some common controls like smart stop, attack, follow, combat..."
  },
  "manual/settings.html": {
    "href": "manual/settings.html",
    "title": "Settings",
    "keywords": "Settings Settings in this package are approached slightly differently than typical Unity settings. All settings are stored as components in the scene and are singletons. This approach allows having multiple settings in the scene and switching between them at runtime. For example, to change nav mesh settings, you need to create a singleton game object and add the Nav Mesh Settings component to it. Project Settings Agents navigation also contains a tab in the Project Settings window where all scene setting components are shown in one place."
  },
  "manual/settings/nav-mesh-settings.html": {
    "href": "manual/settings/nav-mesh-settings.html",
    "title": "Nav Mesh Settings",
    "keywords": "Nav Mesh Settings"
  },
  "manual/settings/spatial-partitioning-settings.html": {
    "href": "manual/settings/spatial-partitioning-settings.html",
    "title": "Spatial Partitioning Settings",
    "keywords": "Spatial Partitioning Settings This component is singleton and allows modifying some properties of spatial partitioning."
  },
  "manual/sonar-avoidance.html": {
    "href": "manual/sonar-avoidance.html",
    "title": "Sonar Avoidance",
    "keywords": "Sonar Avoidance Component Agent Sonar Avoid is based on this previous package version called Local Avoidance 2.0 . Users can still use SonarAvoidance directly without ECS interface. This local avoidance uses novel solution called SonarAvoidance . Idea is very simple. Interest point constructs sonar volume shaped in circle, that scans for nearby obstacles. Each obstacle cuts into the volume. Once all obstacles are scanned, the best direction can be calculated from it. The solution is designed to be lightweight so it could be moved into any design. Thus the whole functionality is contained of single struct called SonarAvoidance . Constructor Sonar can be created with simple constructor. var sonar = new SonarAvoidance(position, direction, up, innerRadius, outerRadius, speed); Circular Obstacle Circular shape obstacles usually used for other agents. bool success = sonar.InsertObstacle(obstaclePosition, obstacleVelocity, obstacleRadius); Obstacle with 0 velocity Obstacle with negative y axis velocity Note: Blue points shows where sonar would collide with collider red point at specific time. There can be multiple collision points. Directional Obstacle Directional shape obstacles usually used for limiting agent vision. bool success = sonar.InsertObstacle(obstacleDirection, obstacleRadius); With negative x direction and 180 degress Cleanup If you want to re-use the structure for next frame you can clear it. sonar.Clear() Or destroyed with dispose interface. sonar.Dispose();"
  }
}